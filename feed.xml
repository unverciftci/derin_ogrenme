<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://unverciftci.github.io/derin_ogrenme/feed.xml" rel="self" type="application/atom+xml" /><link href="https://unverciftci.github.io/derin_ogrenme/" rel="alternate" type="text/html" /><updated>2020-06-16T12:01:42-05:00</updated><id>https://unverciftci.github.io/derin_ogrenme/feed.xml</id><title type="html">Derin Öğrenme Kitabı</title><subtitle>Derin Öğrenmeye Giriş</subtitle><entry><title type="html">Veri Yönetimi(✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/06/15/_06_13_veri_yonetimi.html" rel="alternate" type="text/html" title="Veri Yönetimi(✗)" /><published>2020-06-15T00:00:00-05:00</published><updated>2020-06-15T00:00:00-05:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/06/15/_06_13_veri_yonetimi</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/06/15/_06_13_veri_yonetimi.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020_06_13_veri_yonetimi.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Veri-Y&amp;#246;netimi&quot;&gt;&lt;strong&gt;Veri Y&amp;#246;netimi&lt;/strong&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#Veri-Y&amp;#246;netimi&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Birşey yapılması için veri depolamak ve veri işlemeye bir yol bulmamız gerekir. Genel olarak veri ile yapmamız gereken iki önemli şey vardır: (i) veriyi elde etmek, (ii) bilgisayara girdikten sonra verileri işlemek. Veri depolamanın bir yolu olmadan elde etmenin bir anlamı yok. Bu yüzden önce sentetik verileri ele alarak başlayalım. Başlamak için n-boyutlu dizi ortaya koyuyoruz. Numpy ve MXNet'te böyle bir diziye ndarray PyTorch ve TensorFlow da Tensor denir. Bu kitap boyunca ndarray ismini kullanıyoruz. ndarray bir sınıftır ve her örneğe bir ndarray diyoruz.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;MXNet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python'da en çok kullanılan bilimsel hesaplama paketi olan Numpy çalıştıysanız, bu bölümü tanıdık bulacaksınız. MXNet de ndarray bir sınıftır ve her hangi bir tensor(n boyurlu dizi) bir ndarray örneğidir. 
  MXNet'in tensorleri, Numpy'ın tensorlerine(n boyutlu dizilerine) birkaç önemli özellik ile birlikte bir genişlemesidir. İlk olarak MXNet'in tensorleri CPU, GPU ve dağıtılmış bulut mimarileri üzerinde asenkron hesaplamaları desteklerken, Numpy sadece CPU hesaplamasını destekler. İkinci olarak MXNet'in tensorleri otomatik türevi destekler. Bu özellikler derin öğrenme için MXNet'in tensorlerini uygun hale getirir. Bu kitap boyunca tensorler dediğimizde aksini ifade etmedikçe MXNet'in ndarray örneklerinden söz ediyoruz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Ba&amp;#351;lang&amp;#305;&amp;#231;&quot;&gt;&lt;strong&gt;Ba&amp;#351;lang&amp;#305;&amp;#231;&lt;/strong&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#Ba&amp;#351;lang&amp;#305;&amp;#231;&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bu bölümde, bu kitabın başından sonuna kadar ilerledikçe inşa edeceğiniz temel matematik ve sayısal hesaplama araçları ile sizi hazırlamak ve çalıştırmayı amaçlıyoruz. Matematik kavramlarının veya kütüphane fonksiyonlarının bazılarını anlamaya çalışıyorsanız eğer endişelenmeyin. Aşağıdaki bölümler pratik örnekler ile birlikte bu materyali yeniden ele alacaktır. Diğer yandan eğer biraz geçmişiniz varsa ve matematiksel içeriğin daha derinine inmek istiyorsanız, bu bölümü geçebilirsiniz.&lt;/p&gt;
&lt;p&gt;Başlamak için MXNet'den np(numpy) ve npx(numpy_extension) modüllerini yükleyelim. Burada npx modülü Numpy gibi bir ortamda derin öğrenmeyi güçlendirmek için geliştirilmiş bir genişleme kümesi içerirken, np modülü Numpy tarafından desteklenen fonksiyonları içermektedir. Tensorleri kullanırken her zaman set_np() fonksiyonunu çağırırız. Bu MXNet'in diğer bileşenleri ile tensor işleme uyumu içindir.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#Öncelikle MXNet&amp;#39;i indiriyoruz.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bir tensor sayısal değerlere sahip bir dizi(muhtemelen çok boyutlu) temsil eder. Matematikte bir eksenli tensor bir vektöre karşılık gelir. İki eksenli bir tensor ise matrise karşılık gelir. İkiden fazla eksenli diziler matematiksel olarak bir isme sahip değildir. Biz bunlara tensor diyoruz.&lt;/p&gt;
&lt;p&gt;Varsayılan değeri float olarak oluşturmasına rağmen, 0 ile başlayan ilk 12 tam sayıyı içeren bir satır vektörü olan x'i oluşturmak için 'arrange' fonksiyonunu kullanabiliriz. Bir tensordeki değerlerin hepsi tensorün bir elemanı olarak adlandırılır. Örneğin, x tensoründe 12 eleman vardır. Aksi belirtilmediği sürece yeni bir tensor ana hafızada depolanacak ve CPU tabanlı hesaplama için tasarlanacak.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bir tensorün satır ve sutün sayısını öğrenmek için shape özelliğini kullanabiliriz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Sadece bir tensorün elemenlarının toplam sayısını bilmek istersek, size özelliğini kullanabiliriz. Burada bir vektörle uğraştığımız için shape fonksiyonunun değeri ile size fonksiyonunun değeri aynı sayıyı döndürür.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bir tensorün eleman sayısını veya değerini değiştirmeden shape'ini değiştirmek için reshape fonksiyonunu kullanabiliriz. Örneğin, (12,) shape sahip x vektörünü, (3,4) shape li bir matrise dönüştürebiliriz. Bu yeni tensör tamamen aynı değerleri içerir. Ancak 3 satır ve 4 sütun olarak düzenlenmiş bir matris olarak görünürler. Yani tensörün shape i değişmesine rağmen içindeki değerler değişmez. Boyutun yeniden şekillendirilerek değiştirilmediğine dikkat edin.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Her boyutu manuel olarak belirterek yeniden şekillendirmeye gerek yoktur. Hedef şeklimiz (yükseklik,genişlik) olan bir matris ise genişliği bildikten sonra yükseklik kapalı bir şekilde verilir. Neden bölmeyi kendimiz yapmak zorundayız? Yukarıdaki örnekte 3 satırlık bir martis almak için hem 3 satır hemde 4 sütunlu olması gerektiğini belirttik. Neyse ki tensörler satır sayısı verildiğinde sütun sayısını,sütun sayısı verildiğinde de satır sayısını hesaplayabilir. Bunu, tensörün otomatik olarak çıkarım yapmasını istediğimiz boyutu -1 ile değiştirerek sağlıyoruz. Yani, x.reshape(3,4) olarak şekillendirmek yerine x.reshape(3,-1) veya x.reshape(-1,4) olarak yeniden şekillendirebiliriz. Hepsinde de sonuç aynıdır.
  empty metodu bir yığın hafızayı tutar ve bize girdilerinin herhangi birinin değerini değiştirmek için uğraşmadan bir matris geri verir.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Tipik olarak, biz ya sıfırlar, birler, bazı diğer sabitler ya da belirli bir dağılımdan rasgele örneklenmiş sayılar ile başlatılmış matrisler isteyeceğiz. Tüm elemanları 0 ve (2,3,4) şeklindeki bir tensörü temsil eden bir tensörü aşağıdaki gibi oluşturabiliriz:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Benzer şekilde, her elemanı 1 olan tensörleri aşağıdaki gibi oluşturabiliriz:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Çoğunlukla, bazı olasılık dağılımlarından bir tensördeki her elemanın değerini rasgele örneklemek isteriz. Örneğin, bir sinir ağındaki parametreler olarak kullanılacak dizileri oluşturduğumuzda, parametrelerin değerlerini alışıla geldik bir şekilde rasgele oluşturacağız. Aşağıdaki kod parçasında (3,4) şekle sahip bir tensör oluşur. Tensörün her elemanı ortalaması 0 ve standart sapması 1 olan Gaussian(normal) dağılım dan rasgele örneklenmiştir.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Sayısal değerler içeren bir Python listesi veya listeleri oluşturarak istenen tensördeki her eleman için kesin değerleri de belirtebiliriz. Burada en dıştaki liste 0 eksenine, içteki liste ise 1 eksenine karşılık gelir.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;&amp;#304;&amp;#351;lemler&quot;&gt;&lt;strong&gt;&amp;#304;&amp;#351;lemler&lt;/strong&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#&amp;#304;&amp;#351;lemler&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Lineer Regresyon (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/25/Linear-Regresyon.html" rel="alternate" type="text/html" title="Lineer Regresyon (✗)" /><published>2020-02-25T00:00:00-06:00</published><updated>2020-02-25T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/25/Linear-Regresyon</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/25/Linear-Regresyon.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-25-Linear-Regresyon.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Linear-Regression&quot;&gt;Linear Regression&lt;a class=&quot;anchor-link&quot; href=&quot;#Linear-Regression&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;em&gt;Regresyon&lt;/em&gt;, bir veya daha fazla bağımsız değişkenle bir bağımlı değişkenin ilişkisini modelleyen metodlara verilen genel isimdir. Doğa bilimlerinde ve sosyal bilimlerde regresyonun amacı genellikle girdiler ve çıktılar arasındaki bağı karakterize etmektir. Buna karşın Makine Öğrenmesi ise çoğunlukla &lt;em&gt;tahmin&lt;/em&gt; ile ilgilidir.&lt;/p&gt;
&lt;p&gt;Ne zaman sayısal bir değeri tahmin etmek istesek regresyon karşımıza çıkar. Yaygın örnekler arasında fiyat tahmini (ev, hisse senedi gibi), bir yerde kalma süresinin tahmini (hastanede kalma süresi gibi), arz tahmini (emlak satışları için) vardır. Her tahmin problemi regresyon problemi değildir. İleriki bölümlerde sınıflandırma problemlerini inceleyeceğiz. Sınıflandırmada amaç kategoriler arasından doğru olanı tahmin etmedir, dolayısıyla regresyon problemi değildir.&lt;/p&gt;
&lt;h2 id=&quot;Lineer-Regresyonun-Temel-&amp;#214;geleri&quot;&gt;Lineer Regresyonun Temel &amp;#214;geleri&lt;a class=&quot;anchor-link&quot; href=&quot;#Lineer-Regresyonun-Temel-&amp;#214;geleri&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Lineer regresyon&lt;/em&gt;, standart regresyon araçları arasında hem en popüler hem de en basit olanıdır. Geçmişi 19. Yüzyıla dayanan lineer regresyon basit bir kabülden yola çıkar. Öncelikle $\mathbf{x}$ bağımsız değişkenleri ile $y$ bağımlı değişkeninin lineer olarak bağlantılı olduğunu kabul ederiz. Yani $y$ değişkeni $\mathbf{x}$ vektörünün bileşenlerinin lineer birleşimi ile gözlem hatasınının toplamıdır. İkincisi, gözlem hatasının düzenli olduğunu kabul ederiz(özel olarak Gauss dağılımına sahiptir).&lt;/p&gt;
&lt;p&gt;Amacımızı daha iyi ifade etmek için bir örnek kullanalım. Ev fiyatlarını alanına ve yaşına göre tahmin etmek istiyoruz. Bu kestirimi yapabilmek amacıyla uygulayacağımız model için fiyatını, alanını ve yaşını bildiğimiz satış verisine (data set) ihtiyacımız var. Makine Öğrenmesi terminolojisinde veriye &lt;em&gt;eğitim seti&lt;/em&gt; (training set) ve bu kümenin elemanlarına (bu örnekte her bir satış oluyor) bir &lt;em&gt;örnek&lt;/em&gt; ya da &lt;em&gt;veri noktası&lt;/em&gt; denir. Bu örnekteki fiyat gibi tahmin etmeye çalıştığımız şeye &lt;em&gt;etiket&lt;/em&gt; (label) ya da &lt;em&gt;hedef&lt;/em&gt; (target) denir. Örneğimizdeki evin alanı ve yaşı gibi bağımsız değişkenlere &lt;em&gt;özellikler&lt;/em&gt; (features) denir.&lt;/p&gt;
&lt;p&gt;Veri kümemizdeki örneklerin sayısını $n$ ile gösteriyoruz. Veri örneklerini indekslemek için $i$ harfini kullanacağız. Dolayısyla $y^{(i)}$ etiketine karşılık gelen özellikler $\mathbf{x}^{(i)} = [x_1^{(i)}, x_2^{(i)}]^\top$ ile gösterilecektir.&lt;/p&gt;
&lt;h3 id=&quot;Lineer-Model&quot;&gt;Lineer Model&lt;a class=&quot;anchor-link&quot; href=&quot;#Lineer-Model&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Lineerlik kabulü gereği hedef (fiyat), özelliklerin (alan ve yıl) lineer birleşimidir:&lt;/p&gt;
&lt;p&gt;
$$fiyat = w_{\textrm{alan}} \cdot \textrm{alan} + w_\textrm{yıl} \cdot \textrm{yıl} + b.$$
&lt;/p&gt;
&lt;p&gt;Burada , $w_{\textrm{alan}}$ and $w_{\textrm{yıl}}$ katsayılarına &lt;em&gt;ağırlıklar&lt;/em&gt;, $b$ sayısına &lt;em&gt;yanlılık&lt;/em&gt; denir. Ağırlıklar her bir özelliğin (feature) tahminimiz üzerinde ne kadar etkili olduğunu, yanlılık terimi de tüm özellikler sıfır olduğunda tahmin edilen fiyatın kaç olduğunu belirler. Evin alanı veya yaşı sıfır olmaz ama yanlılık terimi modelimizin temsil yeterliliğinin kısıtlanmaması açısından önemlidir.&lt;/p&gt;
&lt;p&gt;Amacımız, elimizdeki veri için $\mathbf{w}$ ağırlılarını ve $b$ yanlılığını uygun şekilde belirlemektir. Bu sayede modelimizin yaptığı tahminler ile veri kümesindeki gerçek değerler ortalama olarak örtüşmelidir.&lt;/p&gt;
&lt;p&gt;Makine öğrenmesinde genellikle yüksek boyutlu veri kümeleri ile çalışılır, yani özelliklerin sayısı çok fazladır. Örneğin bir fotoğrafın her bir pikseli bir özellik olarak alınır. Dolayısıyla matrisler ve vektörler gibi Lineer Cebir araçlarını kullanmak daha yararlı olur. Her bir veri (girdi), $d$ özelliğe sahip ise $\hat{y}$ tahminimizi&lt;/p&gt;
&lt;p&gt;
$$\hat{y} = w_1  x_1 + ... + w_d  x_d + b.$$
&lt;/p&gt;
&lt;p&gt;şeklinde ifade ederiz. Tüm özellikleri $\mathbf{x} \in \mathbb{R}^d$ vektörünün bileşenleri ile, tüm ağırlıkları da $\mathbf{w} \in \mathbb{R}^d$ vektörünün bileşnleri ile gösterirsek, modelimizi&lt;/p&gt;
&lt;p&gt;
$$\hat{y} = \mathbf{w}^\top \mathbf{x} + b$$
&lt;/p&gt;
&lt;p&gt;nokta çarpımıyla ifade etmiş oluruz.&lt;/p&gt;
&lt;p&gt;Burada $\mathbf{x}$ vektörü bir tek veri örneğine karşılık gelen özellik vektörüdür. Veri kümesi $n$ örnekten oluşsun ve hepsini $\mathbf{X} \in \mathbb{R}^{n \times d}$ matrisinde bir araya getirelim. Burada her bir $\mathbf{x}$ vektörü $\mathbf{X}$ matrisinin bir satırını oluşturmaktadır. $\mathbf{X}$ matrisine &lt;em&gt;dizayn matrisi&lt;/em&gt; veya &lt;em&gt;veri matrisi&lt;/em&gt; denir.&lt;/p&gt;
&lt;p&gt;Özelliklerin bir araya getirilmesi ile oluşan $\mathbf{X}$ için  $\hat{\mathbf{y}} \in \mathbb{R}^n$ tahminimiz matris-vektör çarımıyla&lt;/p&gt;
&lt;p&gt;
$${\hat{\mathbf{y}}} = \mathbf{X} \mathbf{w} + b,$$
&lt;/p&gt;
&lt;p&gt;biçiminde ifade edilebilir. Burada $b$ vektörü aslında aynı $b$ sayısının $n$ defa yazılmasıyla oluşan vektördür. Python programlamadaki yayımlama (broadcasting) gibi. Lineer regresyonda amaç, $\mathbf{X}$ eğitim kümemizdeki özellikler ve karşılık gelen $\mathbf{y}$ etiketleri için, aynı dağılımdan gelen yeni bir örnek için tahmindeki hatayı beklenen değer olarak en az yapan $\mathbf{w}$  ve $b$ terimlerini bulmaktır.&lt;/p&gt;
&lt;p&gt;$\mathbf{x}$ verildiğinde $y$ için en iyi tahmini veren modelin lineer olduğunu düşünsek de, her $1 \leq i \leq n$ için gerçek $y^{(i)}$ ile $\mathbf{w}^\top \mathbf{x}^{(i)}+b$ tahmininin eşit olmasını bekleyemeyiz. Örneğin $\mathbf{X}$ özellikleri ve $\mathbf{y}$ etiketleri küçük ölçüm hataları yapılmış olabilir. Dolayısıyla, geri planda yatan ilişkinin lineer olduğundan emin olsak bile bu tür küçük hataları ifade eden bir gürültü (noise) terimini de dahil edeceğiz.&lt;/p&gt;
&lt;p&gt;En iyi $\mathbf{w}$ and $b$ parametrelerini aramaya başlamadan önce iki şey yapmalıyız: (i) modelin kalitesini ölçen bir araç ve (ii) modelin kalitesini iyileştirmek için izlenecek yol.&lt;/p&gt;
&lt;h3 id=&quot;Kay&amp;#305;p-Fonksiyonu-(Loss-Function)&quot;&gt;Kay&amp;#305;p Fonksiyonu (Loss Function)&lt;a class=&quot;anchor-link&quot; href=&quot;#Kay&amp;#305;p-Fonksiyonu-(Loss-Function)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Modelimizi veriye uydurmaya başlamadan önce &lt;em&gt;uyum&lt;/em&gt; (fitness) için bir ölçeğe ihtiyacımız var. &lt;em&gt;Kayıp fonksiyonu&lt;/em&gt; sayesinde &lt;em&gt;gerçek&lt;/em&gt; ve &lt;em&gt;tahmini&lt;/em&gt; değer arasındaki mesafeyi ölçeriz. Kayıp genellikle negatif olmayan bir sayıdır ve küçük olması istenir hatta mükemmel sonuç için sıfırdır. Regresyon problemlerinde en çok kullanılan kayıp fonksiyonu hataların karelerinin toplamıdır. Buna &lt;em&gt;en küçük kareler hata fonksiyonu&lt;/em&gt; da denir. Eğer $i$ numaralı örneğimiz için tahminimiz $\hat{y}^{(i)}$ ve karşılık gelen doğru etiket $y^{(i)}$ ise, hatanın karesi&lt;/p&gt;
&lt;p&gt;
$$l^{(i)}(\mathbf{w}, b) = \frac{1}{2} \left(\hat{y}^{(i)} - y^{(i)}\right)^2$$
&lt;/p&gt;
&lt;p&gt;olur.&lt;/p&gt;
&lt;p&gt;Burada $1/2$ katsayısı sonucu değiştirmez ama türev alındığında sadeleşeceği için işlem kolaylığı sağlar. Eğitim kümemiz hazır olarak verildiğinden bizim kontrolümüz dışındadır, dolayısıyla yukarıdaki deneysel hata (emprical losss) sadece model parametrelerinin fonksiyonudur. Anlatılanları somutlaştırmak adına bir boyutlu durum için regresyon problemini aşağıdaki grafikte gösterelim.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d2l.ai/_images/fit_linreg.svg&quot; alt=&quot;Fit data with a linear model.&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Burada hataların kareleri alındığından büyük hatların kayıp fonksiyonunu çok fazla büyüteceğine dikkat edin. Tüm veri kümesi üzerinden modelin kalitesini ölçmek için hataların ortalamasını (ya da sadece toplamını) alırız:&lt;/p&gt;
&lt;p&gt;
$$L(\mathbf{w}, b) =\frac{1}{n}\sum_{i=1}^n l^{(i)}(\mathbf{w}, b) =\frac{1}{n} \sum_{i=1}^n \frac{1}{2}\left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right)^2.$$
&lt;/p&gt;
&lt;p&gt;Modeli eğitirken, parametrelerin ($\mathbf{w}^*, b^*$) toplam kayıbı en küçük yapmasını yani&lt;/p&gt;
&lt;p&gt;
$$\mathbf{w}^*, b^* = \operatorname*{argmin}_{\mathbf{w}, b}\  L(\mathbf{w}, b)$$
&lt;/p&gt;
&lt;p&gt;istiyoruz.&lt;/p&gt;
&lt;h3 id=&quot;Analitik-&amp;#199;&amp;#246;z&amp;#252;m&quot;&gt;Analitik &amp;#199;&amp;#246;z&amp;#252;m&lt;a class=&quot;anchor-link&quot; href=&quot;#Analitik-&amp;#199;&amp;#246;z&amp;#252;m&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Lineer Regreyon az rastlanır ölçüde basit bir optimizasyon problemidir. Karşılaşacağımız birçok modelin aksine lineer regresyon analitik bir şekilde çözülür ve global optimum bulunur. İlk olarak $b$ yanlılık terimini $\mathbf{w}$ arametrelerine ekleyelelim buna karşılık dizayn matrisine $1$ sayılarından oluşan bir sütun ekleyelim. Bu durumda tahmin problemimiz $||\mathbf{y} - \mathbf{X}\mathbf{w}||^2$ ifadesini minimize etmeye dönüşür. Bu ikinci dereceden bir ifade olduğu için konvekstir ve problem dejenere(özelliklerimiz lineer olarak bağımsız) olmadığından bu ifade kesin konvekstir.&lt;/p&gt;
&lt;p&gt;Dolayısıyla kayıp fonksiyonunun belirttiği yüzey üzerinde bir tek kritik nokta vardır, bu da global minimuma karşılık gelir. Kayıp fonksiyonunun $\mathbf{w}$ üzerinden türevini alıp sıfıra eşitlersek,&lt;/p&gt;
&lt;p&gt;
$$\mathbf{w}^* = (\mathbf X^\top \mathbf X)^{-1}\mathbf X^\top \mathbf{y}$$
&lt;/p&gt;
&lt;p&gt;analitik çözümünü elde ederiz. Analitik çözüm matematiksel analiz için yararlı olsa da matrisin tersini içerdiğinden pratikte kullanışsızdır. Derin öğrenmede bu şekilde analitik çözümler neredeyse hiç kullanılmaz.&lt;/p&gt;
&lt;h3 id=&quot;Gradiyent-Azal&amp;#305;m-(Gradient-descent)&quot;&gt;Gradiyent Azal&amp;#305;m (Gradient descent)&lt;a class=&quot;anchor-link&quot; href=&quot;#Gradiyent-Azal&amp;#305;m-(Gradient-descent)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Modelimizi analitik olarak çözemediğimiz durumlarda ve kayıp yüzeyimiz yüksek boyutlu ve konveks olmasa bile pratikte modelimizi etkin bir biçimde eğitebiliriz. Hatta birçok iş için optimize edilmesi güç görünen bu modeller daha kolay eğitilebilirler ve daha kullanılışlı olurlar.&lt;/p&gt;
&lt;p&gt;Neredeyse tüm Derin Öğrenme modellerinde optimizasyon için kullanılan kilit yöntem, hatayı azaltmak için parametrelerin kayıp fonksiyonunun azaldığı yönde güncellendiği itreratif yöntemdir. Bu algoritmaya &lt;em&gt;gradiyent azalım&lt;/em&gt; denir. Konveks yüzeyler için global minimuma eninde sonunda ulaşılır fakat konveks olmayanlar için (genellikle yeterince iyi olan) bir yerel minimuma yönelir.&lt;/p&gt;
&lt;p&gt;Gradiyent azalımı kullanırken kayıp fonksiyonunun verinin tamamı üzerinden türevini almak kaba bir yaklaşım olur çünkü bu veri kümesindeki her bir örnek için elde edilen kayıp değerlerinin ortalamasıdır. Her güncelleme adımında veri kümesinin tamamını tarayacağımızdan hesap çok uzun sürer. Genellikle her güncellemede verinin tamamı yerine örneklerden rastgele bir &lt;em&gt;yığın&lt;/em&gt; (batch) alınır. Buna &lt;em&gt;stokastik gradiyent azalım&lt;/em&gt; denir.&lt;/p&gt;
&lt;p&gt;Her ötelemede (iteration) belli sayıda örnekten oluşan rastgele küçük bir $\mathcal{B}$ yığını seçilir. Daha sonra yığının ortalama kayıbının model parametrelerine göre türevi (gradiyenti) hesaplanır. Son olarak da gradiyent belli bir $\eta &amp;gt; 0$ adım boyu ile çarpılıp güncel parametre değerinden çıkarılır.&lt;/p&gt;
&lt;p&gt;Güncellemeyi matematiksel olarak şöyle ifade edebiliriz:&lt;/p&gt;
&lt;p&gt;
$$(\mathbf{w},b) \leftarrow (\mathbf{w},b) - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_{(\mathbf{w},b)} l^{(i)}(\mathbf{w},b).$$
&lt;/p&gt;
&lt;p&gt;Burada $\partial$ ile kısmi türev gösterilmektedir. Algoritmanın adımları: (i) parametreler için başlangıç değerleri seçmek, genellikle rastgele seçilir (ii) veriden her bir adım için rastgele yığınlar seçmek ve parametrleri negatif gradiyent doğrultusunda güncellemek olarak özetlenebilir.&lt;/p&gt;
&lt;p&gt;İkinci dereceden kayıplar ve lineer fonksiyonlar için güncellemeyi açık olarak bulabiliriz. Burada $\mathbf{w}$ ve $\mathbf{x}$ vektörlerdir. $w_1, w_2, \ldots, w_d$ bileşenlerini kullanmak yerine, vektör gösterimi matematiksel ifadeleri daha okunaklı yapar. Sonuç olarak güncelleme&lt;/p&gt;
$$
\begin{aligned}
\mathbf{w} &amp;amp;\leftarrow \mathbf{w} -   \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_{\mathbf{w}} l^{(i)}(\mathbf{w}, b) &amp;amp;&amp;amp; =
\mathbf{w} - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \mathbf{x}^{(i)} \left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right),\\
b &amp;amp;\leftarrow b -  \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_b l^{(i)}(\mathbf{w}, b)  &amp;amp;&amp;amp; =
b - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right)
\end{aligned}
$$&lt;p&gt;biçiminde ifade edilebilir. Yukarıdaki eşitliklerde $|\mathcal{B}|$ ile &lt;em&gt;yığın boyutu&lt;/em&gt; (batch size) ve $\eta$ ile de &lt;em&gt;öğrenme parametresi&lt;/em&gt; (learining rate) gösterilmektedir. Yığın boyutu ve öğrenme parametresini önceden belirlediğimizi, bunların öğrenilmediğini vurgulamak gerekir. Bu şekilde değiştirilebilen fakat öğrenme sırasında güncellenmeyen parametrelere &lt;em&gt;hiperparametre&lt;/em&gt; denir. &lt;em&gt;Hiperparametre ayarlama&lt;/em&gt; (hyerparameter tuning), bunların uygun biçimde seçilmesi işlemidir ve eğitim kümesi ile elde edilen sonuçların ayrı bir &lt;em&gt;doğrulama kümesi&lt;/em&gt; (validation set) ile denenmesi sayesinde yapılabilir.&lt;/p&gt;
&lt;p&gt;Belli sayıda güncellemeden sonra ya da belli şartlar sağlandığında eğitim (training) durdurulur. Sonra bulduğumuz parametreler kaydedilir. Bu parametreler gerçek parametrelerin tamin edilen değerleridir ve $\hat{\mathbf{w}}, \hat{b}$ ile gösterilirler. Fonksiyonumuz tam olarak lineer olsa ve hiçbir ölçüm hatası olmasa bile elde ettiğimiz bu parametreler tam olarak doğru değildir çünkü algoritmamız sonlu sayıda adımda minimuma ulaşamaz.&lt;/p&gt;
&lt;p&gt;Lineer regresyon, konveks öğrenme problemi olduğundan bir tek (global) minimumu vardır. Daha kamaşık derin ağlarda kayıp yüzeyi üzerinde birçok minimum vardır. Neyse ki derin öğrenmede uygulayıcılar eğitim kümesi üzerinde minimumu bulmada fazla zorlanmazlar ve bunun matematiksel temeli halen çok iyi bilinmemektedir. Daha zor olanı, daha önce kullanmadığımız örnekler üzerinde düşük kayıp değeri veren parametreler bulmaktır. Buna probleme &lt;em&gt;genelleştirme&lt;/em&gt; denir. İleride bu konulara değineceğiz.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#214;&amp;#287;renilen-Model-ile-Tahminler-Yapma-(Estimation)&quot;&gt;&amp;#214;&amp;#287;renilen Model ile Tahminler Yapma (Estimation)&lt;a class=&quot;anchor-link&quot; href=&quot;#&amp;#214;&amp;#287;renilen-Model-ile-Tahminler-Yapma-(Estimation)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Öğrenimliş bir $\hat{\mathbf{w}}^\top \mathbf{x} + \hat{b}$ lineer regresyon modeli ile eğitim kümemizde yer almayan örnekler için tahminde bulunabiliriz. Örneğin alanı $x_1$ ve yılı $x_2$ olan bir evin fiyatını tahmin edebiliriz. Özellikleri verilen hedefi tahmin etme işine &lt;em&gt;kestirim&lt;/em&gt; (prediction) veya &lt;em&gt;çıkarım&lt;/em&gt; (inference) denir.&lt;/p&gt;
&lt;p&gt;İstatistikte genellikle çıkarım ile parametrelerin veri kullanılarak tahmini ifade edilir. Dolayısıyla karışıklığa yol açmaması için derin öğrenme için kestirim kullanılacaktır.&lt;/p&gt;
&lt;h3 id=&quot;Vekt&amp;#246;rle&amp;#351;tirme-H&amp;#305;zland&amp;#305;r&amp;#305;r&quot;&gt;Vekt&amp;#246;rle&amp;#351;tirme H&amp;#305;zland&amp;#305;r&amp;#305;r&lt;a class=&quot;anchor-link&quot; href=&quot;#Vekt&amp;#246;rle&amp;#351;tirme-H&amp;#305;zland&amp;#305;r&amp;#305;r&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Modeli eğitirken tüm küçük veri yığınlarını aynı anda işlemek isteriz. Bunu etkin bir şekilde yapmanın yolu, işlemleri vektörleştirmek ve Pythondaki işlem yükü fazla olan döngüler(&lt;em&gt;for loop&lt;/em&gt; gibi) yazmak yerine hızlı lineer cebir kütüphanelerini kullanmaktır.&lt;/p&gt;
&lt;p&gt;Vektörleştirmeye ihtiyacın daha iyi anlaşılması için vektörlerin toplamı için iki yöntem kullanalım. Önce $1$ rakamlarından oluşan $10000$ boyutlu vektörler alalım. İlk metod için Python'da vektörün bileşenleri üzerinden &lt;code&gt;for&lt;/code&gt; döngüsü oluşturacağız. İkincisinde ise sadece bir kez &lt;code&gt;+&lt;/code&gt; işlemcisini kullanacağız.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install -U mxnet-cu101mkl&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.6.0  # updating mxnet to at least v1.6
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install &lt;span class=&quot;nv&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.13.2 -f https://d2l.ai/whl.html # installing d2l
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;matplotlib&lt;/span&gt; inline
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;d2l&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Zaman açısından kıyaslamayı ileride de sık sık yapacağımızdan, bunun için &lt;code&gt;d2l&lt;/code&gt; paketinde erişilmek üzere bir kronometre (timer) sınıfı tanımlayalım.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Record multiple running times.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Start the timer.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tik&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Stop the timer and record the time in a list.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tik&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return the average time.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return the sum of time.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return the accumulated times.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Şimdi işleri karşılaştırabiliriz. Önce &lt;code&gt;for&lt;/code&gt; döngüsüyle bileşen bileşen toplama yapalım.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.5f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; sec&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;#39;4.18153 sec&amp;#39;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Şimdi de &lt;code&gt;mxnet.np&lt;/code&gt; (yukarıda çağırdık) yeniden tanımlanan &lt;code&gt;+&lt;/code&gt; işlemcisini kullanalım.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.5f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; sec&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;&amp;#39;0.00025 sec&amp;#39;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;İkincisinin farklı şekilde hızlı olduğu görülüyor. Kodu vektörleştirmek genellikle hızda üstel olarak değişen azalmalar sağlar. Hatta, işlemleri hazır kütüphaneleri kullanarak yaptırdığımızdan hataların da azalmasını sağlamış oluruz.&lt;/p&gt;
&lt;h2 id=&quot;Normal-Da&amp;#287;&amp;#305;l&amp;#305;m-ve-En-K&amp;#252;&amp;#231;&amp;#252;k-Kareler-Kay&amp;#305;p-Fonksiyonu&quot;&gt;Normal Da&amp;#287;&amp;#305;l&amp;#305;m ve En K&amp;#252;&amp;#231;&amp;#252;k Kareler Kay&amp;#305;p Fonksiyonu&lt;a class=&quot;anchor-link&quot; href=&quot;#Normal-Da&amp;#287;&amp;#305;l&amp;#305;m-ve-En-K&amp;#252;&amp;#231;&amp;#252;k-Kareler-Kay&amp;#305;p-Fonksiyonu&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Şimdiden lineer regresyonu uygulayacak kadar bilgi edinmiş olsak bile, en küçük kareler kayıp fonksiyonunun neden gürültü ile ilgili kabulümüz ile uyumlu olduğunu bilmek yayarlı olacaktır.&lt;/p&gt;
&lt;p&gt;Yukarıda $l(y, \hat{y}) = \frac{1}{2} (y - \hat{y})^2$ olarak tanılmalan en küçük kareler kayıp fonksiyonunun yararlı özellikleri görüldü. Bunlardan birisi de türevinin $\partial_{\hat{y}} l(y, \hat{y}) = (\hat{y} - y)$ şeklinde çok sade olmasıdır.&lt;/p&gt;
&lt;p&gt;Lineer regresyonu Gauss 1975 yılında buldu. Gauss aynı zamanda normal dağılımı (Gauss dağılımı da denir) da keşfeden kişidir. Yani normal dağılımla lineer regresyon arasında babalarının aynı olması ötesinde de derin bağlar vardır. Şimdi ortalamsı (mean) $\mu$ and varyansı $\sigma^2$ olan normal dağılımın yoğunluk fonksiyonunun&lt;/p&gt;
&lt;p&gt;
$$p(z) = \frac{1}{\sqrt{2 \pi \sigma^2}} \exp\left(-\frac{1}{2 \sigma^2} (z - \mu)^2\right)$$
&lt;/p&gt;
&lt;p&gt;olduğunu hatırlayalım. Aşağıda normal dağılımı hesalayan Python fonksiyonu veriliyor.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bununla normal dağılımı görselleştirebiliriz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Using numpy again for visualizations.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Mean and variance pairs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p(z)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ort &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, var &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_svg output_subarea &quot;&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;no&quot;?&gt;
&amp;lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot;
  &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&amp;gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height=&quot;180.65625pt&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 302.08125 180.65625&quot; width=&quot;302.08125pt&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
 &lt;defs&gt;
  &lt;style type=&quot;text/css&quot;&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
 &lt;/defs&gt;
 &lt;g id=&quot;figure_1&quot;&gt;
  &lt;g id=&quot;patch_1&quot;&gt;
   &lt;path d=&quot;M 0 180.65625 
L 302.08125 180.65625 
L 302.08125 0 
L 0 0 
z
&quot; style=&quot;fill:none;&quot; /&gt;
  &lt;/g&gt;
  &lt;g id=&quot;axes_1&quot;&gt;
   &lt;g id=&quot;patch_2&quot;&gt;
    &lt;path d=&quot;M 43.78125 143.1 
L 294.88125 143.1 
L 294.88125 7.2 
L 43.78125 7.2 
z
&quot; style=&quot;fill:#ffffff;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_1&quot;&gt;
    &lt;g id=&quot;xtick_1&quot;&gt;
     &lt;g id=&quot;line2d_1&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 71.511736 143.1 
L 71.511736 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_2&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L 0 3.5 
&quot; id=&quot;m014f73f44f&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;71.511736&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_1&quot;&gt;
      &lt;!-- −6 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 10.59375 35.5 
L 73.1875 35.5 
L 73.1875 27.203125 
L 10.59375 27.203125 
z
&quot; id=&quot;DejaVuSans-8722&quot; /&gt;
       &lt;path d=&quot;M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
&quot; id=&quot;DejaVuSans-54&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(64.140643 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-8722&quot; /&gt;
       &lt;use x=&quot;83.789062&quot; xlink:href=&quot;#DejaVuSans-54&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_2&quot;&gt;
     &lt;g id=&quot;line2d_3&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 104.145436 143.1 
L 104.145436 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_4&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;104.145436&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_2&quot;&gt;
      &lt;!-- −4 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
&quot; id=&quot;DejaVuSans-52&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(96.774343 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-8722&quot; /&gt;
       &lt;use x=&quot;83.789062&quot; xlink:href=&quot;#DejaVuSans-52&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_3&quot;&gt;
     &lt;g id=&quot;line2d_5&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 136.779136 143.1 
L 136.779136 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_6&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;136.779136&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_3&quot;&gt;
      &lt;!-- −2 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
&quot; id=&quot;DejaVuSans-50&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(129.408042 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-8722&quot; /&gt;
       &lt;use x=&quot;83.789062&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_4&quot;&gt;
     &lt;g id=&quot;line2d_7&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 169.412836 143.1 
L 169.412836 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_8&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;169.412836&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_4&quot;&gt;
      &lt;!-- 0 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
&quot; id=&quot;DejaVuSans-48&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(166.231586 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_5&quot;&gt;
     &lt;g id=&quot;line2d_9&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 202.046536 143.1 
L 202.046536 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_10&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;202.046536&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_5&quot;&gt;
      &lt;!-- 2 --&gt;
      &lt;g transform=&quot;translate(198.865286 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_6&quot;&gt;
     &lt;g id=&quot;line2d_11&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 234.680236 143.1 
L 234.680236 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_12&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;234.680236&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_6&quot;&gt;
      &lt;!-- 4 --&gt;
      &lt;g transform=&quot;translate(231.498986 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-52&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_7&quot;&gt;
     &lt;g id=&quot;line2d_13&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 267.313936 143.1 
L 267.313936 7.2 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_14&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;267.313936&quot; xlink:href=&quot;#m014f73f44f&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_7&quot;&gt;
      &lt;!-- 6 --&gt;
      &lt;g transform=&quot;translate(264.132686 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-54&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;text_8&quot;&gt;
     &lt;!-- z --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 5.515625 54.6875 
L 48.1875 54.6875 
L 48.1875 46.484375 
L 14.40625 7.171875 
L 48.1875 7.171875 
L 48.1875 0 
L 4.296875 0 
L 4.296875 8.203125 
L 38.09375 47.515625 
L 5.515625 47.515625 
z
&quot; id=&quot;DejaVuSans-122&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(166.707031 171.376563)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_2&quot;&gt;
    &lt;g id=&quot;ytick_1&quot;&gt;
     &lt;g id=&quot;line2d_15&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 43.78125 136.922727 
L 294.88125 136.922727 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_16&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L -3.5 0 
&quot; id=&quot;mc493c6866f&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;43.78125&quot; xlink:href=&quot;#mc493c6866f&quot; y=&quot;136.922727&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_9&quot;&gt;
      &lt;!-- 0.0 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
&quot; id=&quot;DejaVuSans-46&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(20.878125 140.721946)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_2&quot;&gt;
     &lt;g id=&quot;line2d_17&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 43.78125 105.954475 
L 294.88125 105.954475 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_18&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;43.78125&quot; xlink:href=&quot;#mc493c6866f&quot; y=&quot;105.954475&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_10&quot;&gt;
      &lt;!-- 0.1 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
&quot; id=&quot;DejaVuSans-49&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(20.878125 109.753694)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_3&quot;&gt;
     &lt;g id=&quot;line2d_19&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 43.78125 74.986223 
L 294.88125 74.986223 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_20&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;43.78125&quot; xlink:href=&quot;#mc493c6866f&quot; y=&quot;74.986223&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_11&quot;&gt;
      &lt;!-- 0.2 --&gt;
      &lt;g transform=&quot;translate(20.878125 78.785442)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_4&quot;&gt;
     &lt;g id=&quot;line2d_21&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 43.78125 44.017971 
L 294.88125 44.017971 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_22&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;43.78125&quot; xlink:href=&quot;#mc493c6866f&quot; y=&quot;44.017971&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_12&quot;&gt;
      &lt;!-- 0.3 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 40.578125 39.3125 
Q 47.65625 37.796875 51.625 33 
Q 55.609375 28.21875 55.609375 21.1875 
Q 55.609375 10.40625 48.1875 4.484375 
Q 40.765625 -1.421875 27.09375 -1.421875 
Q 22.515625 -1.421875 17.65625 -0.515625 
Q 12.796875 0.390625 7.625 2.203125 
L 7.625 11.71875 
Q 11.71875 9.328125 16.59375 8.109375 
Q 21.484375 6.890625 26.8125 6.890625 
Q 36.078125 6.890625 40.9375 10.546875 
Q 45.796875 14.203125 45.796875 21.1875 
Q 45.796875 27.640625 41.28125 31.265625 
Q 36.765625 34.90625 28.71875 34.90625 
L 20.21875 34.90625 
L 20.21875 43.015625 
L 29.109375 43.015625 
Q 36.375 43.015625 40.234375 45.921875 
Q 44.09375 48.828125 44.09375 54.296875 
Q 44.09375 59.90625 40.109375 62.90625 
Q 36.140625 65.921875 28.71875 65.921875 
Q 24.65625 65.921875 20.015625 65.03125 
Q 15.375 64.15625 9.8125 62.3125 
L 9.8125 71.09375 
Q 15.4375 72.65625 20.34375 73.4375 
Q 25.25 74.21875 29.59375 74.21875 
Q 40.828125 74.21875 47.359375 69.109375 
Q 53.90625 64.015625 53.90625 55.328125 
Q 53.90625 49.265625 50.4375 45.09375 
Q 46.96875 40.921875 40.578125 39.3125 
z
&quot; id=&quot;DejaVuSans-51&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(20.878125 47.81719)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-51&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_5&quot;&gt;
     &lt;g id=&quot;line2d_23&quot;&gt;
      &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 43.78125 13.049719 
L 294.88125 13.049719 
&quot; style=&quot;fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;&quot; /&gt;
     &lt;/g&gt;
     &lt;g id=&quot;line2d_24&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;43.78125&quot; xlink:href=&quot;#mc493c6866f&quot; y=&quot;13.049719&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_13&quot;&gt;
      &lt;!-- 0.4 --&gt;
      &lt;g transform=&quot;translate(20.878125 16.848938)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-52&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;text_14&quot;&gt;
     &lt;!-- p(z) --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 18.109375 8.203125 
L 18.109375 -20.796875 
L 9.078125 -20.796875 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.390625 
Q 20.953125 51.265625 25.265625 53.625 
Q 29.59375 56 35.59375 56 
Q 45.5625 56 51.78125 48.09375 
Q 58.015625 40.1875 58.015625 27.296875 
Q 58.015625 14.40625 51.78125 6.484375 
Q 45.5625 -1.421875 35.59375 -1.421875 
Q 29.59375 -1.421875 25.265625 0.953125 
Q 20.953125 3.328125 18.109375 8.203125 
z
M 48.6875 27.296875 
Q 48.6875 37.203125 44.609375 42.84375 
Q 40.53125 48.484375 33.40625 48.484375 
Q 26.265625 48.484375 22.1875 42.84375 
Q 18.109375 37.203125 18.109375 27.296875 
Q 18.109375 17.390625 22.1875 11.75 
Q 26.265625 6.109375 33.40625 6.109375 
Q 40.53125 6.109375 44.609375 11.75 
Q 48.6875 17.390625 48.6875 27.296875 
z
&quot; id=&quot;DejaVuSans-112&quot; /&gt;
      &lt;path d=&quot;M 31 75.875 
Q 24.46875 64.65625 21.28125 53.65625 
Q 18.109375 42.671875 18.109375 31.390625 
Q 18.109375 20.125 21.3125 9.0625 
Q 24.515625 -2 31 -13.1875 
L 23.1875 -13.1875 
Q 15.875 -1.703125 12.234375 9.375 
Q 8.59375 20.453125 8.59375 31.390625 
Q 8.59375 42.28125 12.203125 53.3125 
Q 15.828125 64.359375 23.1875 75.875 
z
&quot; id=&quot;DejaVuSans-40&quot; /&gt;
      &lt;path d=&quot;M 8.015625 75.875 
L 15.828125 75.875 
Q 23.140625 64.359375 26.78125 53.3125 
Q 30.421875 42.28125 30.421875 31.390625 
Q 30.421875 20.453125 26.78125 9.375 
Q 23.140625 -1.703125 15.828125 -13.1875 
L 8.015625 -13.1875 
Q 14.5 -2 17.703125 9.0625 
Q 20.90625 20.125 20.90625 31.390625 
Q 20.90625 42.671875 17.703125 53.65625 
Q 14.5 64.65625 8.015625 75.875 
z
&quot; id=&quot;DejaVuSans-41&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(14.798438 84.85)rotate(-90)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-112&quot; /&gt;
      &lt;use x=&quot;63.476562&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;102.490234&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;154.980469&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_25&quot;&gt;
    &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 55.194886 136.922727 
L 108.224649 136.813535 
L 113.609208 136.566288 
L 117.198915 136.184417 
L 119.972781 135.668952 
L 122.257142 135.025185 
L 124.215162 134.257847 
L 126.01001 133.330371 
L 127.804866 132.138337 
L 129.436549 130.77945 
L 131.06824 129.113083 
L 132.699924 127.093511 
L 134.331607 124.674772 
L 135.963291 121.812697 
L 137.594974 118.467299 
L 139.226665 114.605492 
L 141.021513 109.733828 
L 142.816369 104.197086 
L 144.774389 97.412526 
L 146.895581 89.247641 
L 149.506275 78.224543 
L 153.259151 61.239325 
L 157.501535 42.275262 
L 159.785892 33.113073 
L 161.580748 26.820509 
L 163.049259 22.424539 
L 164.354614 19.173265 
L 165.496788 16.88464 
L 166.475798 15.362588 
L 167.454808 14.263614 
L 168.270654 13.679586 
L 169.086499 13.401979 
L 169.739173 13.401979 
L 170.391846 13.599458 
L 171.207684 14.122462 
L 172.02353 14.948572 
L 173.00254 16.33118 
L 173.98155 18.126548 
L 175.123732 20.717339 
L 176.429079 24.286967 
L 177.897598 29.000681 
L 179.692446 35.615337 
L 181.813638 44.367147 
L 184.91384 58.245054 
L 190.461572 83.161144 
L 192.909093 93.115019 
L 195.030286 100.899654 
L 196.988306 107.299468 
L 198.783169 112.473252 
L 200.578017 116.986085 
L 202.209708 120.534576 
L 203.841384 123.58549 
L 205.473075 126.176452 
L 207.104751 128.35022 
L 208.736442 130.152332 
L 210.368133 131.62881 
L 211.999809 132.824477 
L 213.794657 133.865798 
L 215.752693 134.73293 
L 217.873869 135.421683 
L 220.321406 135.972059 
L 223.258444 136.389278 
L 227.011312 136.67952 
L 232.395871 136.850878 
L 243.001818 136.917995 
L 283.467614 136.922727 
L 283.467614 136.922727 
&quot; style=&quot;fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_26&quot;&gt;
    &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 55.194886 136.7876 
L 65.80084 136.522951 
L 73.14342 136.126434 
L 79.017488 135.590287 
L 83.912546 134.926494 
L 88.318087 134.10523 
L 92.234135 133.153577 
L 95.823839 132.063161 
L 99.250378 130.79875 
L 102.513745 129.367712 
L 105.77712 127.695009 
L 109.04049 125.764112 
L 112.303861 123.563438 
L 115.567228 121.0879 
L 118.993767 118.196043 
L 122.583479 114.860884 
L 126.499519 110.903145 
L 131.06824 105.948686 
L 138.247647 97.770815 
L 144.611224 90.644946 
L 148.527265 86.58968 
L 151.790639 83.53067 
L 154.564497 81.224439 
L 157.175199 79.344213 
L 159.459555 77.957411 
L 161.743912 76.832369 
L 163.865105 76.036198 
L 165.823125 75.522599 
L 167.781145 75.22717 
L 169.739173 75.153087 
L 171.697193 75.301157 
L 173.655213 75.669778 
L 175.613233 76.254996 
L 177.734426 77.126086 
L 179.855618 78.233158 
L 182.139975 79.673624 
L 184.587504 81.480058 
L 187.361362 83.820856 
L 190.461572 86.751108 
L 194.051283 90.469341 
L 198.783169 95.721754 
L 211.67348 110.215095 
L 215.752693 114.383395 
L 219.505561 117.905417 
L 222.9321 120.825256 
L 226.195467 123.328266 
L 229.458833 125.556318 
L 232.722216 127.513772 
L 235.985583 129.211617 
L 239.24895 130.665968 
L 242.675489 131.952578 
L 246.2652 133.063568 
L 250.18124 134.03448 
L 254.423625 134.846714 
L 259.155511 135.514669 
L 264.54007 136.040363 
L 270.903632 136.432353 
L 279.225229 136.707949 
L 283.467614 136.785216 
L 283.467614 136.785216 
&quot; style=&quot;fill:none;stroke:#bf00bf;stroke-dasharray:5.55,2.4;stroke-dashoffset:0;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_27&quot;&gt;
    &lt;path clip-path=&quot;url(#p577ab8d339)&quot; d=&quot;M 55.194886 136.922727 
L 157.175199 136.813535 
L 162.559758 136.566288 
L 166.149461 136.184417 
L 168.923327 135.668953 
L 171.207684 135.025188 
L 173.165712 134.257847 
L 174.96056 133.330371 
L 176.755415 132.138337 
L 178.387099 130.77945 
L 180.018782 129.113093 
L 181.650474 127.093511 
L 183.282157 124.674772 
L 184.91384 121.812697 
L 186.545532 118.467281 
L 188.177207 114.605511 
L 189.972071 109.733805 
L 191.766919 104.197086 
L 193.724939 97.412526 
L 195.846131 89.247641 
L 198.456825 78.224543 
L 202.209708 61.239288 
L 206.452077 42.27529 
L 208.736442 33.113073 
L 210.53129 26.820546 
L 211.999809 22.424539 
L 213.305156 19.173284 
L 214.447346 16.884622 
L 215.426348 15.362588 
L 216.405366 14.263605 
L 217.221196 13.679596 
L 218.037042 13.401979 
L 218.689715 13.401979 
L 219.342388 13.599449 
L 220.158234 14.122462 
L 220.97408 14.948572 
L 221.953082 16.331171 
L 222.9321 18.126548 
L 224.074274 20.71733 
L 225.379621 24.286948 
L 226.84814 29.000654 
L 228.643003 35.615364 
L 230.764196 44.367184 
L 233.86439 58.245054 
L 239.412122 83.161144 
L 241.859643 93.115019 
L 243.980835 100.899654 
L 245.938856 107.299468 
L 247.733719 112.473252 
L 249.528567 116.986085 
L 251.160243 120.534544 
L 252.791934 123.58549 
L 254.423625 126.176452 
L 256.055301 128.35022 
L 257.686992 130.152332 
L 259.318668 131.628798 
L 260.950359 132.824477 
L 262.745207 133.865798 
L 264.703242 134.73293 
L 266.824419 135.421683 
L 269.271956 135.972059 
L 272.208978 136.389276 
L 275.961862 136.67952 
L 281.346421 136.850878 
L 283.467614 136.879593 
L 283.467614 136.879593 
&quot; style=&quot;fill:none;stroke:#008000;stroke-dasharray:9.6,2.4,1.5,2.4;stroke-dashoffset:0;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_3&quot;&gt;
    &lt;path d=&quot;M 43.78125 143.1 
L 43.78125 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_4&quot;&gt;
    &lt;path d=&quot;M 294.88125 143.1 
L 294.88125 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_5&quot;&gt;
    &lt;path d=&quot;M 43.78125 143.1 
L 294.88125 143.1 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_6&quot;&gt;
    &lt;path d=&quot;M 43.78125 7.2 
L 294.88125 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;legend_1&quot;&gt;
    &lt;g id=&quot;patch_7&quot;&gt;
     &lt;path d=&quot;M 50.78125 59.234375 
L 138.526563 59.234375 
Q 140.526563 59.234375 140.526563 57.234375 
L 140.526563 14.2 
Q 140.526563 12.2 138.526563 12.2 
L 50.78125 12.2 
Q 48.78125 12.2 48.78125 14.2 
L 48.78125 57.234375 
Q 48.78125 59.234375 50.78125 59.234375 
z
&quot; style=&quot;fill:#ffffff;opacity:0.8;stroke:#cccccc;stroke-linejoin:miter;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_28&quot;&gt;
     &lt;path d=&quot;M 52.78125 20.298438 
L 72.78125 20.298438 
&quot; style=&quot;fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_29&quot; /&gt;
    &lt;g id=&quot;text_15&quot;&gt;
     &lt;!-- ort 0, var 1 --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 30.609375 48.390625 
Q 23.390625 48.390625 19.1875 42.75 
Q 14.984375 37.109375 14.984375 27.296875 
Q 14.984375 17.484375 19.15625 11.84375 
Q 23.34375 6.203125 30.609375 6.203125 
Q 37.796875 6.203125 41.984375 11.859375 
Q 46.1875 17.53125 46.1875 27.296875 
Q 46.1875 37.015625 41.984375 42.703125 
Q 37.796875 48.390625 30.609375 48.390625 
z
M 30.609375 56 
Q 42.328125 56 49.015625 48.375 
Q 55.71875 40.765625 55.71875 27.296875 
Q 55.71875 13.875 49.015625 6.21875 
Q 42.328125 -1.421875 30.609375 -1.421875 
Q 18.84375 -1.421875 12.171875 6.21875 
Q 5.515625 13.875 5.515625 27.296875 
Q 5.515625 40.765625 12.171875 48.375 
Q 18.84375 56 30.609375 56 
z
&quot; id=&quot;DejaVuSans-111&quot; /&gt;
      &lt;path d=&quot;M 41.109375 46.296875 
Q 39.59375 47.171875 37.8125 47.578125 
Q 36.03125 48 33.890625 48 
Q 26.265625 48 22.1875 43.046875 
Q 18.109375 38.09375 18.109375 28.8125 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 20.953125 51.171875 25.484375 53.578125 
Q 30.03125 56 36.53125 56 
Q 37.453125 56 38.578125 55.875 
Q 39.703125 55.765625 41.0625 55.515625 
z
&quot; id=&quot;DejaVuSans-114&quot; /&gt;
      &lt;path d=&quot;M 18.3125 70.21875 
L 18.3125 54.6875 
L 36.8125 54.6875 
L 36.8125 47.703125 
L 18.3125 47.703125 
L 18.3125 18.015625 
Q 18.3125 11.328125 20.140625 9.421875 
Q 21.96875 7.515625 27.59375 7.515625 
L 36.8125 7.515625 
L 36.8125 0 
L 27.59375 0 
Q 17.1875 0 13.234375 3.875 
Q 9.28125 7.765625 9.28125 18.015625 
L 9.28125 47.703125 
L 2.6875 47.703125 
L 2.6875 54.6875 
L 9.28125 54.6875 
L 9.28125 70.21875 
z
&quot; id=&quot;DejaVuSans-116&quot; /&gt;
      &lt;path id=&quot;DejaVuSans-32&quot; /&gt;
      &lt;path d=&quot;M 11.71875 12.40625 
L 22.015625 12.40625 
L 22.015625 4 
L 14.015625 -11.625 
L 7.71875 -11.625 
L 11.71875 4 
z
&quot; id=&quot;DejaVuSans-44&quot; /&gt;
      &lt;path d=&quot;M 2.984375 54.6875 
L 12.5 54.6875 
L 29.59375 8.796875 
L 46.6875 54.6875 
L 56.203125 54.6875 
L 35.6875 0 
L 23.484375 0 
z
&quot; id=&quot;DejaVuSans-118&quot; /&gt;
      &lt;path d=&quot;M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
&quot; id=&quot;DejaVuSans-97&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(80.78125 23.798438)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-111&quot; /&gt;
      &lt;use x=&quot;61.181641&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;102.294922&quot; xlink:href=&quot;#DejaVuSans-116&quot; /&gt;
      &lt;use x=&quot;141.503906&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;173.291016&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;use x=&quot;236.914062&quot; xlink:href=&quot;#DejaVuSans-44&quot; /&gt;
      &lt;use x=&quot;268.701172&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;300.488281&quot; xlink:href=&quot;#DejaVuSans-118&quot; /&gt;
      &lt;use x=&quot;359.667969&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;420.947266&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;462.060547&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;493.847656&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_30&quot;&gt;
     &lt;path d=&quot;M 52.78125 34.976562 
L 72.78125 34.976562 
&quot; style=&quot;fill:none;stroke:#bf00bf;stroke-dasharray:5.55,2.4;stroke-dashoffset:0;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_31&quot; /&gt;
    &lt;g id=&quot;text_16&quot;&gt;
     &lt;!-- ort 0, var 2 --&gt;
     &lt;g transform=&quot;translate(80.78125 38.476562)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-111&quot; /&gt;
      &lt;use x=&quot;61.181641&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;102.294922&quot; xlink:href=&quot;#DejaVuSans-116&quot; /&gt;
      &lt;use x=&quot;141.503906&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;173.291016&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;use x=&quot;236.914062&quot; xlink:href=&quot;#DejaVuSans-44&quot; /&gt;
      &lt;use x=&quot;268.701172&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;300.488281&quot; xlink:href=&quot;#DejaVuSans-118&quot; /&gt;
      &lt;use x=&quot;359.667969&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;420.947266&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;462.060547&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;493.847656&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_32&quot;&gt;
     &lt;path d=&quot;M 52.78125 49.654688 
L 72.78125 49.654688 
&quot; style=&quot;fill:none;stroke:#008000;stroke-dasharray:9.6,2.4,1.5,2.4;stroke-dashoffset:0;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_33&quot; /&gt;
    &lt;g id=&quot;text_17&quot;&gt;
     &lt;!-- ort 3, var 1 --&gt;
     &lt;g transform=&quot;translate(80.78125 53.154688)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-111&quot; /&gt;
      &lt;use x=&quot;61.181641&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;102.294922&quot; xlink:href=&quot;#DejaVuSans-116&quot; /&gt;
      &lt;use x=&quot;141.503906&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;173.291016&quot; xlink:href=&quot;#DejaVuSans-51&quot; /&gt;
      &lt;use x=&quot;236.914062&quot; xlink:href=&quot;#DejaVuSans-44&quot; /&gt;
      &lt;use x=&quot;268.701172&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;300.488281&quot; xlink:href=&quot;#DejaVuSans-118&quot; /&gt;
      &lt;use x=&quot;359.667969&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;420.947266&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;462.060547&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;493.847656&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
  &lt;/g&gt;
 &lt;/g&gt;
 &lt;defs&gt;
  &lt;clipPath id=&quot;p577ab8d339&quot;&gt;
   &lt;rect height=&quot;135.9&quot; width=&quot;251.1&quot; x=&quot;43.78125&quot; y=&quot;7.2&quot; /&gt;
  &lt;/clipPath&gt;
 &lt;/defs&gt;
&lt;/svg&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Görüldüğü gibi ortalamayı değiştirmek $x$ ekseninde kaymalara, yaryansı değiştirmek dağılımın genişlemesine veya daralmasına sebep oluyor.&lt;/p&gt;
&lt;p&gt;Lineer regresyonda en küçük karelerin kullanımını açıklamak için, gözlemlerdeki hataların gürültülü olduğunu ve bu gürültünün normal dağılımdan geldiğini kabul edelim:&lt;/p&gt;
&lt;p&gt;
$$\epsilon \sim \mathcal{N}(0, \sigma^2) \text{ olmak üzere } y = \mathbf{w}^\top \mathbf{x} + b + \epsilon.$$
&lt;/p&gt;
&lt;p&gt;Dolayısıyla verilen bir $\mathbf{x}$ için özel bir $y$ görmenin olabililirlik (likelihood) fonksiyonunu&lt;/p&gt;
&lt;p&gt;
$$p(y|\mathbf{x}) = \frac{1}{\sqrt{2 \pi \sigma^2}} \exp\left(-\frac{1}{2 \sigma^2} (y - \mathbf{w}^\top \mathbf{x} - b)^2\right)$$
&lt;/p&gt;
&lt;p&gt;şeklinde yazabiliriz. Buradan maksimum olabilirlik prensibine göre $b$ ve $\mathbf{w}$ parametrelerinin en iyi değerleri veri kümesinin olabilirliğini en büyük yapanlardır:&lt;/p&gt;
&lt;p&gt;
$$P(Y\mid X) = \prod_{i=1}^{n} p(y^{(i)}|\mathbf{x}^{(i)}).$$
&lt;/p&gt;
&lt;p&gt;Maksimum olabilirlik prensibine göre seçilen kestiricilere (estimators) &lt;em&gt;maksimum olabilirlik kestiricileri&lt;/em&gt; (MLE) denir. Üstel fonksiyonların çarpımını maksimum yapmak yerine genellikle logaritması maksimum yaılır. Optimizasyonda alışkanlık olarak maksimum yerine minimum incelendiğinden olabilirlik fonksiyonunun  negatifinin minimumunu arayacağız (NLL - Negative Log-Likelihood): $-\log p(\mathbf y|\mathbf X)$. İşlem yapılırsa&lt;/p&gt;
&lt;p&gt;
$$-\log p(\mathbf y|\mathbf X) = \sum_{i=1}^n \frac{1}{2} \log(2 \pi \sigma^2) + \frac{1}{2 \sigma^2} \left(y^{(i)} - \mathbf{w}^\top \mathbf{x}^{(i)} - b\right)^2$$
&lt;/p&gt;
&lt;p&gt;elde edilir. Şimdi yapacağımız son kabul $\sigma$ yani varyansın sabit olması. Dolayısıyla yukarıdaki eşitliğin sağ tarafındaki ilk terim ihmal edilebilir çünkü $\mathbf{w}$ veya $b$ ile bağımlı değildir. Maksimumu bulmak için türev alacağımız için türevi sıfır olacak birşeyi almadık. İkinci terim ise $\frac{1}{\sigma^2}$ katsayısı hariç hataların kareleri toplamıdır. Neyse ki çözüm $\sigma$ varyansından bağımsızdır. Sonuç olarak, hataların karelerinin toplamını minimize etmenin, Gauss dağılımından gelen gürültü eklenmiş lineer modelin maksimum olabilirlik çıkarımına denk olduğunu gösterdik.&lt;/p&gt;
&lt;h2 id=&quot;L&amp;#304;neer-Regresyondan-Derin-A&amp;#287;lara-(Deep-Networks)&quot;&gt;L&amp;#304;neer Regresyondan Derin A&amp;#287;lara (Deep Networks)&lt;a class=&quot;anchor-link&quot; href=&quot;#L&amp;#304;neer-Regresyondan-Derin-A&amp;#287;lara-(Deep-Networks)&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Şu ana kadar sadece lineer fonksiyonlala çalıştık. Sinir ağları (neural networks) çok geniş bir model ailesini kapsar ama lineer modeli sinir ağları içerisinde tanımlamak iyi bir başlangıç olacaktır. Şimdi modelimizi &lt;em&gt;katmak&lt;/em&gt; (layer) gösterimi ile ifade edelim.&lt;/p&gt;
&lt;h3 id=&quot;Yapay-Sinir-A&amp;#287;&amp;#305;-Diyagram&amp;#305;&quot;&gt;Yapay Sinir A&amp;#287;&amp;#305; Diyagram&amp;#305;&lt;a class=&quot;anchor-link&quot; href=&quot;#Yapay-Sinir-A&amp;#287;&amp;#305;-Diyagram&amp;#305;&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Derin Öğrenme uygulayıcıları modelin diyagramını çizerek görselleştirmek isterler. Aşağıda lineer modeli bir sinir ağı olarak gösteriyoruz. Burada sadece bağlantılar gösteriliyor, ağırlıkların değerleri verilmiyor. Görüldüğü gibi bu durumda her girdi (input) çıktıya (output) bağlı.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d2l.ai/_images/singleneuron.svg&quot; alt=&quot;Linear regression is a single-layer neural network. &quot; /&gt;&lt;/p&gt;
&lt;p&gt;Gafikte, hesaplanacak bir tek nöron veya düğüm (node) olduğundan, lineer modeli tek sinir hücreli (neuron) yapay (artificial) sinir ağı olarak görürüz. Girdiler hazır verildiği için hesaplanmaz. Bu modelde her girdi çıktıya bağlı olduğundan bu dönüşüme &lt;em&gt;tam bağlantılı katman&lt;/em&gt; (fully-connected layer) veya &lt;em&gt;yoğun katman&lt;/em&gt; (dense layer) denir. Bu tür katmanları daha sonra ayrıntılı inceleyeceğiz.&lt;/p&gt;
&lt;h3 id=&quot;Biyoloji&quot;&gt;Biyoloji&lt;a class=&quot;anchor-link&quot; href=&quot;#Biyoloji&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Lineer regresyon (1795) hesaplamalı yapay sinir ağlarından daha eski olsa da lineer regresyonu sinir ağlarının kronolojisine yerleştirmek doğru olmaz. Lineer modellerin yaay sinir ağlarına başlangıç için neden iyi oldğunu görmek için sibernetik/nöroeurofizyoloji uzmanı Warren McCulloch ve Walter Pitts tarafından yaay sinir ağlarının nasıl geliştirildiğine bakalım. Aşağıdaki resimde girdi terminali (dendrites), işlemci (nucleus), çıkış kablosu (axon) ve çıkış terminali (axon terminals) ve diğer nöronlara bağlantıyı sinapsis ile sağlayan bağlantılar vardır.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d2l.ai/_images/Neuron.svg&quot; alt=&quot;The real neuron&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Diğer nöronlardan veya retina gibi algılayıcılardan gelen $x_i$ bilgisi dentrit tarafından alınır. Bu bilgilerin yani girdilerin etki dereceleri $w_i$ &lt;em&gt;sinatik ağırlıklar&lt;/em&gt; sayeinde belirlenir ve $x_i w_i$ çarpımları elde edilir. Farklı algılayıcılardan gelen bu ağırlıklı girdiler nükleusta bir araya getirilerek $y = \sum_i x_i w_i + b$ toplamı oluşturulur. Sonra işlemden geçirilmek üzere aksona gönderilir ve lineer olmayan $\sigma(y)$ işlemi uygulanır. Buradan ya kas gibi hedefe ya da diğer bir nörona aktarılır.&lt;/p&gt;
&lt;p&gt;Bu şekilde bir çok birimin doğru biçimde bağlanarak ve doğru öğrenme algoritması ile çok karmaşı davranışlar sergileceyeceği fikri nöronların biyolojik inclenenmesi sonucu elde edilmiştir.&lt;/p&gt;
&lt;p&gt;Derin Öğrenme araştırmalarının önemli kısmı nörolojiden (neuroscience) az da olsa etkilenmiştir. &lt;em&gt;Artificial Intelligence: A Modern Approach&lt;/em&gt; kitabında Stuart Russell ve Peter Norvig, uçaklar kuşlardan ilham alsa da, kuş bilimi havacılığı yönledirmemiştir demektedir. Benzer şekilde, Derin Öğrenme alanındaki gelişmeler nörolojiden çok matematik, istatistik ve bilgisayar bilimleri kaynaklıdır.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#214;zet&quot;&gt;&amp;#214;zet&lt;a class=&quot;anchor-link&quot; href=&quot;#&amp;#214;zet&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Makine Öğrenmesi modelinin önemli bileşenleri; eğitim kümesi, kayıp fonksiyonu, optimizasyon algoritması ve tabii ki en önemlisi modelin kendisidir. &lt;/li&gt;
&lt;li&gt;Vektörleştirme sayesinde işlemler de hesalamalar da hem sade hem de daha hızlı olur.&lt;/li&gt;
&lt;li&gt;Amaç fonksiyonunu en küçük yamak ile maksimum olabilirliği uygulamak aynı anlama gelebilir.&lt;/li&gt;
&lt;li&gt;Lineer modeller de sinir ağlarıdır.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Al&amp;#305;&amp;#351;t&amp;#305;rmalar&quot;&gt;Al&amp;#305;&amp;#351;t&amp;#305;rmalar&lt;a class=&quot;anchor-link&quot; href=&quot;#Al&amp;#305;&amp;#351;t&amp;#305;rmalar&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Elimizde $x_1, \ldots, x_n \in \mathbb{R}$ mevcut. Amacımız $\sum_i (x_i - b)^2$ ifadesini en küçük yaan $b$ sabitini bulmak. &lt;ul&gt;
&lt;li&gt;En iyi $b$ değerini veren çözümü analitik olarak elde edin.&lt;/li&gt;
&lt;li&gt;Bu problemin ve çözümünün normal dağılım ile ilgisi nedir?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;En küçük kareler kayıp fonksiyonu için lineer regresyonun analitik çözümünü elde edin. Sadelik açısından $b$ terimini ihmal edebilirsiniz ($X$ matirsinin sonuna birlerden oluşan bir sütun ekleyerek bunu yapabilirsiniz).&lt;ul&gt;
&lt;li&gt;Optimizasyon problemini matris ve vektör gösterimi ile ifade edin. &lt;/li&gt;
&lt;li&gt;Kayıp fonksiyonunun $w$ cinsinden gradiyentini bulun. &lt;/li&gt;
&lt;li&gt;Gradiyenti sıfıra eşitleyip çözümü yanlız bırakın.&lt;/li&gt;
&lt;li&gt;Stokastik gradiyent azalım ile analitik çözümün birbirine göre avantajlarını açıklayın.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Eklediğimiz $\epsilon$ gürültü (hata) teriminin üstel dağılımla modellenmiş olsun. Yani $p(\epsilon) = \frac{1}{2} \exp(-|\epsilon|)$ dağılımı. &lt;ul&gt;
&lt;li&gt;Verinin modele göre $-\log P(Y \mid X)$ negatig log-olabilirliğini bulun.&lt;/li&gt;
&lt;li&gt;Çözüm analitik olarak bulunabilir mi?&lt;/li&gt;
&lt;li&gt;Bu problemin çözümü için stokastik gradiyent azalım algoritması belirleyin. Ne gibi sorunlar çıkabilir? Mesela çözüme çok yaklaştığımızda ne olabilir? Bu sorunu nasıl düzeltiriz?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.d2l.ai/t/40&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Lineer Regresyon Uygulaması (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/24/Linear-Regresyon-Uygulama.html" rel="alternate" type="text/html" title="Lineer Regresyon Uygulaması (✗)" /><published>2020-02-24T00:00:00-06:00</published><updated>2020-02-24T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/24/Linear-Regresyon-Uygulama</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/24/Linear-Regresyon-Uygulama.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-24-Linear-Regresyon-Uygulama.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The following additional libraries are needed to run this
notebook. Note that running on Colab is experimental, please report a Github
issue if you have any problem.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install -U mxnet-cu101mkl&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.6.0  # updating mxnet to at least v1.6
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install &lt;span class=&quot;nv&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.13.2 -f https://d2l.ai/whl.html # installing d2l
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Linear-Regression-Implementation-from-Scratch&quot;&gt;Linear Regression Implementation from Scratch&lt;a class=&quot;anchor-link&quot; href=&quot;#Linear-Regression-Implementation-from-Scratch&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;:label:&lt;code&gt;sec_linear_scratch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now that you understand the key ideas behind linear regression,
we can begin to work through a hands-on implementation in code.
In this section, we will implement the entire method from scratch,
including the data pipeline, the model,
the loss function, and the gradient descent optimizer.
While modern deep learning frameworks can automate nearly all of this work,
implementing things from scratch is the only
to make sure that you really know what you are doing.
Moreover, when it comes time to customize models,
defining our own layers, loss functions, etc.,
understanding how things work under the hood will prove handy.
In this section, we will rely only on tensors and auto differentiation.
Afterwards, we will introduce a more compact implementation,
taking advantage of framework's bells and whistles.
To start off, we import the few required packages.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;matplotlib&lt;/span&gt; inline
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;d2l&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autograd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Generating-the-Dataset&quot;&gt;Generating the Dataset&lt;a class=&quot;anchor-link&quot; href=&quot;#Generating-the-Dataset&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To keep things simple, we will construct an artificial dataset
according to a linear model with additive noise.
Out task will be to recover this model's parameters
using the finite set of examples contained in our dataset.
We will keep the data low-dimensional so we can visualize it easily.
In the following code snippet, we generated a dataset
containing $1000$ examples, each consisting of $2$ features
sampled from a standard normal distribution.
Thus our synthetic dataset will be an object
$\mathbf{X}\in \mathbb{R}^{1000 \times 2}$.&lt;/p&gt;
&lt;p&gt;The true parameters generating our data will be
$\mathbf{w} = [2, -3.4]^\top$ and $b = 4.2$
and our synthetic labels will be assigned according
to the following linear model with noise term $\epsilon$:&lt;/p&gt;
&lt;p&gt;
$$\mathbf{y}= \mathbf{X} \mathbf{w} + b + \mathbf\epsilon.$$
&lt;/p&gt;
&lt;p&gt;You could think of $\epsilon$ as capturing potential
measurement errors on the features and labels.
We will assume that the standard assumptions hold and thus
that $\epsilon$ obeys a normal distribution with mean of $0$.
To make our problem easy, we will set its standard deviation to $0.01$.
The following code generates our synthetic dataset:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;synthetic_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Generate y = X w + b + noise.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;synthetic_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Note that each row in &lt;code&gt;features&lt;/code&gt; consists of a 2-dimensional data point
and that each row in &lt;code&gt;labels&lt;/code&gt; consists of a 1-dimensional target value (a scalar).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;features:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;label:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;features: [2.2122064 1.1630787] 
label: 4.662078
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;By generating a scatter plot using the second feature &lt;code&gt;features[:, 1]&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;,
we can clearly observe the linear correlation between the two.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_figsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asnumpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asnumpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_svg output_subarea &quot;&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;no&quot;?&gt;
&amp;lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot;
  &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&amp;gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height=&quot;166.978125pt&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 237.804688 166.978125&quot; width=&quot;237.804688pt&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
 &lt;defs&gt;
  &lt;style type=&quot;text/css&quot;&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
 &lt;/defs&gt;
 &lt;g id=&quot;figure_1&quot;&gt;
  &lt;g id=&quot;patch_1&quot;&gt;
   &lt;path d=&quot;M 0 166.978125 
L 237.804688 166.978125 
L 237.804688 0 
L 0 0 
z
&quot; style=&quot;fill:none;&quot; /&gt;
  &lt;/g&gt;
  &lt;g id=&quot;axes_1&quot;&gt;
   &lt;g id=&quot;patch_2&quot;&gt;
    &lt;path d=&quot;M 35.304688 143.1 
L 230.604688 143.1 
L 230.604688 7.2 
L 35.304688 7.2 
z
&quot; style=&quot;fill:#ffffff;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;PathCollection_1&quot;&gt;
    &lt;defs&gt;
     &lt;path d=&quot;M 0 0.5 
C 0.132602 0.5 0.25979 0.447317 0.353553 0.353553 
C 0.447317 0.25979 0.5 0.132602 0.5 0 
C 0.5 -0.132602 0.447317 -0.25979 0.353553 -0.353553 
C 0.25979 -0.447317 0.132602 -0.5 0 -0.5 
C -0.132602 -0.5 -0.25979 -0.447317 -0.353553 -0.353553 
C -0.447317 -0.25979 -0.5 -0.132602 -0.5 0 
C -0.5 0.132602 -0.447317 0.25979 -0.353553 0.353553 
C -0.25979 0.447317 -0.132602 0.5 0 0.5 
z
&quot; id=&quot;md031672bb2&quot; style=&quot;stroke:#1f77b4;&quot; /&gt;
    &lt;/defs&gt;
    &lt;g clip-path=&quot;url(#p73c2132860)&quot;&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;166.64598&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.146938&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.645067&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.642428&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.491403&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.469935&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.392386&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.169878&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.417366&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;41.930486&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;177.69486&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;110.464289&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.840529&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.614317&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;68.219326&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.769384&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.257271&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.255907&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;209.03611&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;132.818695&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.207012&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;112.493438&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.761385&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.754845&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.060907&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.771269&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.326793&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.472454&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.663956&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.122842&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.585176&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.549941&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.091632&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.68434&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;56.965113&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;21.853123&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.218015&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.296927&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.933148&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.824544&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;185.322754&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.269662&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;102.03299&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.909455&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.617875&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.596273&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;63.971693&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;45.37216&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.562044&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.236027&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.129124&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.46486&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.735823&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.797666&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.743153&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.667417&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.903764&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.67139&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.106554&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.039602&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.614377&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;112.011108&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;187.37377&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.338603&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;90.098946&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;41.45183&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.193566&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.16836&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.411327&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.021752&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;170.789151&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.244918&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.198522&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.375287&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.840289&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.436633&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.721112&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.638389&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;89.583348&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.117991&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.113057&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.14355&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.31389&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.956665&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.41749&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.707672&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.252487&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.52977&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.318846&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.108781&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.854394&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.875284&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;91.517147&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.011073&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;63.754506&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.200084&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;96.211208&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.106692&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.328789&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.900843&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.83596&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.441534&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.216171&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.342954&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.733479&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.775744&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.273742&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;45.684117&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.952607&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.118903&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.185077&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.963963&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;45.83738&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;20.242978&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;195.470154&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;118.13459&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.046195&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.689779&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.023947&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.088663&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;81.481325&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.509604&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.955819&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.237659&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.153291&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.253349&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.646392&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.879482&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.390793&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.840375&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.593073&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.651112&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;85.505972&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.486218&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.43631&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.368758&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.190533&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.493638&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.232271&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.538237&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;146.919846&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.791754&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.09737&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.57402&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.925765&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.77995&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.815279&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.50281&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.151207&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.407231&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;194.431723&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.964966&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.70871&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.415231&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;185.22145&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.267747&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.889988&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.314425&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.258242&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.205215&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.585371&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.607271&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.540096&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.831413&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;172.627098&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;113.387115&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.870997&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.540962&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.92629&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.254571&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.515846&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.736971&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.470551&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.646717&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;78.217274&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.117164&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.933995&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.460212&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.727736&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.791032&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.341305&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.205213&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.175236&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;47.295799&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.323285&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.74725&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.263871&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;102.818619&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;181.215437&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.633128&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.283383&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.183698&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.78278&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.169414&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.995045&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;111.330145&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.158986&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;41.20362&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;201.244792&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;117.237869&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.339985&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.639147&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.480667&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.83566&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.925914&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.791305&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;92.219157&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.999728&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.588114&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.783173&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.824121&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.465961&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.474709&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.956665&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.794864&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;106.915995&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;194.897649&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.878485&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.215426&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.456274&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.121893&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.279442&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.598176&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.812431&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.154734&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.672592&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.013479&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.182909&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.979813&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.867616&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.002918&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.434508&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;172.716654&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.481548&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.538037&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;107.285411&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.174203&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.950193&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.784605&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.700737&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.063501&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.098412&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.945938&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.792559&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.627772&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.342546&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;170.043451&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.59097&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.986388&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.000963&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.687692&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.812915&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;175.069659&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;106.501085&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.585184&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.449923&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.250417&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.264555&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.163455&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.859305&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.625686&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.309511&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.661177&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.733569&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.984653&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.439438&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;221.727415&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;136.922727&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.918769&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.026617&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.322892&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.352172&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;174.313435&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.313937&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.212727&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.546674&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.557299&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.618531&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;153.234105&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.979151&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.166165&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.575445&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;98.748564&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.260134&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.998782&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.773746&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.772709&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.042313&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.110493&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.382177&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.912156&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.383315&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.153667&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.946577&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.086725&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.066173&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;82.053904&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;43.529418&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.994086&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.796985&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.179349&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.661974&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.882748&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.752581&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.093088&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.950942&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;180.540017&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.069235&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.831219&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.660702&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.712802&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.533034&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.651993&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.201403&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;56.041264&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;38.87052&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.120042&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.458294&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;92.207563&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;40.952967&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.478354&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.950681&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.156176&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.335108&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;190.159382&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;108.403623&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.924482&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.430536&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.16524&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.604536&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.904994&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.008866&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.5153&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.247042&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;92.858747&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.953162&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.697791&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.246009&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.531928&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.570971&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.070597&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.790804&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.17367&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.277769&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.435525&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;43.844284&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.448599&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.52785&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.895717&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.690832&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.325994&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.924273&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;88.380913&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.360955&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.634369&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.813857&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.539108&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.337767&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.230025&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.872342&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;189.194067&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;107.297328&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.124354&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.703711&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.033258&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.347831&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.13204&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.963714&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;183.900851&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;127.41997&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.810185&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.248611&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.325332&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.003412&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;98.508909&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.038909&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.83702&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.393988&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.5162&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.687564&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.275336&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.278487&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.6865&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.483544&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.94494&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.710573&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.007479&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.175872&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.454226&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.877047&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;163.388498&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.172522&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;69.283186&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;48.568744&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.501572&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.103128&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.57688&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.393283&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.835792&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.595285&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.158682&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.103071&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.806338&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.432043&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.333274&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.812122&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.39503&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.83986&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.642971&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.366709&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.862785&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.289788&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.719565&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.955452&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.980049&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.586043&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.979728&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.2451&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;102.615439&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.526764&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.007791&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.966297&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.819659&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.048258&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.714596&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.698954&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.561896&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.223152&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.454012&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.982866&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.869986&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;45.63961&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.769365&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.099729&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.801569&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.382829&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.38961&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.886538&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.305523&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.483406&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.385873&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.123225&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.809241&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.82821&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;174.116296&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.196175&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.098793&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.003212&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.216377&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.326389&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.651438&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.892462&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.634755&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.556928&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.067166&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.031789&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.457158&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.494971&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.901709&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.000205&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.204381&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.675046&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.085391&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.759343&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.88398&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.34322&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;84.619717&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.220868&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.013093&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.970489&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.900098&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.365386&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.193659&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.947612&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.988047&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.946253&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.287344&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.148146&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.434568&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.705924&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.381942&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.299941&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.538075&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.385611&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.744684&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.371632&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.581814&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.056571&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.170327&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.809297&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.942421&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.793617&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.179141&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.283745&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.066222&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.730352&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.944563&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.259355&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.891217&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.598809&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.940059&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.547831&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.988767&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.651543&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;90.84872&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.603957&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.687706&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.507274&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.192812&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.469222&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.857104&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.029976&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.72499&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.53171&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.837639&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.333002&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.650149&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.594202&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.086228&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.338935&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;80.478654&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;48.421911&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.092646&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.54717&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;60.156627&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;23.543458&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;186.261292&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.403981&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;146.696416&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.772002&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;86.524692&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.172895&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.50944&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.950367&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;96.621564&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.72414&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.287647&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.85742&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.48191&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.659088&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;146.033218&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.877419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.138549&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.096019&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.429769&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.492693&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.907392&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.003046&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.722895&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.579064&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.310443&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.689811&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.778937&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.613366&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.008794&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.251827&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.023521&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.127017&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;174.086335&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.995544&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.477455&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.598688&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.530548&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.897698&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;79.706245&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;48.018859&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.643632&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;116.501618&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;195.027064&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;112.148441&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;77.132572&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;31.015446&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.133528&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.641755&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.379487&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.055411&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;171.624473&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.591632&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;84.994346&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;47.084315&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.559043&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.416211&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.139346&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.625309&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.812728&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.149985&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.327311&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.636821&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.772709&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.52129&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.555481&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.133718&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.710359&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.913854&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.447608&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.206991&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.438446&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.3631&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.522496&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.698206&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;188.322688&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;107.644767&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;181.785475&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.711225&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.279506&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.126078&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.475883&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.1806&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.948446&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.0439&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.829567&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.71011&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;46.358573&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;26.8726&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.172318&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.055733&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.44917&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.36318&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.394867&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.804904&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.011384&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.441826&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.358936&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.063263&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.763744&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.652376&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;172.774722&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.239672&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.579515&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.309174&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;74.355237&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.12419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.053087&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.41414&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.658902&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.104709&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;77.689598&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.766928&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;88.935998&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.678395&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.276942&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.689375&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.307955&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.481479&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;68.547861&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;33.349755&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.882262&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.672051&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.814023&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.730869&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.177338&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.073783&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.968599&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.776356&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.701481&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.41465&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.429854&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.116406&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.616041&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.19237&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.210675&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.84228&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.889473&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;45.893753&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.211777&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.29234&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;94.444781&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.349913&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.131721&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.690265&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.558414&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.724263&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.4108&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.588029&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.959176&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.886031&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.551628&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.797331&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.644277&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.970771&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.672324&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.206537&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.588232&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.924504&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.756564&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.99318&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.077531&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.339071&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.752136&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.57405&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.971434&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.675206&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.32946&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.763795&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;177.098363&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.201272&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.253511&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.338598&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.115756&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.405646&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.715259&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.757032&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;57.346854&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;35.760681&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;178.280957&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;118.231292&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.472763&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.365854&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.99776&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.457092&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;73.852991&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.647812&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.755347&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.478677&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.211982&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.330054&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.045879&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.38966&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;91.254066&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.739762&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.01859&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.813846&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.315692&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.718678&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.48164&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.039999&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.842659&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.72455&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.267069&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.103679&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.847991&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.82916&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.044771&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.348334&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;177.275052&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;107.622363&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.439845&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.139711&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.596707&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.653529&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.842565&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.902737&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;94.320949&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.952863&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.273486&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.310578&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.745073&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.93427&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.093377&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.113039&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.811791&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.565884&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.527173&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.37116&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.496375&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.00881&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.229112&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.095812&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.826422&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.175771&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.689856&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.937732&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;193.045297&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.060927&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.066812&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.255322&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.26829&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.31543&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;146.880989&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.12723&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.556631&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.176048&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.35424&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.561147&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.236068&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.191984&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.28468&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.082814&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.052011&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.387961&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.394245&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.661681&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.262266&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.919827&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.981787&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.698563&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.158329&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.399132&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.294122&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.644922&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.343893&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.226436&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.137022&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.563278&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;83.775201&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;35.545252&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.385312&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.161667&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.789361&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.339507&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.848855&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.249096&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.103213&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.140953&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.609919&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.481233&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.581913&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.343261&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.491294&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.773653&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.708879&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.930621&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.790935&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.64969&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;172.15532&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.54267&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.458007&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.984412&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.664086&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.794286&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.136828&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.610365&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.347541&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.565443&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.046376&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.324682&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;73.196908&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;42.166195&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;174.381467&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;103.798217&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;189.435717&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;102.934187&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.328524&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.596498&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.070086&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.685362&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.795696&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.834187&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;95.034049&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.382838&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;188.236063&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.508878&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.938799&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.377138&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.156018&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.6695&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.728957&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.068855&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.016885&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.114422&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;163.962954&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.121322&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.843263&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.028357&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.300229&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.380936&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;171.222501&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.662128&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.364987&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.896123&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.269122&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.760024&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.67048&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.410165&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.375249&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.974086&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.605961&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.080332&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.906241&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.197949&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.38456&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.320121&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;186.746195&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.2338&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.841058&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.462199&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.292829&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.525928&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;192.161069&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;113.044106&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.29948&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.097069&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.852973&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.475533&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.647945&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;108.158038&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.233772&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.683995&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.16653&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.910037&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.422587&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.486348&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.570635&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.635832&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.425464&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.976761&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.403043&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;103.103984&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.043944&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.77806&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.450051&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.684869&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.714501&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.995021&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;68.619447&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;32.074161&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.837862&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.773666&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;163.86212&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.739044&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.588773&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.24883&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.580431&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.477348&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.450742&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.573654&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.615772&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.989547&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.644099&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.632916&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.271908&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.078887&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.918913&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.071383&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.225276&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.301467&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.788701&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.662031&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.864267&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.500392&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.833566&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.332229&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.341508&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.094737&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.444109&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.105637&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.939757&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.015015&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.238475&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.198564&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.67404&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.365744&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.823799&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.108528&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.605646&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.746909&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.913897&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;43.600432&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.075622&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.30965&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.475076&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.29015&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.579427&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.542873&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.208087&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.748464&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.19811&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.285264&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.081025&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.740858&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.238582&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.325421&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.102938&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.111935&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;204.78653&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.432433&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.306268&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.124059&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;86.475391&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;40.002451&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.317158&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.961763&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.994153&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.587859&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.951628&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.728222&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.360813&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.435697&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.035618&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;103.531835&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.106467&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.497589&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;94.877565&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;47.440417&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.388493&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.367463&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.689875&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.35007&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.654819&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.687001&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.978354&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;39.823857&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;81.438003&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.940251&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.327094&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.457468&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.78192&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.785245&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.289584&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.108785&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.617756&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;45.461908&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.774025&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.570215&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;181.519756&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;110.780947&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.291975&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.726794&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;77.270823&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.928481&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.618269&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.827098&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.74562&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.689725&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.422452&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.397581&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.166067&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.715519&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.187679&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.298808&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.195069&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.639581&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.401713&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.029812&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.277171&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.914489&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.061282&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.195023&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.387604&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.594802&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.91424&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.515207&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.14234&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.897401&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.339615&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.073162&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.97372&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.902265&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.514368&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.705231&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.934325&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.421017&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.521331&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.799043&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.603448&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.980275&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.405877&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.571947&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.235422&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.896669&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.379607&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.545316&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.154577&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.028406&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.862588&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.430979&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.668299&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;111.499196&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.878916&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.836824&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.439024&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.75953&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;68.362865&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.803358&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.507733&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.289625&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;48.414834&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;24.883471&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.364573&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.447724&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.257761&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.050419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;85.955888&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.165976&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.636994&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.00452&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.191322&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.570699&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.230313&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.724763&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.930146&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.143765&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;177.975951&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;106.297182&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.818579&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;110.671969&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.35407&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.81376&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.134558&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.486167&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;165.239006&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.042974&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.288449&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.966383&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;166.919585&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.226155&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;167.057542&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.977693&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.026761&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.224751&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.741429&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.71048&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.005126&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.901864&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.686836&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.008148&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.31006&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.780196&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.07333&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.249894&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.518601&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.65954&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.581821&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.898609&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.949603&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.88445&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.378959&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.888282&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.375711&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.396334&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.72382&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.657331&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.17906&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.09257&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.393024&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.286576&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;102.838518&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.973477&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.038675&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.943741&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.380381&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.355414&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;95.584936&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;42.683169&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.312111&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.11889&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.0221&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.051704&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.312321&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.968303&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.799681&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.515709&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.08506&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.61551&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.706658&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.213951&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.569266&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.5118&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.861956&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.854506&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.224058&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.432558&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.383418&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.28169&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.866011&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.988044&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;86.0061&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.004983&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.65393&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.057811&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.443259&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.260005&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;173.629189&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.85181&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;173.664155&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;102.978828&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.398659&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.632836&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.211701&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.305787&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.358969&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.971297&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.904304&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.743809&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;175.932048&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.603473&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;74.503792&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.304841&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.580205&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.685721&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.70568&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.935783&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;75.797124&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;37.962697&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.113186&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.648179&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.573075&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.538661&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;190.141955&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.844035&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.290978&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.382444&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.396438&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.974917&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.137682&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.488083&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.335185&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.374595&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.481868&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.90525&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.218488&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.727386&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.984731&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.035691&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.017893&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.054411&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.467773&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.26382&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.209207&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.775673&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.111041&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.240895&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.96404&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.033395&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;170.127229&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;114.96666&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;153.914002&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.077384&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.086128&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.248849&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.246692&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.709056&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;80.66633&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.13419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;84.183312&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;42.807941&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.467866&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.017955&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.723625&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.204542&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.208773&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.522856&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;82.174142&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;41.158847&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.506594&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.689836&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.882962&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.970568&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.781793&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.871019&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.464269&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.921579&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;89.131774&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.823069&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.402776&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.581031&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.700421&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.270784&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.809653&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.161045&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;81.70246&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.375774&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.241882&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.064871&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.27679&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.507995&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.314249&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.120501&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;167.016641&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.786109&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.266401&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.047852&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.73564&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.285781&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.290527&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.427538&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.225747&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.159276&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;92.033735&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.023366&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.956912&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;119.469786&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.955743&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.948179&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.20836&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.604317&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.674647&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.531772&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.365964&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.042203&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.460714&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.824949&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;102.143771&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.285085&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.666542&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.460848&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.674331&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.873979&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.774305&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.747002&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.998193&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.577637&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.454924&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.941938&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;169.312044&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.665712&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;185.084439&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.654803&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;150.909956&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.747856&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.123707&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;40.978817&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.933502&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.777583&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;170.492347&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.15408&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.386314&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;46.426993&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;195.475303&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;115.991795&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.340374&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.867616&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.309934&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.219473&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.366007&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.961728&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.82681&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.640796&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.2141&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.486473&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.265646&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.593887&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.559236&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.006392&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.979441&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.866191&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.79289&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.490692&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.704739&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.516637&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.974388&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.210618&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;96.776358&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.86612&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.489625&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.287051&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.162571&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.092204&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.963999&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.645219&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;153.721125&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.386306&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.261684&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.537076&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;146.624046&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.803552&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;191.493055&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.837418&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.207815&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.780257&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.153433&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.408654&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.265581&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;55.055179&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;69.900281&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.497879&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.788867&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.539539&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.75662&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.522719&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;171.017038&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.300275&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.095417&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;43.042559&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.081681&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.741022&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;83.506091&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.82384&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.699108&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.701631&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.913845&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.496603&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.719492&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.648904&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;166.208858&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.782206&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.791397&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.775573&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.014574&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.180243&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;48.154304&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;13.377273&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;91.97613&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;42.080856&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.694143&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.326183&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;103.401503&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.044154&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.613967&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.256203&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;202.676375&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;117.998551&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.549892&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.601462&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.283948&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.569135&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.099549&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.571033&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.156543&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.71331&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.709438&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.206509&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.668233&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.198437&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.412314&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.774518&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.498831&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.461693&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.090201&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.655628&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.379173&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.734074&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.083607&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.038519&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.023406&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.602359&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.992883&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.80909&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.048393&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;92.607122&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;82.419813&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;46.821564&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;167.040826&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;110.487599&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.632405&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.038009&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.626212&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.870091&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.742346&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;46.796582&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.105997&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.433817&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.118914&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.236398&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.005453&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.195776&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.669281&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.759004&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;49.996666&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;32.580419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.294001&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.031271&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.095795&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.827448&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.806011&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.500772&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.997604&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.135372&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.147709&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.780762&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.493511&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.931111&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.245522&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.975317&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;75.448569&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.185921&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.578139&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.629856&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.662463&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.346274&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.888375&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.387186&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.103084&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.401234&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;98.557947&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;46.323409&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.784782&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.31556&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.803031&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.159&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.672468&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.897186&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.505642&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.05715&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.507603&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.310182&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.711667&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.712308&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.669248&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.202918&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.594993&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.174625&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.995928&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.92229&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;188.684222&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.93088&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.642398&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.969993&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.498095&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.644751&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.347405&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.648049&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.599439&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.882602&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.979066&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.694048&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.695883&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.266219&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.197263&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.00692&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.842482&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.003623&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.697717&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.238467&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.076693&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.98819&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.594926&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.385015&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.800756&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.614687&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.371268&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.996195&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.985782&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.960302&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.625534&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.396167&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;172.218787&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.097091&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.604678&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.061876&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.886891&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.950448&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.313542&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.615109&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;78.97189&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;46.182159&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;176.671898&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.644306&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;88.955072&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.27813&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.6977&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.522912&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.043486&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.52803&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.357364&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.212848&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.338354&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.097597&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;98.08739&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.969345&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.338366&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.253004&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.065909&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.961145&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.108066&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.912982&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;163.74556&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.376587&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.072142&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.307598&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.400273&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.422502&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.433875&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.286274&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.03049&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.382645&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.366609&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.948257&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.949755&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.523736&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.982386&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.022234&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;44.18196&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;42.297802&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.655988&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.288731&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.036719&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.772843&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.090265&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.977073&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;153.473399&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.299361&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.164099&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.082533&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;94.947074&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.507375&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.948972&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.225957&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.118792&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.714465&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.457638&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.407072&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;205.866736&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;110.923492&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.293934&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.616294&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.357072&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.938506&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;171.858947&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.099023&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.264251&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.361428&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.642999&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;94.24522&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.699125&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.136205&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.174813&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.573163&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;95.68448&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.213353&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;174.235223&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.670985&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.217312&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;77.410978&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;122.060634&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.785792&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.012846&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;60.066493&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.377819&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.19886&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.639671&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.57845&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.29084&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.318234&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;94.24363&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.650846&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;142.559715&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.712254&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.785437&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.014584&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.909056&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.748971&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.490149&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.719432&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.587742&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.07138&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.251027&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.709465&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.607524&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.063709&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.323977&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.291165&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;199.756921&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.300035&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.653027&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.155906&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;132.821138&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.912489&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.090771&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.536543&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.039567&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.06552&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.730226&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.986836&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.343265&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.92754&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;180.193319&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;101.549185&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;110.529921&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.627049&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.804215&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.491949&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.119913&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.76301&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.415727&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.845741&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;133.353175&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.36877&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.487446&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.209888&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.569475&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.208905&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.755242&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.950378&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.06171&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.223527&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;182.869449&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.812296&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.914469&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.769837&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.641585&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.359565&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.215755&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.142619&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.063237&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.986551&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;102.201619&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;58.037066&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;80.718946&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.876032&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.36713&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.511571&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;163.880606&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.415908&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.304815&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.415664&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;195.036627&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.828943&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.215101&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;93.737407&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.763247&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.740622&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.449627&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.771941&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;101.898914&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.492168&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;170.154656&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.231789&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.639924&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.077284&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.43704&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.098955&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.586682&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.284348&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;185.182006&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.969008&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;137.568733&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.69983&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.117911&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;96.226196&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;112.738323&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.333111&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.737918&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.252596&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.69661&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.962223&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.318464&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.556505&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.876591&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.599895&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.647598&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.088539&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.620943&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.726549&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.809305&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.538196&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.143236&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.923728&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.758216&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.469816&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.530853&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.83369&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.888721&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.497557&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.728853&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;89.879068&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;85.577952&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;63.339725&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;177.43263&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.4625&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.00506&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.125065&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;158.04549&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.508407&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.796658&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.42616&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.43654&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.852514&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.067322&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.489834&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.2479&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.860082&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.572847&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.331674&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.285552&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.669384&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.791729&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;68.9888&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;179.089353&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.962951&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.767568&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.287341&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.986174&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.425502&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.69473&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.757326&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;119.86632&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.022911&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.029512&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.388678&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.306074&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.906323&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.679025&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.065334&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.407068&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;64.491973&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.1665&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.225898&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;56.018936&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;40.263559&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;130.653371&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.923944&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.005827&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.912434&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;92.626284&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.369793&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;105.13807&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.843275&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.976832&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.8144&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.650402&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.794396&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.557239&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.853243&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;160.266523&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.271977&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.067289&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.899926&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.245467&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.96006&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.115268&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.332403&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.741303&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;85.016971&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;153.736959&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;100.161171&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.440322&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.303126&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.254388&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.193198&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;97.417255&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.97528&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.43512&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.20822&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;186.97617&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.494467&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.743906&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.646963&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;181.621094&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;105.04129&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;87.042281&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.357723&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;120.361467&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.264239&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;91.358525&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;53.419757&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;167.776068&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;104.295364&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.230259&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.030773&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.655009&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.374033&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.079858&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.222253&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;107.615994&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.288773&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;155.26517&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.868938&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;128.527123&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.72558&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.550214&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.594284&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.559124&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;51.873392&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;100.157409&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.697774&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;138.84388&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.610743&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.44138&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;76.446091&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;93.304416&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;37.635973&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.219063&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;90.518265&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.816677&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.821213&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;127.890574&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.451383&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;167.07727&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.542419&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.648711&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.174627&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;80.725472&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;48.08466&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;124.528977&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.495603&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.268114&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;50.931399&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.958264&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;71.168972&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;139.374704&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;75.455679&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;88.975009&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;38.949181&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;91.494189&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;47.869866&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.4611&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.525298&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.252872&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.365897&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;141.875034&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.27224&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.142568&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;57.702451&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.729065&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.784547&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;123.35636&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.501764&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.278274&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.522611&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.466752&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;74.110888&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;143.981363&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.87469&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;156.955499&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.924489&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.035132&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;86.294069&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;151.472483&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;83.176666&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;116.35716&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;59.094644&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;99.322277&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;44.101472&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.616326&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.42889&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;184.762904&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;95.975432&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.737251&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.907408&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.358664&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.15008&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;111.686619&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;54.746823&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;147.392016&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;84.75546&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.377898&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;87.652663&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;161.857579&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;88.104957&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;162.052104&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;102.793114&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;76.277489&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.777201&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;148.131686&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.996705&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;152.058637&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;80.896326&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;113.32891&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;62.589367&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;168.805826&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;98.936497&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;149.92547&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.525254&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;134.224518&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.579024&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.632199&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.196138&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;144.444965&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.590864&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.641071&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.57981&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;108.84089&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;65.109992&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;109.743138&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.357158&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;85.416242&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.672041&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;140.151058&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.508281&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;126.993803&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.507132&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.180409&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.876862&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;115.840725&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;61.404233&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;118.811707&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;70.664515&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;106.971635&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;49.496092&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;131.906667&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;79.352091&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;178.535071&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;109.530607&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;74.743281&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;33.739627&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;114.941497&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;67.988772&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;117.993185&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.011714&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;84.818321&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;52.314535&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;104.990118&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;56.449377&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;145.711523&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.523242&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;121.756554&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;72.90957&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;164.113806&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;97.33725&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;154.731668&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;102.059325&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;135.487598&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;73.914021&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.266351&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;91.719349&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.550364&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;78.452223&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;208.758774&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;126.461774&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;136.67364&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;81.399531&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;125.708674&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;69.677399&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;129.397154&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;66.313361&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;157.941771&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;82.64294&quot; /&gt;
     &lt;use style=&quot;fill:#1f77b4;stroke:#1f77b4;&quot; x=&quot;159.287188&quot; xlink:href=&quot;#md031672bb2&quot; y=&quot;99.375591&quot; /&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_1&quot;&gt;
    &lt;g id=&quot;xtick_1&quot;&gt;
     &lt;g id=&quot;line2d_1&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L 0 3.5 
&quot; id=&quot;m0d8c3fae19&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;78.167135&quot; xlink:href=&quot;#m0d8c3fae19&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_1&quot;&gt;
      &lt;!-- −2 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 10.59375 35.5 
L 73.1875 35.5 
L 73.1875 27.203125 
L 10.59375 27.203125 
z
&quot; id=&quot;DejaVuSans-8722&quot; /&gt;
       &lt;path d=&quot;M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
&quot; id=&quot;DejaVuSans-50&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(70.796041 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-8722&quot; /&gt;
       &lt;use x=&quot;83.789062&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_2&quot;&gt;
     &lt;g id=&quot;line2d_2&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;134.111899&quot; xlink:href=&quot;#m0d8c3fae19&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_2&quot;&gt;
      &lt;!-- 0 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
&quot; id=&quot;DejaVuSans-48&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(130.930649 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_3&quot;&gt;
     &lt;g id=&quot;line2d_3&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;190.056663&quot; xlink:href=&quot;#m0d8c3fae19&quot; y=&quot;143.1&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_3&quot;&gt;
      &lt;!-- 2 --&gt;
      &lt;g transform=&quot;translate(186.875413 157.698438)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_2&quot;&gt;
    &lt;g id=&quot;ytick_1&quot;&gt;
     &lt;g id=&quot;line2d_4&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L -3.5 0 
&quot; id=&quot;m083f19ed34&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;35.304688&quot; xlink:href=&quot;#m083f19ed34&quot; y=&quot;138.884141&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_4&quot;&gt;
      &lt;!-- −10 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
&quot; id=&quot;DejaVuSans-49&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(7.2 142.68336)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-8722&quot; /&gt;
       &lt;use x=&quot;83.789062&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
       &lt;use x=&quot;147.412109&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_2&quot;&gt;
     &lt;g id=&quot;line2d_5&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;35.304688&quot; xlink:href=&quot;#m083f19ed34&quot; y=&quot;94.731325&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_5&quot;&gt;
      &lt;!-- 0 --&gt;
      &lt;g transform=&quot;translate(21.942187 98.530544)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_3&quot;&gt;
     &lt;g id=&quot;line2d_6&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;35.304688&quot; xlink:href=&quot;#m083f19ed34&quot; y=&quot;50.578509&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_6&quot;&gt;
      &lt;!-- 10 --&gt;
      &lt;g transform=&quot;translate(15.579687 54.377728)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_3&quot;&gt;
    &lt;path d=&quot;M 35.304688 143.1 
L 35.304688 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_4&quot;&gt;
    &lt;path d=&quot;M 230.604688 143.1 
L 230.604688 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_5&quot;&gt;
    &lt;path d=&quot;M 35.304687 143.1 
L 230.604687 143.1 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_6&quot;&gt;
    &lt;path d=&quot;M 35.304687 7.2 
L 230.604687 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
  &lt;/g&gt;
 &lt;/g&gt;
 &lt;defs&gt;
  &lt;clipPath id=&quot;p73c2132860&quot;&gt;
   &lt;rect height=&quot;135.9&quot; width=&quot;195.3&quot; x=&quot;35.304688&quot; y=&quot;7.2&quot; /&gt;
  &lt;/clipPath&gt;
 &lt;/defs&gt;
&lt;/svg&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Reading-the-Dataset&quot;&gt;Reading the Dataset&lt;a class=&quot;anchor-link&quot; href=&quot;#Reading-the-Dataset&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Recall that training models consists of
making multiple passes over the dataset,
grabbing one minibatch of examples at a time,
and using them to update our model.
Since this process is so fundamental
to training machine learning algorithms,
its worth defining a utility function
to shuffle the data and access it in minibatches.&lt;/p&gt;
&lt;p&gt;In the following code, we define a &lt;code&gt;data_iter&lt;/code&gt; function
to demonstrate one possible implementation of this functionality.
The function takes a batch size, a design matrix,
and a vector of labels, yielding minibatches of size &lt;code&gt;batch_size&lt;/code&gt;.
Each minibatch consists of a tuple of features and labels.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;data_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# The examples are read at random, in no particular order&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;batch_indices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_indices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_indices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In general, note that we want to use reasonably sized minibatches
to take advantage of the GPU hardware,
which excels at parallelizing operations.
Because each example can be fed through our models in parallel
and the gradient of the loss function for each example can also be taken in parallel,
GPUs allow us to process hundreds of examples in scarcely more time
than it might take to process just a single example.&lt;/p&gt;
&lt;p&gt;To build some intuition, let us read and print
the first small batch of data examples.
The shape of the features in each minibatch tells us
both the minibatch size and the number of input features.
Likewise, our minibatch of labels will have a shape given by &lt;code&gt;batch_size&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[[-0.22913499 -1.4747815 ]
 [-2.298264    0.10911477]
 [ 1.8687551   0.05255232]
 [-1.8077929  -0.44989827]
 [-0.37867823 -0.8062544 ]
 [ 1.1116904   0.10874183]
 [ 1.2040559   1.3111951 ]
 [ 1.4859676  -1.6136234 ]
 [ 0.7907037  -0.07465859]
 [ 0.24154152 -0.79218465]] 
 [ 8.782716   -0.75900215  7.7884192   2.1199474   6.1864944   6.066374
  2.1485395  12.633882    6.0255065   7.386261  ]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;As we run the iterator, we obtain distinct minibatches
successively until all the data has been exhausted (try this).
While the iterator implemented above is good for didactic purposes,
it is inefficient in ways that might get us in trouble on real problems.
For example, it requires that we load all data in memory
and that we perform lots of random memory access.
The built-in iterators implemented in Apache MXNet
are considerably more efficient and they can deal
both with data stored in file and data fed via a data stream.&lt;/p&gt;
&lt;h2 id=&quot;Initializing-Model-Parameters&quot;&gt;Initializing Model Parameters&lt;a class=&quot;anchor-link&quot; href=&quot;#Initializing-Model-Parameters&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Before we can begin optimizing our model's parameters by gradient descent,
we need to have some parameters in the first place.
In the following code, we initialize weights by sampling
random numbers from a normal distribution with mean 0
and a standard deviation of $0.01$, setting the bias $b$ to $0$.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;After initialized our parameters,
our next task is to update them until
they fit our data sufficiently well.
Each update requires taking the gradient
(a multi-dimensional derivative)
of our loss function with respect to the parameters.
Given this gradient, we can update each parameter
in the direction that reduces the loss.&lt;/p&gt;
&lt;p&gt;Since nobody wants to compute gradients explicitly
(this is tedious and error prone),
we use automatic differentiation to compute the gradient.
See :numref:&lt;code&gt;sec_autograd&lt;/code&gt; for more details.
Recall from the autograd chapter
that in order for the system to know
that it should store a gradient for our parameters, we specified to attach
gradients to both $w$ and $b$ on the above codes.&lt;/p&gt;
&lt;h2 id=&quot;Defining-the-Model&quot;&gt;Defining the Model&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Model&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Next, we must define our model,
relating its inputs and parameters to its outputs.
Recall that to calculate the output of the linear model,
we simply take the matrix-vector dot product
of the examples $\mathbf{X}$ and the models weights $w$,
and add the offset $b$ to each example.
Note that below $Xw$  is a vector and $b$ is a scalar.
Recall that when we add a vector and a scalar,
the scalar is added to each component of the vector.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;linreg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Defining-the-Loss-Function&quot;&gt;Defining the Loss Function&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Loss-Function&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Since updating our model requires taking
the gradient of our loss function,
we ought to define the loss function first.
Here we will use the squared loss function
as described in the previous section.
In the implementation, we need to transform the true value &lt;code&gt;y&lt;/code&gt;
into the predicted value's shape &lt;code&gt;y_hat&lt;/code&gt;.
The result returned by the following function
will also be the same as the &lt;code&gt;y_hat&lt;/code&gt; shape.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;squared_loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_hat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_hat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_hat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Defining-the-Optimization-Algorithm&quot;&gt;Defining the Optimization Algorithm&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Optimization-Algorithm&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As we discussed in the previous section,
linear regression has a closed-form solution.
However, this is not a book about linear regression,
it is a book about deep learning.
Since none of the other models that this book introduces
can be solved analytically, we will take this opportunity to introduce your first working example of stochastic gradient descent (SGD).&lt;/p&gt;
&lt;p&gt;At each step, using one batch randomly drawn from our dataset,
we will estimate the gradient of the loss with respect to our parameters.
Next, we will update our parameters (a small amount)
in the direction that reduces the loss.
Recall from :numref:&lt;code&gt;sec_autograd&lt;/code&gt; that after we call &lt;code&gt;backward&lt;/code&gt;
each parameter (&lt;code&gt;param&lt;/code&gt;) will have its gradient stored in &lt;code&gt;param.grad&lt;/code&gt;.
The following code applies the SGD update,
given a set of parameters, a learning rate, and a batch size.
The size of the update step is determined by the learning rate &lt;code&gt;lr&lt;/code&gt;.
Because our loss is calculated as a sum over the batch of examples,
we normalize our step size by the batch size (&lt;code&gt;batch_size&lt;/code&gt;),
so that the magnitude of a typical step size
does not depend heavily on our choice of the batch size.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sgd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Training&quot;&gt;Training&lt;a class=&quot;anchor-link&quot; href=&quot;#Training&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that we have all of the parts in place,
we are ready to implement the main training loop.
It is crucial that you understand this code
because you will see nearly identical training loops
over and over again throughout your career in deep learning.&lt;/p&gt;
&lt;p&gt;In each iteration, we will grab minibatches of models,
first passing them through our model to obtain a set of predictions.
After calculating the loss, we call the &lt;code&gt;backward&lt;/code&gt; function
to initiate the backwards pass through the network,
storing the gradients with respect to each parameter
in its corresponding &lt;code&gt;.grad&lt;/code&gt; attribute.
Finally, we will call the optimization algorithm &lt;code&gt;sgd&lt;/code&gt;
to update the model parameters.
Since we previously set the batch size &lt;code&gt;batch_size&lt;/code&gt; to $10$,
the loss shape &lt;code&gt;l&lt;/code&gt; for each minibatch is ($10$, $1$).&lt;/p&gt;
&lt;p&gt;In summary, we will execute the following loop:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initialize parameters $(\mathbf{w}, b)$&lt;/li&gt;
&lt;li&gt;Repeat until done&lt;ul&gt;
&lt;li&gt;Compute gradient $\mathbf{g} \leftarrow \partial_{(\mathbf{w},b)} \frac{1}{\mathcal{B}} \sum_{i \in \mathcal{B}} l(\mathbf{x}^i, y^i, \mathbf{w}, b)$&lt;/li&gt;
&lt;li&gt;Update parameters $(\mathbf{w}, b) \leftarrow (\mathbf{w}, b) - \eta \mathbf{g}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the code below, &lt;code&gt;l&lt;/code&gt; is a vector of the losses
for each example in the minibatch.
Because &lt;code&gt;l&lt;/code&gt; is not a scalar variable,
running &lt;code&gt;l.backward()&lt;/code&gt; adds together the elements in &lt;code&gt;l&lt;/code&gt;
to obtain the new variable and then calculates the gradient.&lt;/p&gt;
&lt;p&gt;In each epoch (a pass through the data),
we will iterate through the entire dataset
(using the &lt;code&gt;data_iter&lt;/code&gt; function) once
passing through every examples in the training dataset
(assuming the number of examples is divisible by the batch size).
The number of epochs &lt;code&gt;num_epochs&lt;/code&gt; and the learning rate &lt;code&gt;lr&lt;/code&gt; are both hyper-parameters,
which we set here to $3$ and $0.03$, respectively.
Unfortunately, setting hyper-parameters is tricky
and requires some adjustment by trial and error.
We elide these details for now but revise them
later in
:numref:&lt;code&gt;chap_optimization&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.03&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Learning rate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;num_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Number of iterations&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linreg&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Our fancy linear model&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;squared_loss&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 0.5 (y-y&amp;#39;)^2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Assuming the number of examples can be divided by the batch size, all&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# the examples in the training dataset are used once in one epoch&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# iteration. The features and tags of minibatch examples are given by X&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# and y respectively&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autograd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Minibatch loss in X and y&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Compute gradient on l with respect to [w, b]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sgd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Update parameters using their gradient&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;train_l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;epoch &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, loss &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;epoch 1, loss 0.025012101978063583
epoch 2, loss 8.948738104663789e-05
epoch 3, loss 5.136155232321471e-05
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In this case, because we synthesized the data ourselves,
we know precisely what the true parameters are.
Thus, we can evaluate our success in training
by comparing the true parameters
with those that we learned through our training loop.
Indeed they turn out to be very close to each other.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error in estimating w&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error in estimating b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Error in estimating w [0.00073254 0.00015283]
Error in estimating b [0.00083923]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Note that we should not take it for granted
that we are able to recover the parameters accurately.
This only happens for a special category problems:
strongly convex optimization problems with &quot;enough&quot; data to ensure
that the noisy samples allow us to recover the underlying dependency.
In most cases this is &lt;em&gt;not&lt;/em&gt; the case.
In fact, the parameters of a deep network
are rarely the same (or even close) between two different runs,
unless all conditions are identical,
including the order in which the data is traversed.
However, in machine learning, we are typically less concerned
with recovering true underlying parameters,
and more concerned with parameters that lead to accurate prediction.
Fortunately, even on difficult optimization problems,
stochastic gradient descent can often find remarkably good solutions,
owing partly to the fact that, for deep networks,
there exist many configurations of the parameters
that lead to accurate prediction.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;Summary&lt;a class=&quot;anchor-link&quot; href=&quot;#Summary&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We saw how a deep network can be implemented
and optimized from scratch, using just tensors and auto differentiation,
without any need for defining layers, fancy optimizers, etc.
This only scratches the surface of what is possible.
In the following sections, we will describe additional models
based on the concepts that we have just introduced
and learn how to implement them more concisely.&lt;/p&gt;
&lt;h2 id=&quot;Exercises&quot;&gt;Exercises&lt;a class=&quot;anchor-link&quot; href=&quot;#Exercises&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;What would happen if we were to initialize the weights $\mathbf{w} = 0$. Would the algorithm still work?&lt;/li&gt;
&lt;li&gt;Assume that you are
&lt;a href=&quot;https://en.wikipedia.org/wiki/Georg_Ohm&quot;&gt;Georg Simon Ohm&lt;/a&gt; trying to come up
with a model between voltage and current. Can you use auto differentiation to learn the parameters of your model.&lt;/li&gt;
&lt;li&gt;Can you use &lt;a href=&quot;https://en.wikipedia.org/wiki/Planck%27s_law&quot;&gt;Planck's Law&lt;/a&gt; to determine the temperature of an object using spectral energy density?&lt;/li&gt;
&lt;li&gt;What are the problems you might encounter if you wanted to  compute the second derivatives? How would you fix them?&lt;/li&gt;
&lt;li&gt;Why is the &lt;code&gt;reshape&lt;/code&gt; function needed in the &lt;code&gt;squared_loss&lt;/code&gt; function?&lt;/li&gt;
&lt;li&gt;Experiment using different learning rates to find out how fast the loss function value drops.&lt;/li&gt;
&lt;li&gt;If the number of examples cannot be divided by the batch size, what happens to the &lt;code&gt;data_iter&lt;/code&gt; function's behavior?&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.d2l.ai/t/42&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">İleri Lineer Regresyon Uygulaması (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/Linear-Regresyon-Tam-Uygulama.html" rel="alternate" type="text/html" title="İleri Lineer Regresyon Uygulaması (✗)" /><published>2020-02-22T00:00:00-06:00</published><updated>2020-02-22T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/Linear-Regresyon-Tam-Uygulama</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/Linear-Regresyon-Tam-Uygulama.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-22-Linear-Regresyon-Tam-Uygulama.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The following additional libraries are needed to run this
notebook. Note that running on Colab is experimental, please report a Github
issue if you have any problem.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install -U mxnet-cu101mkl&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.6.0  # updating mxnet to at least v1.6
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install &lt;span class=&quot;nv&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.13.2 -f https://d2l.ai/whl.html # installing d2l
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Concise-Implementation-of-Linear-Regression&quot;&gt;Concise Implementation of Linear Regression&lt;a class=&quot;anchor-link&quot; href=&quot;#Concise-Implementation-of-Linear-Regression&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;:label:&lt;code&gt;sec_linear_gluon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Broad and intense interest in deep learning for the past several years
has inspired both companies, academics, and hobbyists
to develop a variety of mature open source frameworks
for automating the repetitive work of implementing
gradient-based learning algorithms.
In the previous section, we relied only on
(i) tensors for data storage and linear algebra;
and (ii) auto differentiation for calculating derivatives.
In practice, because data iterators, loss functions, optimizers,
and neural network layers (and some whole architectures)
are so common, modern libraries implement these components for us as well.&lt;/p&gt;
&lt;p&gt;In this section, we will show you how to implement
the linear regression model from :numref:&lt;code&gt;sec_linear_scratch&lt;/code&gt;
concisely by using framework's high-level APIs.&lt;/p&gt;
&lt;h2 id=&quot;Generating-the-Dataset&quot;&gt;Generating the Dataset&lt;a class=&quot;anchor-link&quot; href=&quot;#Generating-the-Dataset&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To start, we will generate the same dataset as in the previous section.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;d2l&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autograd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gluon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synthetic_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Reading-the-Dataset&quot;&gt;Reading the Dataset&lt;a class=&quot;anchor-link&quot; href=&quot;#Reading-the-Dataset&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Rather than rolling our own iterator,
we can call upon the &lt;code&gt;data&lt;/code&gt; module to read data.
The first step will be to instantiate an &lt;code&gt;ArrayDataset&lt;/code&gt;.
This object's constructor takes one or more tensors as arguments.
Here, we pass in &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; as arguments.
Next, we will use the &lt;code&gt;ArrayDataset&lt;/code&gt; to instantiate a &lt;code&gt;DataLoader&lt;/code&gt;,
which also requires that we specify a &lt;code&gt;batch_size&lt;/code&gt;
and specify a Boolean value &lt;code&gt;shuffle&lt;/code&gt; indicating whether or not
we want the &lt;code&gt;DataLoader&lt;/code&gt; to shuffle the data
on each epoch (pass through the dataset).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_arrays&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#@save&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Construct a Gluon data loader.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gluon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayDataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_arrays&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gluon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now we can use &lt;code&gt;data_iter&lt;/code&gt; in much the same way as we called
the &lt;code&gt;data_iter&lt;/code&gt; function in the previous section.
To verify that it is working, we can read and print
the first minibatch of instances. Comparing to :numref:&lt;code&gt;sec_linear_scratch&lt;/code&gt;, here we use &lt;code&gt;iter&lt;/code&gt; to construct an Python iterator and then use &lt;code&gt;next&lt;/code&gt; to obtain the first item from the iterator.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[array([[ 0.33342266, -0.23580593],
        [ 2.3943908 , -0.04466231],
        [ 0.6816457 ,  0.27752855],
        [-1.7383806 , -0.6379685 ],
        [-0.9778045 ,  0.5815632 ],
        [-0.9712193 ,  0.5035904 ],
        [-0.23578128, -0.4984049 ],
        [-0.01892485, -1.5284138 ],
        [-1.5667844 , -1.8091347 ],
        [-0.01124159,  0.6532863 ]]),
 array([5.6608744 , 9.127469  , 4.633699  , 2.8726306 , 0.26861465,
        0.53360987, 5.4180074 , 9.356497  , 7.2266026 , 1.9496151 ])]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Defining-the-Model&quot;&gt;Defining the Model&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Model&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When we implemented linear regression from scratch
(in :numref:&lt;code&gt;sec_linear_scratch&lt;/code&gt;),
we defined our model parameters explicitly
and coded up the calculations to produce output
using basic linear algebra operations.
You &lt;em&gt;should&lt;/em&gt; know how to do this.
But once your models get more complex,
and once you have to do this nearly every day,
you will be glad for the assistance.
The situation is similar to coding up your own blog from scratch.
Doing it once or twice is rewarding and instructive,
but you would be a lousy web developer
if every time you needed a blog you spent a month
reinventing the wheel.&lt;/p&gt;
&lt;p&gt;For standard operations, we can use the framework's predefined layers,
which allow us to focus especially
on the layers used to construct the model
rather than having to focus on the implementation.
To define a linear model, we first import the &lt;code&gt;nn&lt;/code&gt; module,
which defines a large number of neural network layers
(note that &quot;nn&quot; is an abbreviation for neural networks).
We will first define a model variable &lt;code&gt;net&lt;/code&gt;,
which will refer to an instance of the &lt;code&gt;Sequential&lt;/code&gt; class.
The &lt;code&gt;Sequential&lt;/code&gt; class defines a container
for several layers that will be chained together.
Given input data, a &lt;code&gt;Sequential&lt;/code&gt; passes it through
the first layer, in turn passing the output
as the second layer's input and so forth.
In the following example, our model consists of only one layer,
so we do not really need &lt;code&gt;Sequential&lt;/code&gt;.
But since nearly all of our future models
will involve multiple layers,
we will use it anyway just to familiarize you
with the most standard workflow.&lt;/p&gt;
&lt;p&gt;Recall the architecture of a single-layer network as shown in :numref:&lt;code&gt;fig_singleneuron&lt;/code&gt;.
The layer is said to be &lt;em&gt;fully-connected&lt;/em&gt;
because each of its inputs are connected to each of its outputs
by means of a matrix-vector multiplication.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://d2l.ai/_images/singleneuron.svg&quot; alt=&quot;Linear regression is a single-layer neural network. &quot; /&gt;
:label:&lt;code&gt;fig_singleneuron&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet.gluon&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In Gluon, the fully-connected layer is defined in the &lt;code&gt;Dense&lt;/code&gt; class.
Since we only want to generate a single scalar output,
we set that number to $1$.&lt;/p&gt;
&lt;p&gt;It is worth noting that, for convenience,
Gluon does not require us to specify
the input shape for each layer.
So here, we do not need to tell Gluon
how many inputs go into this linear layer.
When we first try to pass data through our model,
e.g., when we execute &lt;code&gt;net(X)&lt;/code&gt; later,
Gluon will automatically infer the number of inputs to each layer.
We will describe how this works in more detail
in the chapter &quot;Deep Learning Computation&quot;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Initializing-Model-Parameters&quot;&gt;Initializing Model Parameters&lt;a class=&quot;anchor-link&quot; href=&quot;#Initializing-Model-Parameters&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Before using &lt;code&gt;net&lt;/code&gt;, we need to initialize the model parameters,
such as the weights and biases in the linear regression model.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We will import the &lt;code&gt;initializer&lt;/code&gt; module from MXNet.
This module provides various methods for model parameter initialization.
Gluon makes &lt;code&gt;init&lt;/code&gt; available as a shortcut (abbreviation)
to access the &lt;code&gt;initializer&lt;/code&gt; package.
By calling &lt;code&gt;init.Normal(sigma=0.01)&lt;/code&gt;,
we specify that each &lt;em&gt;weight&lt;/em&gt; parameter
should be randomly sampled from a normal distribution
with mean $0$ and standard deviation $0.01$.
The &lt;em&gt;bias&lt;/em&gt; parameter will be initialized to zero by default.
Both the weight vector and bias will have attached gradients.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The code above may look straightforward but you should note
that something strange is happening here.
We are initializing parameters for a network
even though Gluon does not yet know
how many dimensions the input will have!
It might be $2$ as in our example or it might be $2000$.
Gluon lets us get away with this because behind the scenes,
the initialization is actually &lt;em&gt;deferred&lt;/em&gt;.
The real initialization will take place only
when we for the first time attempt to pass data through the network.
Just be careful to remember that since the parameters
have not been initialized yet,
we cannot access or manipulate them.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Defining-the-Loss-Function&quot;&gt;Defining the Loss Function&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Loss-Function&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In Gluon, the &lt;code&gt;loss&lt;/code&gt; module defines various loss functions.
We will use the imported module &lt;code&gt;loss&lt;/code&gt; with the pseudonym &lt;code&gt;gloss&lt;/code&gt;
to avoid confusing it for the variable
holding our chosen loss function.
In this example, we will use the Gluon
implementation of squared loss (&lt;code&gt;L2Loss&lt;/code&gt;).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet.gluon&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gloss&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gloss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L2Loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Defining-the-Optimization-Algorithm&quot;&gt;Defining the Optimization Algorithm&lt;a class=&quot;anchor-link&quot; href=&quot;#Defining-the-Optimization-Algorithm&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Minibatch SGD and related variants
are standard tools for optimizing neural networks
and thus Gluon supports SGD alongside a number of
variations on this algorithm through its &lt;code&gt;Trainer&lt;/code&gt; class.
When we instantiate the &lt;code&gt;Trainer&lt;/code&gt;,
we will specify the parameters to optimize over
(obtainable from our net via &lt;code&gt;net.collect_params()&lt;/code&gt;),
the optimization algorithm we wish to use (&lt;code&gt;sgd&lt;/code&gt;),
and a dictionary of hyper-parameters
required by our optimization algorithm.
SGD just requires that we set the value &lt;code&gt;learning_rate&lt;/code&gt;,
(here we set it to 0.03).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gluon&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gluon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Trainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sgd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;learning_rate&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Training&quot;&gt;Training&lt;a class=&quot;anchor-link&quot; href=&quot;#Training&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You might have noticed that expressing our model through Gluon
requires comparatively few lines of code.
We did not have to individually allocate parameters,
define our loss function, or implement stochastic gradient descent.
Once we start working with much more complex models,
Gluon's advantages will grow considerably.
However, once we have all the basic pieces in place,
the training loop itself is strikingly similar
to what we did when implementing everything from scratch.&lt;/p&gt;
&lt;p&gt;To refresh your memory: for some number of epochs,
we will make a complete pass over the dataset (train_data),
iteratively grabbing one minibatch of inputs
and the corresponding ground-truth labels.
For each minibatch, we go through the following ritual:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate predictions by calling &lt;code&gt;net(X)&lt;/code&gt; and calculate the loss &lt;code&gt;l&lt;/code&gt; (the forward pass).&lt;/li&gt;
&lt;li&gt;Calculate gradients by calling &lt;code&gt;l.backward()&lt;/code&gt; (the backward pass).&lt;/li&gt;
&lt;li&gt;Update the model parameters by invoking our SGD optimizer (note that &lt;code&gt;trainer&lt;/code&gt; already knows which parameters to optimize over, so we just need to pass in the minibatch size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For good measure, we compute the loss after each epoch and print it to monitor progress.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autograd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;trainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;epoch &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, loss: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asnumpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;epoch 1, loss: 0.025046
epoch 2, loss: 0.000089
epoch 3, loss: 0.000051
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Below, we compare the model parameters learned by training on finite data
and the actual parameters that generated our dataset.
To access parameters with Gluon,
we first access the layer that we need from &lt;code&gt;net&lt;/code&gt;
and then access that layer's weight (&lt;code&gt;weight&lt;/code&gt;) and bias (&lt;code&gt;bias&lt;/code&gt;).
To access each parameter's values as a tensor,
we invoke its &lt;code&gt;data&lt;/code&gt; method.
As in our from-scratch implementation,
note that our estimated parameters are
close to their ground truth counterparts.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error in estimating w&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error in estimating b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true_b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Error in estimating w [[ 0.00041139 -0.00037718]]
Error in estimating b [0.00084257]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Summary&quot;&gt;Summary&lt;a class=&quot;anchor-link&quot; href=&quot;#Summary&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;Using Gluon, we can implement models much more succinctly.&lt;/li&gt;
&lt;li&gt;In Gluon, the &lt;code&gt;data&lt;/code&gt; module provides tools for data processing, the &lt;code&gt;nn&lt;/code&gt; module defines a large number of neural network layers, and the &lt;code&gt;loss&lt;/code&gt; module defines many common loss functions.&lt;/li&gt;
&lt;li&gt;MXNet's module &lt;code&gt;initializer&lt;/code&gt; provides various methods for model parameter initialization.&lt;/li&gt;
&lt;li&gt;Dimensionality and storage are automatically inferred (but be careful not to attempt to access parameters before they have been initialized).&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Exercises&quot;&gt;Exercises&lt;a class=&quot;anchor-link&quot; href=&quot;#Exercises&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ol&gt;
&lt;li&gt;If we replace &lt;code&gt;l = loss(output, y)&lt;/code&gt; with &lt;code&gt;l = loss(output, y).mean()&lt;/code&gt;, we need to change &lt;code&gt;trainer.step(batch_size)&lt;/code&gt; to &lt;code&gt;trainer.step(1)&lt;/code&gt; for the code to behave identically. Why?&lt;/li&gt;
&lt;li&gt;Review the MXNet documentation to see what loss functions and initialization methods are provided in the modules &lt;code&gt;gluon.loss&lt;/code&gt; and &lt;code&gt;init&lt;/code&gt;. Replace the loss by Huber's loss.&lt;/li&gt;
&lt;li&gt;How do you access the gradient of &lt;code&gt;dense.weight&lt;/code&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.d2l.ai/t/44&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Olasılık (✔)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/olasilik.html" rel="alternate" type="text/html" title="Olasılık (✔)" /><published>2020-02-22T00:00:00-06:00</published><updated>2020-02-22T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/olasilik</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/22/olasilik.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-22-olasilik.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Makine Öğrenmesi tamamen tahminler üretme işidir. Örneğin klinik geçmişi göz önüne alındığında, bir hastanın gelecek yıl kalp krizi geçirme &lt;em&gt;olasılığını&lt;/em&gt; tahmin etmek isteyebiliriz. Anormallik tespitinde, bir uçağın jet motorundan gelen bir dizi okumanın normal çalışma için ne kadar &lt;em&gt;olası&lt;/em&gt; olduğunu değerlendirmek isteyebiliriz. Pekiştirmeli öğrenmede, robotun ya da daha genel olarak etmenin bir ortamda akıllıca davranmasını isteriz. Bunun anlamı, mevcut eylemlerin her biri altında yüksek bir ödül alma olasılığını düşünmemiz gerektiğidir. Tavsiye sistemleri inşa ettiğimizde de olasılıkları düşünmemiz gerekir. Örneğin, büyük bir online kitapçı için çalıştığımızı varsayalım. Belirli bir kullanıcının belirli bir kitabı satın alma olasılığını tahmin etmek isteyebiliriz. Tüm bu durumlar için olasılık dilini kullanmalıyız. Bir çok kurs, ana bilim dalları, tezler, kariyerler ve hatta bölümler olasılık bilimi üzerine kurulmuştur. Doğal olarak, bu bölümdeki amacımız tüm olasılık konularını öğretmek değildir. Bunun yerine sıfırdan, size ilk derin öğrenme modellerinizi oluşturmaya başlayabileceğiniz kadar olasılık bilgisi öğretmeyi ve isterseniz konunun kendi kendinize keşfetmeye başlayabileceğiniz kadarlık özünü kavratmak istiyoruz.&lt;/p&gt;
&lt;p&gt;Açık açık ifade etmesek veya somut örnekler vermesek de, önceki bölümlerde olaslığı kullandık. Şimdi ilk örneğimizle başlayaşım: kedi ve köpekleri fotoğraflardan ayırt etmek. Bu basit gelebilir ama aslında zor bir problemdir. Sorunun zorluğu ilk planda görüntünün çözünürlüğüne bağlı olabilir.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/d2l-ai/d2l-en-colab/blob/master/img/cat_dog_pixels.png?raw=1&quot; alt=&quot;Images of varying resolutions ($10 \times 10$, $20 \times 20$, $40 \times 40$, $80 \times 80$, and $160 \times 160$ pixels).&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Değişken çözünürlükteki resimler (10x10, 20x20, 40x40, 80x80 ve 160x160 piksel)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Şekilde görüldüğü gibi, $160 \times 160$ piksel çözünürlüğe sahip resimlerde kedi ve köpekleri seçmek bizim için kolay olsa da, $40 \times 40$ piksel için zor hata $10 \times 10$ piksel için imkansızdır. Diğer bir ifadeyle, uzaklaştıkça yani çözünürlük azaldıkça kedi ve köpek resimlerini ayırt etmemiz yazı-tura atmaya dönüşmeye başlar. Olasılık sayesinde belirsizlik düzeyini matematiksel olarak ifade edebiliriz. Eğer resmin kedi resmi olduğundan tam olarak eminsek, resme karşılık gelen $y$ etiketinin &quot;kedi&quot; olma olasılığı yani $P(y=$ &quot;kedi&quot;$)$  ifadesi $1$ sayısına eşittir deriz. Fakat $y =$ &quot;kedi&quot; veya that $y =$ &quot;köpek&quot; diyebilmek için herhangi bir bulgu yok ise, olasılıkların eşit olduğunu söyler ve bunu $P(y=$ &quot;kedi&quot;$) = P(y=$ &quot;köpek&quot;$) = 0.5$ şeklinde gösteririz. Eğer resmin kedi resmi olduğu yüksek ihtimal ise fakat kesin emin değilsek, olasılığı $0.5  &amp;lt; P(y=$ &quot;kedi&quot;$) &amp;lt; 1$ gibi bir değer olarak tahmin ederiz.&lt;/p&gt;
&lt;p&gt;Şimdi diğer bir örnek verelim. Hava durumu izleme verilerinden yarın İstanbul'da yağmur yağma olaslığını tahmin etmek istiyoruz. Yaz aylarındaysak yağmur yaklaşık 0.5 olasılıkla yağar.&lt;/p&gt;
&lt;p&gt;İki örnekte de bir şeyin alacağı değerle ilgileniyoruz. Ayrıca ikisinde de sonuçtan kesin emin değiliz. Fakat iki durum arasında kritik bir farklılık var. İlk durumda resim ya kedidir ya da köpektir ve hangisi olduğunu kesin bilmiyoruz. İkinci durumda sonuç rastgele bir olay gibi görülebilir. Dolayısıyla olasılık, belirsizliğin esnek dilidir ve birçok farklı durumda etkin bir şekilde kullanılabilir.&lt;/p&gt;
&lt;h2 id=&quot;Temel-Olas&amp;#305;l&amp;#305;k-Kuram&amp;#305;&quot;&gt;Temel Olas&amp;#305;l&amp;#305;k Kuram&amp;#305;&lt;a class=&quot;anchor-link&quot; href=&quot;#Temel-Olas&amp;#305;l&amp;#305;k-Kuram&amp;#305;&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Bir zar atalım ve gelen sayının 1 rakamı olma ihtimalini hesaplayalım. Eğer düzgün bir zar ise, 1'den 6'ya kadar olan tüm sonuçlar aynı şansa sahiptir ve dolayısıyla altıda bir oranında 1 rakamı gelir. Daha matematiksel olarak, 1 gelme olasılığının $\frac{1}{6}$ olduğunu söyleriz.&lt;/p&gt;
&lt;p&gt;Fabirakadan yeni çıkmış bir zarın düzgün mü değil mi olduğunu öğrenmek isteyebiliriz. Bunu öğrenmenin tek yolu zarı defalarca atmak ve sonuçları kaydetmektir. Her atışta 1 ile 6 arasında bir sonuç elde ederiz. Bu sonuçlardan her bir rakamın olasılığını bulalım.&lt;/p&gt;
&lt;p&gt;En basit yol her bir rakamın kaç defa geldiğini saymak ve bunu toplam atış sayısına oranlamaktır. Bu süreç belirlediğimiz &lt;em&gt;olay&lt;/em&gt; için (mesela 1 gelmesi olayı) olasığı &lt;em&gt;tahmin&lt;/em&gt; etmemizi sağlar. İstatistikteki &lt;em&gt;Büyük Sayılar Yasası&lt;/em&gt; gereği, daha çok zar attıkça elde ettiğimiz oranlar gerçek olasılığa doğru yaklaşır. Ayrıntıya girmeden önce bir deneme yapalım.&lt;/p&gt;
&lt;p&gt;Önce gerekli olan kütüphaneleri yükleyelim.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install &lt;span class=&quot;nv&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.13.2 -f https://d2l.ai/whl.html # installing d2l
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;pip install -U mxnet-cu101mkl&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.6.0  # updating mxnet to at least v1.6
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Şimdi de kullanacağımız araçları ve paket programları çağıralım.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;matplotlib&lt;/span&gt; inline
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;d2l&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mxnet&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;npx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Şimdi zar atma işini programla yapmak istiyoruz. İstatistikte buna olasılık dağılımından &lt;em&gt;örneklem&lt;/em&gt; alma denir. Belli sayıda seçeneğe karşılık gelen olasılıkları veren dağılıma &lt;em&gt;çok terimli dağılım&lt;/em&gt; (multinomial distribution) denir. İleride &lt;em&gt;dağılım&lt;/em&gt; kavramı daha net açıklanacaktır ama şimdilik bunu olaylara olasılık eşleme olarak düşünebilirsiniz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;MXNet ile çokterimli dağılımdan örneklem almak için &lt;code&gt;np.random.multinomial&lt;/code&gt; fonksiyonunu kullanıyoruz. Bu fonksiyonu farklı şekillerde yükleyip kullanabilirsiniz, biz en kolayını tercih edeceğiz.&lt;/p&gt;
&lt;p&gt;Öncelikle &lt;code&gt;np.random.multinomial&lt;/code&gt; fonksiyonunun verdiği vektörü ele alalım. Bu vektörün bileşenleri, bu blieşene karşılık gelen sonucun kaç defa elde edildiğini gösterir. Mesela zar atmada, $6$ bileşenli bir vektör vardır ve ilk bileşen $1$ rakamının kaç defa geldiğini, benzer şekilde $i$ bileşeni $i$ sonucunun kaç defa geldiğini gösterir.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Zarı 1 defa atalım.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multinomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;array([0, 0, 0, 1, 0, 0], dtype=int64)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Bunu defalarca çalıştırırsanız her seferinde rastgele sonuçlar elde edersiniz. Zarın düzgün olup olmadığını anlamak için bu dağılımdan birçok örneklem almalıyız. Mesela 10 zar atmak için &lt;code&gt;for&lt;/code&gt; döngüsü yerine aşağıdakini kullanırız ve birbirinden bağımsız 10 sonucu aynı anda elde etmiş oluruz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multinomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;array([1, 1, 5, 1, 1, 1], dtype=int64)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Ayrıca bu deneyi örneği aynı anda 3 defa yapabiliriz.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multinomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;array([[1, 2, 1, 2, 4, 0],
       [3, 2, 2, 1, 0, 2],
       [1, 2, 1, 3, 1, 2]], dtype=int64)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Şimdi zarı 1000 defa atalım ve herbir sonucun gelme oranının bulalım. Bu sayede olasılıkları tahmin etmiş olacağız.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Sonuçları 32 bit boyutunda ondalıklı bilgisayar sayıları olarak kaydedelim.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multinomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Oranlar &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;array([0.164, 0.153, 0.181, 0.163, 0.163, 0.176])&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Düzgün bir zardan örneklem aldığımız için herbir sonucun gerçek olasılığının $\frac{1}{6}$ veya yaklaşık $0.167$ olduğunu biliyoruz. Dolayısıyla tahminimiz oldukça iyi görünüyor.&lt;/p&gt;
&lt;p&gt;Bu tahminlerin örneklem boyutu ve sayısı arttıkça gerçek olasılığa nasıl yaklaştığını görselleştirelim. Örneklem boyutu 10 olan 500 deneyin sonuçlarının gerçek olasılığa nasıl yaklaştığını görelim.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multinomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fair_probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cum_counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cum_counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cum_counts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keepdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_figsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;estimates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asnumpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;P(zar=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axhline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.167&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linestyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Deney sayısı&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Olasılık Tahmini&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d2l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_svg output_subarea &quot;&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;no&quot;?&gt;
&amp;lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot;
  &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&amp;gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height=&quot;289.37625pt&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 392.14375 289.37625&quot; width=&quot;392.14375pt&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
 &lt;defs&gt;
  &lt;style type=&quot;text/css&quot;&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
 &lt;/defs&gt;
 &lt;g id=&quot;figure_1&quot;&gt;
  &lt;g id=&quot;patch_1&quot;&gt;
   &lt;path d=&quot;M 0 289.37625 
L 392.14375 289.37625 
L 392.14375 0 
L 0 0 
z
&quot; style=&quot;fill:none;&quot; /&gt;
  &lt;/g&gt;
  &lt;g id=&quot;axes_1&quot;&gt;
   &lt;g id=&quot;patch_2&quot;&gt;
    &lt;path d=&quot;M 50.14375 251.82 
L 384.94375 251.82 
L 384.94375 7.2 
L 50.14375 7.2 
z
&quot; style=&quot;fill:#ffffff;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_1&quot;&gt;
    &lt;g id=&quot;xtick_1&quot;&gt;
     &lt;g id=&quot;line2d_1&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L 0 3.5 
&quot; id=&quot;m0f97d6aee0&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;65.361932&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_1&quot;&gt;
      &lt;!-- 0 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
&quot; id=&quot;DejaVuSans-48&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(62.180682 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_2&quot;&gt;
     &lt;g id=&quot;line2d_2&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;126.356649&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_2&quot;&gt;
      &lt;!-- 100 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
&quot; id=&quot;DejaVuSans-49&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(116.812899 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;127.246094&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_3&quot;&gt;
     &lt;g id=&quot;line2d_3&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;187.351365&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_3&quot;&gt;
      &lt;!-- 200 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
&quot; id=&quot;DejaVuSans-50&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(177.807615 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;127.246094&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_4&quot;&gt;
     &lt;g id=&quot;line2d_4&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;248.346082&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_4&quot;&gt;
      &lt;!-- 300 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 40.578125 39.3125 
Q 47.65625 37.796875 51.625 33 
Q 55.609375 28.21875 55.609375 21.1875 
Q 55.609375 10.40625 48.1875 4.484375 
Q 40.765625 -1.421875 27.09375 -1.421875 
Q 22.515625 -1.421875 17.65625 -0.515625 
Q 12.796875 0.390625 7.625 2.203125 
L 7.625 11.71875 
Q 11.71875 9.328125 16.59375 8.109375 
Q 21.484375 6.890625 26.8125 6.890625 
Q 36.078125 6.890625 40.9375 10.546875 
Q 45.796875 14.203125 45.796875 21.1875 
Q 45.796875 27.640625 41.28125 31.265625 
Q 36.765625 34.90625 28.71875 34.90625 
L 20.21875 34.90625 
L 20.21875 43.015625 
L 29.109375 43.015625 
Q 36.375 43.015625 40.234375 45.921875 
Q 44.09375 48.828125 44.09375 54.296875 
Q 44.09375 59.90625 40.109375 62.90625 
Q 36.140625 65.921875 28.71875 65.921875 
Q 24.65625 65.921875 20.015625 65.03125 
Q 15.375 64.15625 9.8125 62.3125 
L 9.8125 71.09375 
Q 15.4375 72.65625 20.34375 73.4375 
Q 25.25 74.21875 29.59375 74.21875 
Q 40.828125 74.21875 47.359375 69.109375 
Q 53.90625 64.015625 53.90625 55.328125 
Q 53.90625 49.265625 50.4375 45.09375 
Q 46.96875 40.921875 40.578125 39.3125 
z
&quot; id=&quot;DejaVuSans-51&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(238.802332 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-51&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;127.246094&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_5&quot;&gt;
     &lt;g id=&quot;line2d_5&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;309.340799&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_5&quot;&gt;
      &lt;!-- 400 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
&quot; id=&quot;DejaVuSans-52&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(299.797049 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-52&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;127.246094&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;xtick_6&quot;&gt;
     &lt;g id=&quot;line2d_6&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;370.335515&quot; xlink:href=&quot;#m0f97d6aee0&quot; y=&quot;251.82&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_6&quot;&gt;
      &lt;!-- 500 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
&quot; id=&quot;DejaVuSans-53&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(360.791765 266.418437)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-53&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;127.246094&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;text_7&quot;&gt;
     &lt;!-- Deney sayısı --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 19.671875 64.796875 
L 19.671875 8.109375 
L 31.59375 8.109375 
Q 46.6875 8.109375 53.6875 14.9375 
Q 60.6875 21.78125 60.6875 36.53125 
Q 60.6875 51.171875 53.6875 57.984375 
Q 46.6875 64.796875 31.59375 64.796875 
z
M 9.8125 72.90625 
L 30.078125 72.90625 
Q 51.265625 72.90625 61.171875 64.09375 
Q 71.09375 55.28125 71.09375 36.53125 
Q 71.09375 17.671875 61.125 8.828125 
Q 51.171875 0 30.078125 0 
L 9.8125 0 
z
&quot; id=&quot;DejaVuSans-68&quot; /&gt;
      &lt;path d=&quot;M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
&quot; id=&quot;DejaVuSans-101&quot; /&gt;
      &lt;path d=&quot;M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
&quot; id=&quot;DejaVuSans-110&quot; /&gt;
      &lt;path d=&quot;M 32.171875 -5.078125 
Q 28.375 -14.84375 24.75 -17.8125 
Q 21.140625 -20.796875 15.09375 -20.796875 
L 7.90625 -20.796875 
L 7.90625 -13.28125 
L 13.1875 -13.28125 
Q 16.890625 -13.28125 18.9375 -11.515625 
Q 21 -9.765625 23.484375 -3.21875 
L 25.09375 0.875 
L 2.984375 54.6875 
L 12.5 54.6875 
L 29.59375 11.921875 
L 46.6875 54.6875 
L 56.203125 54.6875 
z
&quot; id=&quot;DejaVuSans-121&quot; /&gt;
      &lt;path id=&quot;DejaVuSans-32&quot; /&gt;
      &lt;path d=&quot;M 44.28125 53.078125 
L 44.28125 44.578125 
Q 40.484375 46.53125 36.375 47.5 
Q 32.28125 48.484375 27.875 48.484375 
Q 21.1875 48.484375 17.84375 46.4375 
Q 14.5 44.390625 14.5 40.28125 
Q 14.5 37.15625 16.890625 35.375 
Q 19.28125 33.59375 26.515625 31.984375 
L 29.59375 31.296875 
Q 39.15625 29.25 43.1875 25.515625 
Q 47.21875 21.78125 47.21875 15.09375 
Q 47.21875 7.46875 41.1875 3.015625 
Q 35.15625 -1.421875 24.609375 -1.421875 
Q 20.21875 -1.421875 15.453125 -0.5625 
Q 10.6875 0.296875 5.421875 2 
L 5.421875 11.28125 
Q 10.40625 8.6875 15.234375 7.390625 
Q 20.0625 6.109375 24.8125 6.109375 
Q 31.15625 6.109375 34.5625 8.28125 
Q 37.984375 10.453125 37.984375 14.40625 
Q 37.984375 18.0625 35.515625 20.015625 
Q 33.0625 21.96875 24.703125 23.78125 
L 21.578125 24.515625 
Q 13.234375 26.265625 9.515625 29.90625 
Q 5.8125 33.546875 5.8125 39.890625 
Q 5.8125 47.609375 11.28125 51.796875 
Q 16.75 56 26.8125 56 
Q 31.78125 56 36.171875 55.265625 
Q 40.578125 54.546875 44.28125 53.078125 
z
&quot; id=&quot;DejaVuSans-115&quot; /&gt;
      &lt;path d=&quot;M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
&quot; id=&quot;DejaVuSans-97&quot; /&gt;
      &lt;path d=&quot;M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 13.921875 56 
z
&quot; id=&quot;DejaVuSans-305&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(185.8125 280.096562)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-68&quot; /&gt;
      &lt;use x=&quot;77.001953&quot; xlink:href=&quot;#DejaVuSans-101&quot; /&gt;
      &lt;use x=&quot;138.525391&quot; xlink:href=&quot;#DejaVuSans-110&quot; /&gt;
      &lt;use x=&quot;201.904297&quot; xlink:href=&quot;#DejaVuSans-101&quot; /&gt;
      &lt;use x=&quot;263.427734&quot; xlink:href=&quot;#DejaVuSans-121&quot; /&gt;
      &lt;use x=&quot;322.607422&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;354.394531&quot; xlink:href=&quot;#DejaVuSans-115&quot; /&gt;
      &lt;use x=&quot;406.494141&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;467.773438&quot; xlink:href=&quot;#DejaVuSans-121&quot; /&gt;
      &lt;use x=&quot;526.953125&quot; xlink:href=&quot;#DejaVuSans-305&quot; /&gt;
      &lt;use x=&quot;554.736328&quot; xlink:href=&quot;#DejaVuSans-115&quot; /&gt;
      &lt;use x=&quot;606.835938&quot; xlink:href=&quot;#DejaVuSans-305&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;matplotlib.axis_2&quot;&gt;
    &lt;g id=&quot;ytick_1&quot;&gt;
     &lt;g id=&quot;line2d_7&quot;&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 0 0 
L -3.5 0 
&quot; id=&quot;m329c3925c7&quot; style=&quot;stroke:#000000;stroke-width:0.8;&quot; /&gt;
      &lt;/defs&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;50.14375&quot; xlink:href=&quot;#m329c3925c7&quot; y=&quot;207.133844&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_8&quot;&gt;
      &lt;!-- 0.10 --&gt;
      &lt;defs&gt;
       &lt;path d=&quot;M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
&quot; id=&quot;DejaVuSans-46&quot; /&gt;
      &lt;/defs&gt;
      &lt;g transform=&quot;translate(20.878125 210.933063)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
       &lt;use x=&quot;159.033203&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_2&quot;&gt;
     &lt;g id=&quot;line2d_8&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;50.14375&quot; xlink:href=&quot;#m329c3925c7&quot; y=&quot;156.783242&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_9&quot;&gt;
      &lt;!-- 0.15 --&gt;
      &lt;g transform=&quot;translate(20.878125 160.582461)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
       &lt;use x=&quot;159.033203&quot; xlink:href=&quot;#DejaVuSans-53&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_3&quot;&gt;
     &lt;g id=&quot;line2d_9&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;50.14375&quot; xlink:href=&quot;#m329c3925c7&quot; y=&quot;106.432639&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_10&quot;&gt;
      &lt;!-- 0.20 --&gt;
      &lt;g transform=&quot;translate(20.878125 110.231858)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
       &lt;use x=&quot;159.033203&quot; xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;ytick_4&quot;&gt;
     &lt;g id=&quot;line2d_10&quot;&gt;
      &lt;g&gt;
       &lt;use style=&quot;stroke:#000000;stroke-width:0.8;&quot; x=&quot;50.14375&quot; xlink:href=&quot;#m329c3925c7&quot; y=&quot;56.082037&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
     &lt;g id=&quot;text_11&quot;&gt;
      &lt;!-- 0.25 --&gt;
      &lt;g transform=&quot;translate(20.878125 59.881256)scale(0.1 -0.1)&quot;&gt;
       &lt;use xlink:href=&quot;#DejaVuSans-48&quot; /&gt;
       &lt;use x=&quot;63.623047&quot; xlink:href=&quot;#DejaVuSans-46&quot; /&gt;
       &lt;use x=&quot;95.410156&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
       &lt;use x=&quot;159.033203&quot; xlink:href=&quot;#DejaVuSans-53&quot; /&gt;
      &lt;/g&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;text_12&quot;&gt;
     &lt;!-- Olasılık Tahmini --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 39.40625 66.21875 
Q 28.65625 66.21875 22.328125 58.203125 
Q 16.015625 50.203125 16.015625 36.375 
Q 16.015625 22.609375 22.328125 14.59375 
Q 28.65625 6.59375 39.40625 6.59375 
Q 50.140625 6.59375 56.421875 14.59375 
Q 62.703125 22.609375 62.703125 36.375 
Q 62.703125 50.203125 56.421875 58.203125 
Q 50.140625 66.21875 39.40625 66.21875 
z
M 39.40625 74.21875 
Q 54.734375 74.21875 63.90625 63.9375 
Q 73.09375 53.65625 73.09375 36.375 
Q 73.09375 19.140625 63.90625 8.859375 
Q 54.734375 -1.421875 39.40625 -1.421875 
Q 24.03125 -1.421875 14.8125 8.828125 
Q 5.609375 19.09375 5.609375 36.375 
Q 5.609375 53.65625 14.8125 63.9375 
Q 24.03125 74.21875 39.40625 74.21875 
z
&quot; id=&quot;DejaVuSans-79&quot; /&gt;
      &lt;path d=&quot;M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 0 
L 9.421875 0 
z
&quot; id=&quot;DejaVuSans-108&quot; /&gt;
      &lt;path d=&quot;M 9.078125 75.984375 
L 18.109375 75.984375 
L 18.109375 31.109375 
L 44.921875 54.6875 
L 56.390625 54.6875 
L 27.390625 29.109375 
L 57.625 0 
L 45.90625 0 
L 18.109375 26.703125 
L 18.109375 0 
L 9.078125 0 
z
&quot; id=&quot;DejaVuSans-107&quot; /&gt;
      &lt;path d=&quot;M -0.296875 72.90625 
L 61.375 72.90625 
L 61.375 64.59375 
L 35.5 64.59375 
L 35.5 0 
L 25.59375 0 
L 25.59375 64.59375 
L -0.296875 64.59375 
z
&quot; id=&quot;DejaVuSans-84&quot; /&gt;
      &lt;path d=&quot;M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 75.984375 
L 18.109375 75.984375 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
&quot; id=&quot;DejaVuSans-104&quot; /&gt;
      &lt;path d=&quot;M 52 44.1875 
Q 55.375 50.25 60.0625 53.125 
Q 64.75 56 71.09375 56 
Q 79.640625 56 84.28125 50.015625 
Q 88.921875 44.046875 88.921875 33.015625 
L 88.921875 0 
L 79.890625 0 
L 79.890625 32.71875 
Q 79.890625 40.578125 77.09375 44.375 
Q 74.3125 48.1875 68.609375 48.1875 
Q 61.625 48.1875 57.5625 43.546875 
Q 53.515625 38.921875 53.515625 30.90625 
L 53.515625 0 
L 44.484375 0 
L 44.484375 32.71875 
Q 44.484375 40.625 41.703125 44.40625 
Q 38.921875 48.1875 33.109375 48.1875 
Q 26.21875 48.1875 22.15625 43.53125 
Q 18.109375 38.875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.1875 51.21875 25.484375 53.609375 
Q 29.78125 56 35.6875 56 
Q 41.65625 56 45.828125 52.96875 
Q 50 49.953125 52 44.1875 
z
&quot; id=&quot;DejaVuSans-109&quot; /&gt;
      &lt;path d=&quot;M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 64.59375 
L 9.421875 64.59375 
z
&quot; id=&quot;DejaVuSans-105&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(14.798438 168.434219)rotate(-90)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-79&quot; /&gt;
      &lt;use x=&quot;78.710938&quot; xlink:href=&quot;#DejaVuSans-108&quot; /&gt;
      &lt;use x=&quot;106.494141&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;167.773438&quot; xlink:href=&quot;#DejaVuSans-115&quot; /&gt;
      &lt;use x=&quot;219.873047&quot; xlink:href=&quot;#DejaVuSans-305&quot; /&gt;
      &lt;use x=&quot;247.65625&quot; xlink:href=&quot;#DejaVuSans-108&quot; /&gt;
      &lt;use x=&quot;275.439453&quot; xlink:href=&quot;#DejaVuSans-305&quot; /&gt;
      &lt;use x=&quot;303.222656&quot; xlink:href=&quot;#DejaVuSans-107&quot; /&gt;
      &lt;use x=&quot;361.132812&quot; xlink:href=&quot;#DejaVuSans-32&quot; /&gt;
      &lt;use x=&quot;392.919922&quot; xlink:href=&quot;#DejaVuSans-84&quot; /&gt;
      &lt;use x=&quot;437.503906&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;498.783203&quot; xlink:href=&quot;#DejaVuSans-104&quot; /&gt;
      &lt;use x=&quot;562.162109&quot; xlink:href=&quot;#DejaVuSans-109&quot; /&gt;
      &lt;use x=&quot;659.574219&quot; xlink:href=&quot;#DejaVuSans-105&quot; /&gt;
      &lt;use x=&quot;687.357422&quot; xlink:href=&quot;#DejaVuSans-110&quot; /&gt;
      &lt;use x=&quot;750.736328&quot; xlink:href=&quot;#DejaVuSans-105&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_11&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 207.133843 
L 65.971879 207.133843 
L 66.581826 139.999703 
L 67.191773 131.607944 
L 67.80172 166.853362 
L 68.411668 190.35031 
L 69.021615 192.747957 
L 69.631562 207.133843 
L 70.241509 218.322865 
L 71.461403 216.288497 
L 72.071351 223.917376 
L 72.681298 222.626335 
L 73.291245 228.712671 
L 74.511139 213.42767 
L 75.731034 201.539332 
L 76.340981 201.83378 
L 77.560875 192.747957 
L 78.780769 176.485653 
L 80.000664 178.937501 
L 80.610611 168.402605 
L 81.220558 166.107431 
L 81.830505 160.379715 
L 82.440452 161.991922 
L 83.0504 160.139954 
L 84.270294 163.07707 
L 84.880241 158.30901 
L 85.490188 162.706836 
L 86.100135 161.09901 
L 86.710083 162.377747 
L 87.32003 166.309032 
L 87.929977 164.733334 
L 88.539924 168.402605 
L 89.149871 166.853362 
L 89.759819 170.291936 
L 91.58966 172.803882 
L 92.199607 173.566769 
L 92.809554 172.107335 
L 93.419502 174.995157 
L 95.249343 164.839333 
L 95.85929 165.668636 
L 97.689132 162.377747 
L 98.299079 157.6987 
L 99.518973 155.899898 
L 100.12892 156.783236 
L 100.738868 154.223047 
L 101.348815 156.783236 
L 103.178656 159.180883 
L 103.788603 161.503608 
L 105.008498 162.886348 
L 105.618445 160.540755 
L 106.228392 161.225943 
L 107.448286 159.660419 
L 108.058234 157.492403 
L 108.668181 158.181867 
L 109.278128 160.231909 
L 110.498022 161.48263 
L 111.107969 163.40832 
L 111.717917 162.668376 
L 112.937811 158.695286 
L 113.547758 155.524472 
L 114.157705 151.188725 
L 114.767652 149.414862 
L 115.987547 148.391477 
L 116.597494 149.082562 
L 117.207441 148.586625 
L 117.817388 145.787126 
L 118.427335 147.628589 
L 119.037283 148.297181 
L 119.64723 147.832021 
L 120.257177 148.483686 
L 120.867124 145.837455 
L 121.477071 146.496563 
L 122.087018 148.212924 
L 122.696966 147.773139 
L 123.91686 148.99706 
L 124.526807 147.535179 
L 125.136754 148.137176 
L 125.746701 147.720139 
L 126.356649 149.305426 
L 126.966596 149.872369 
L 127.576543 149.450635 
L 128.18649 150.973559 
L 128.796437 147.672181 
L 129.406384 148.233137 
L 131.236226 147.082669 
L 132.45612 149.979104 
L 133.676015 149.208369 
L 134.285962 150.599828 
L 134.895909 149.340104 
L 135.505856 149.838336 
L 136.115803 148.606643 
L 136.72575 149.956041 
L 137.335698 150.436522 
L 137.945645 150.069829 
L 139.165539 152.656142 
L 139.775486 153.099049 
L 141.605328 151.987941 
L 142.215275 150.836317 
L 143.435169 150.147888 
L 145.265011 151.443025 
L 145.874958 151.104603 
L 146.484905 151.522735 
L 147.094852 151.188725 
L 148.314747 153.475541 
L 148.924694 153.134642 
L 150.144588 153.906068 
L 150.754535 153.569371 
L 151.364482 153.946583 
L 151.97443 153.614328 
L 152.584377 154.685296 
L 153.194324 155.047007 
L 153.804271 154.714032 
L 154.414218 153.70055 
L 156.854007 152.448419 
L 157.463954 152.808194 
L 158.073901 151.188725 
L 158.683848 152.205913 
L 159.293796 151.910601 
L 159.903743 150.973559 
L 160.51369 151.331263 
L 161.733584 150.766496 
L 162.343531 151.74818 
L 162.953479 151.466719 
L 163.563426 150.567116 
L 164.78332 152.485018 
L 165.393267 152.205913 
L 166.003214 150.110269 
L 166.613162 150.451722 
L 167.223109 147.792061 
L 167.833056 148.739068 
L 168.443003 147.305488 
L 169.662897 148.001165 
L 170.272845 147.760879 
L 170.882792 146.944617 
L 171.492739 147.863998 
L 172.102686 147.628589 
L 172.712633 148.533715 
L 173.932528 148.063303 
L 175.152422 146.490576 
L 175.762369 146.823777 
L 176.372316 147.703618 
L 176.982263 147.479328 
L 180.031999 149.057487 
L 180.641946 148.303138 
L 181.251894 148.083921 
L 182.471788 146.608761 
L 183.081735 146.920758 
L 183.691682 145.163867 
L 184.911577 143.748309 
L 185.521524 144.577041 
L 186.131471 143.373288 
L 186.741418 144.195597 
L 187.351365 143.506718 
L 188.57126 144.133579 
L 189.791154 145.730675 
L 191.011048 146.323938 
L 191.620995 147.100436 
L 192.230943 146.905857 
L 192.84089 146.233589 
L 194.670731 145.673008 
L 195.280678 144.548515 
L 195.890626 144.83961 
L 196.500573 145.594214 
L 197.720467 145.234933 
L 198.940361 145.79766 
L 199.550309 145.163867 
L 200.160256 145.896622 
L 200.770203 144.364936 
L 201.38015 144.195597 
L 201.990097 144.922876 
L 205.039833 144.086131 
L 206.869675 144.897907 
L 207.479622 144.73352 
L 208.089569 144.142027 
L 209.309463 143.823802 
L 209.91941 144.089807 
L 210.529358 143.932248 
L 211.139305 144.195597 
L 212.969146 143.729387 
L 213.579093 143.989239 
L 214.189041 143.424922 
L 214.798988 144.093259 
L 215.408935 143.940786 
L 216.628829 145.257202 
L 217.238776 145.101908 
L 218.458671 145.594214 
L 219.068618 146.23548 
L 219.678565 146.078776 
L 220.288512 146.713125 
L 220.898459 146.555776 
L 221.508407 147.183327 
L 222.728301 146.091036 
L 223.948195 145.787126 
L 224.558142 146.405644 
L 225.16809 146.636536 
L 225.778037 146.484259 
L 226.387984 145.953119 
L 226.997931 145.804533 
L 227.607878 145.27992 
L 229.43772 144.848283 
L 230.657614 145.30627 
L 231.877508 143.552425 
L 232.487456 144.149815 
L 233.70735 144.604576 
L 234.317297 144.105038 
L 234.927244 144.691879 
L 235.537191 143.476301 
L 239.196874 144.811774 
L 239.806822 145.379798 
L 240.416769 144.894905 
L 241.636663 145.324142 
L 242.24661 144.498381 
L 243.466505 144.238558 
L 244.686399 143.29952 
L 245.296346 143.855389 
L 245.906293 144.068439 
L 246.51624 143.942152 
L 247.736135 143.020745 
L 248.346082 143.568301 
L 249.565976 143.323184 
L 250.175923 143.864332 
L 250.785871 144.071786 
L 251.395818 144.606947 
L 252.005765 144.810619 
L 252.615712 144.359069 
L 253.225659 144.888123 
L 256.275395 145.879291 
L 256.885342 145.434373 
L 258.105237 145.82365 
L 258.715184 145.383099 
L 259.325131 145.892361 
L 260.545025 146.273925 
L 261.76492 146.027232 
L 263.594761 146.589568 
L 264.204708 145.542894 
L 264.814655 146.037691 
L 266.644497 146.591429 
L 267.254444 146.470469 
L 267.864391 146.047834 
L 269.694233 146.593245 
L 270.914127 145.759741 
L 272.134021 145.528399 
L 272.743969 145.709067 
L 273.353916 144.710876 
L 274.57381 143.902852 
L 276.403652 143.57891 
L 277.623546 143.943112 
L 278.84344 144.876974 
L 279.453387 145.053845 
L 280.063335 145.514984 
L 280.673282 144.835648 
L 281.283229 144.727457 
L 281.893176 145.185625 
L 283.11307 144.969138 
L 283.723018 145.422804 
L 284.942912 145.764693 
L 285.552859 145.377862 
L 286.162806 145.547981 
L 286.772753 145.993829 
L 287.382701 146.161337 
L 287.992648 146.052786 
L 288.602595 146.493607 
L 289.822489 146.822276 
L 290.432436 146.713125 
L 291.042384 146.333122 
L 291.652331 146.496563 
L 292.262278 146.119171 
L 293.482172 146.981651 
L 294.092119 147.141641 
L 295.312014 147.991861 
L 295.921961 147.61651 
L 296.531908 147.773139 
L 298.36175 147.449317 
L 298.971697 146.818014 
L 299.581644 147.236252 
L 301.411485 146.920758 
L 302.63138 147.745949 
L 303.241327 147.897836 
L 305.681116 147.477948 
L 306.90101 147.778481 
L 307.510957 148.180632 
L 308.120904 148.328378 
L 308.730851 147.971889 
L 309.340799 148.119424 
L 309.950746 148.516729 
L 310.560693 148.662179 
L 311.17064 149.056167 
L 311.780587 148.702274 
L 312.390534 148.598164 
L 313.000482 147.752296 
L 313.610429 147.651023 
L 314.220376 147.796458 
L 317.270112 147.29689 
L 319.099953 147.727372 
L 320.319848 147.530272 
L 320.929795 147.192645 
L 322.149689 146.999478 
L 322.759636 146.427447 
L 323.369583 146.808126 
L 323.979531 146.713125 
L 324.589478 146.382175 
L 325.199425 146.524459 
L 325.809372 146.195505 
L 326.419319 146.337548 
L 327.029266 146.244739 
L 327.639214 146.386017 
L 328.249161 146.759747 
L 328.859108 146.201477 
L 329.469055 146.573902 
L 330.079002 146.481618 
L 331.298897 146.759207 
L 331.908844 146.207314 
L 333.128738 146.484259 
L 333.738685 146.850126 
L 334.348632 146.530851 
L 334.95858 146.667658 
L 335.568527 146.350228 
L 336.178474 146.260524 
L 336.788421 146.622806 
L 337.398368 146.307612 
L 338.008315 146.218614 
L 338.618263 146.35428 
L 339.22821 146.265566 
L 339.838157 146.400527 
L 341.058051 146.224061 
L 342.887893 145.299773 
L 343.49784 145.214721 
L 344.107787 144.910181 
L 344.717734 145.045742 
L 345.327681 144.961801 
L 346.547576 145.230942 
L 347.76747 145.063704 
L 348.377417 145.413756 
L 349.597312 145.246803 
L 351.427153 145.641827 
L 352.0371 145.55859 
L 352.647048 145.048998 
L 353.256995 144.754453 
L 353.866942 144.673602 
L 354.476889 144.169097 
L 355.696783 144.433092 
L 356.306731 144.353592 
L 356.916678 144.064193 
L 357.526625 144.195597 
L 358.136572 143.69837 
L 358.746519 143.412122 
L 359.966414 144.091563 
L 362.406202 144.608298 
L 363.016149 144.530238 
L 363.626097 144.246976 
L 364.236044 143.759773 
L 366.065885 144.144623 
L 366.675832 143.661576 
L 367.895727 143.51176 
L 368.505674 143.235086 
L 369.115621 143.363144 
L 369.725568 143.08788 
L 369.725568 143.08788 
&quot; style=&quot;fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_12&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 106.432636 
L 65.971879 56.082037 
L 66.581826 39.298489 
L 67.191773 81.257344 
L 67.80172 66.152163 
L 68.411668 56.082037 
L 69.021615 20.117308 
L 69.631562 18.319091 
L 70.241509 39.298489 
L 70.851456 46.011926 
L 71.461403 60.65936 
L 72.071351 56.082037 
L 72.681298 75.447652 
L 73.291245 77.660865 
L 74.511139 93.844983 
L 75.731034 106.432636 
L 76.340981 101.132581 
L 77.560875 101.637341 
L 78.170822 97.27799 
L 78.780769 97.676015 
L 79.390717 93.844983 
L 80.610611 102.559513 
L 81.220558 106.432636 
L 81.830505 113.625579 
L 82.440452 116.850008 
L 83.0504 116.502762 
L 83.660347 112.929497 
L 84.880241 118.638846 
L 85.490188 109.394436 
L 86.100135 115.064171 
L 86.710083 117.621658 
L 87.32003 117.31925 
L 87.929977 119.682804 
L 88.539924 119.343046 
L 89.149871 124.055345 
L 90.369766 123.216169 
L 91.58966 131.607944 
L 92.199607 128.81068 
L 94.029449 133.705883 
L 94.639396 129.039036 
L 95.249343 130.600929 
L 95.85929 128.152503 
L 96.469237 131.607944 
L 97.079185 133.032955 
L 98.909026 131.607944 
L 99.518973 134.699647 
L 100.12892 134.212279 
L 101.348815 136.642999 
L 102.568709 132.420049 
L 103.788603 134.754853 
L 105.008498 130.845056 
L 105.618445 130.480689 
L 106.228392 131.607944 
L 106.838339 131.243081 
L 108.668181 134.405192 
L 109.888075 130.927527 
L 110.498022 131.943605 
L 111.107969 130.28293 
L 111.717917 131.280985 
L 113.547758 130.34918 
L 114.157705 128.81068 
L 114.767652 129.76585 
L 115.3776 131.911253 
L 115.987547 132.80676 
L 116.597494 134.865925 
L 117.207441 134.535306 
L 117.817388 135.36977 
L 119.037283 132.456543 
L 120.257177 131.884588 
L 120.867124 132.702516 
L 121.477071 134.585664 
L 122.696966 133.992971 
L 123.306913 132.656913 
L 123.91686 132.386557 
L 124.526807 134.176851 
L 126.966596 133.088836 
L 127.576543 131.852356 
L 128.18649 131.607944 
L 128.796437 133.286295 
L 129.406384 133.982963 
L 130.626279 133.472771 
L 131.236226 134.148565 
L 131.846173 133.896605 
L 132.45612 132.741965 
L 133.066067 133.406175 
L 133.676015 134.949792 
L 134.285962 134.699647 
L 134.895909 135.32951 
L 135.505856 134.212279 
L 136.115803 135.696233 
L 136.72575 136.301635 
L 137.335698 134.358179 
L 138.555592 133.896605 
L 139.165539 134.496906 
L 139.775486 133.450037 
L 140.995381 134.628971 
L 141.605328 132.80676 
L 142.215275 131.806168 
L 143.435169 132.974043 
L 144.045116 131.995254 
L 144.655064 131.800121 
L 145.265011 130.845056 
L 145.874958 131.418647 
L 146.484905 129.729191 
L 147.094852 129.556626 
L 147.704799 130.86749 
L 148.314747 127.013904 
L 149.534641 128.166713 
L 150.754535 127.858422 
L 151.97443 128.967174 
L 152.584377 130.209312 
L 153.194324 130.739822 
L 153.804271 129.883599 
L 155.024165 132.28836 
L 155.634113 132.114819 
L 156.24406 133.286295 
L 156.854007 133.775344 
L 157.463954 132.270443 
L 158.073901 132.759747 
L 158.683848 131.280985 
L 159.293796 132.420049 
L 159.903743 132.253457 
L 160.51369 132.730411 
L 161.123637 133.838668 
L 162.343531 133.496089 
L 163.563426 134.405192 
L 164.173373 134.233587 
L 164.78332 133.450037 
L 165.393267 133.896605 
L 166.003214 133.731153 
L 166.613162 132.361692 
L 167.223109 133.406175 
L 167.833056 133.246575 
L 169.05295 134.110751 
L 169.662897 133.364355 
L 170.272845 134.372854 
L 171.492739 134.053534 
L 172.102686 135.040936 
L 172.712633 132.603568 
L 173.32258 132.456543 
L 173.932528 132.873745 
L 174.542475 132.72684 
L 175.762369 134.651104 
L 176.372316 135.047193 
L 176.982263 134.891675 
L 177.592211 133.649177 
L 179.422052 134.821808 
L 180.031999 134.671602 
L 180.641946 133.992971 
L 181.861841 134.754853 
L 182.471788 134.086337 
L 183.691682 134.835539 
L 184.911577 134.54719 
L 185.521524 133.896605 
L 186.741418 133.621972 
L 187.351365 133.987689 
L 188.57126 133.716222 
L 189.181207 133.088836 
L 189.791154 132.958812 
L 190.401101 132.341195 
L 191.011048 133.188999 
L 191.620995 133.544498 
L 193.450837 133.159032 
L 194.060784 132.557951 
L 194.670731 132.435295 
L 195.890626 133.130162 
L 196.500573 133.938981 
L 197.720467 133.686631 
L 198.330414 132.18272 
L 199.550309 132.861005 
L 200.160256 132.28836 
L 200.770203 133.075556 
L 201.38015 132.956621 
L 201.990097 133.733854 
L 202.600044 132.721888 
L 203.209992 132.162462 
L 203.819939 132.491281 
L 204.429886 132.377493 
L 205.039833 132.702516 
L 206.869675 132.364273 
L 207.479622 131.82311 
L 208.089569 132.143585 
L 208.699516 132.888045 
L 209.91941 133.51195 
L 210.529358 133.398658 
L 211.139305 132.866707 
L 211.749252 132.757016 
L 212.359199 133.064362 
L 212.969146 132.954761 
L 214.798988 133.859391 
L 215.408935 133.340661 
L 216.018882 133.638208 
L 216.628829 133.528952 
L 217.238776 134.226174 
L 217.848724 134.115447 
L 218.458671 134.804807 
L 219.678565 134.581403 
L 220.288512 134.865925 
L 220.898459 134.361495 
L 221.508407 134.252809 
L 223.338248 135.093756 
L 223.948195 134.983944 
L 225.16809 134.001029 
L 225.778037 134.278049 
L 226.387984 134.172964 
L 226.997931 133.690112 
L 228.217825 134.238194 
L 229.43772 134.032226 
L 230.047667 134.301983 
L 230.657614 133.82929 
L 231.267561 133.728932 
L 231.877508 132.894273 
L 232.487456 132.431859 
L 233.097403 132.337653 
L 233.70735 132.971222 
L 234.317297 133.237992 
L 234.927244 132.420049 
L 235.537191 133.046535 
L 236.147139 132.951819 
L 236.757086 132.500675 
L 237.367033 132.764399 
L 237.97698 132.671679 
L 238.586927 133.286295 
L 239.196874 132.48819 
L 239.806822 132.397406 
L 241.026716 132.91462 
L 241.636663 132.47605 
L 242.24661 132.386557 
L 242.856557 132.642538 
L 243.466505 132.553089 
L 244.076452 132.80676 
L 244.686399 133.400083 
L 245.296346 132.968761 
L 247.126188 133.712906 
L 247.736135 134.293309 
L 248.956029 134.1088 
L 249.565976 133.685115 
L 251.395818 134.405192 
L 252.615712 135.531365 
L 253.225659 135.763083 
L 253.835606 136.318157 
L 255.055501 136.12658 
L 256.275395 136.578865 
L 256.885342 136.483159 
L 257.495289 136.069393 
L 258.105237 136.611232 
L 258.715184 136.516336 
L 259.325131 137.053388 
L 259.935078 137.272381 
L 260.545025 136.862592 
L 261.154972 137.080834 
L 261.76492 136.674181 
L 262.374867 136.891643 
L 262.984814 136.797932 
L 263.594761 137.013684 
L 264.204708 137.536075 
L 264.814655 137.134224 
L 266.03455 137.558464 
L 267.864391 137.278053 
L 269.694233 136.103531 
L 270.30418 136.015493 
L 270.914127 135.630028 
L 271.524074 135.543895 
L 272.134021 135.754454 
L 273.353916 135.582985 
L 273.963863 135.791593 
L 274.57381 135.706241 
L 275.183757 136.205164 
L 275.793704 136.410171 
L 276.403652 136.904187 
L 278.233493 135.779844 
L 278.84344 135.122447 
L 279.453387 135.040936 
L 280.063335 133.818801 
L 281.893176 134.436628 
L 282.503123 134.922331 
L 283.11307 134.56146 
L 283.723018 133.9221 
L 284.332965 134.405192 
L 284.942912 134.048762 
L 286.162806 134.451439 
L 286.772753 134.097801 
L 287.382701 134.022007 
L 287.992648 134.496906 
L 288.602595 134.146044 
L 289.212542 133.52346 
L 289.822489 133.722945 
L 292.262278 133.430275 
L 292.872225 133.896605 
L 293.482172 133.286295 
L 294.092119 133.482704 
L 294.702067 133.410947 
L 295.312014 132.80676 
L 296.531908 133.197957 
L 297.141855 132.863406 
L 298.36175 133.251242 
L 298.971697 133.705883 
L 299.581644 133.373478 
L 300.191591 133.303687 
L 300.801538 132.974043 
L 301.411485 133.16517 
L 302.021433 133.096459 
L 302.63138 132.769876 
L 303.241327 132.960073 
L 303.851274 132.892397 
L 304.461221 133.081303 
L 305.071168 132.758081 
L 306.291063 133.133718 
L 306.90101 133.066463 
L 307.510957 132.493502 
L 308.120904 132.175802 
L 308.730851 132.363193 
L 309.950746 131.733196 
L 310.560693 131.670412 
L 311.17064 131.358685 
L 311.780587 131.794419 
L 312.390534 131.73195 
L 313.000482 132.164638 
L 313.610429 131.854756 
L 315.44027 132.404233 
L 316.050217 132.341195 
L 317.270112 132.702516 
L 317.880059 133.124519 
L 319.7099 133.655689 
L 320.319848 133.350384 
L 322.149689 133.874907 
L 322.759636 133.571973 
L 323.979531 134.392032 
L 324.589478 134.326397 
L 325.199425 134.025249 
L 326.419319 133.896605 
L 327.029266 133.130162 
L 327.639214 133.068218 
L 328.249161 132.540365 
L 328.859108 132.945202 
L 329.469055 132.652082 
L 330.079002 132.591804 
L 330.688949 132.762778 
L 331.298897 132.702516 
L 331.908844 132.872455 
L 332.518791 132.812222 
L 333.128738 132.523408 
L 334.348632 132.861005 
L 335.568527 133.649177 
L 336.788421 133.527136 
L 337.398368 133.241233 
L 338.008315 133.63096 
L 338.618263 133.346108 
L 339.22821 133.286295 
L 339.838157 133.450037 
L 340.448104 133.390269 
L 341.667998 133.715127 
L 342.277946 133.655164 
L 342.887893 133.816295 
L 343.49784 133.536034 
L 344.107787 133.696715 
L 344.717734 133.417925 
L 345.937629 134.174615 
L 346.547576 134.114577 
L 347.76747 134.429306 
L 348.377417 133.93598 
L 348.987365 134.093059 
L 349.597312 134.033832 
L 350.207259 133.544498 
L 351.427153 133.429134 
L 352.647048 133.741447 
L 354.476889 133.568957 
L 355.086836 133.723515 
L 355.696783 133.666298 
L 356.306731 133.398658 
L 356.916678 133.762815 
L 357.526625 133.915677 
L 358.136572 133.649177 
L 358.746519 134.010558 
L 359.356466 133.327996 
L 361.186308 132.540365 
L 361.796255 132.693527 
L 362.406202 133.052432 
L 363.016149 132.997992 
L 363.626097 132.738259 
L 365.455938 133.190964 
L 366.065885 132.525254 
L 367.28578 133.232155 
L 367.895727 132.772997 
L 368.505674 132.517886 
L 369.115621 132.667417 
L 369.725568 132.614958 
L 369.725568 132.614958 
&quot; style=&quot;fill:none;stroke:#ff7f0e;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_13&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 106.432636 
L 65.971879 207.133843 
L 66.581826 173.566769 
L 67.191773 156.783236 
L 67.80172 106.432636 
L 68.411668 123.216169 
L 69.021615 135.204407 
L 69.631562 144.195597 
L 70.241509 151.188725 
L 71.461403 143.051266 
L 72.071351 139.999703 
L 72.681298 121.925128 
L 73.901192 133.286295 
L 74.511139 144.195597 
L 75.121086 147.897836 
L 75.731034 145.594214 
L 76.340981 154.133208 
L 76.950928 151.74818 
L 77.560875 154.385588 
L 78.170822 161.360574 
L 78.780769 158.972395 
L 79.390717 160.97913 
L 80.610611 156.783236 
L 81.220558 158.648078 
L 81.830505 163.976179 
L 83.0504 160.139954 
L 83.660347 158.407462 
L 84.270294 153.636326 
L 84.880241 155.257461 
L 85.490188 153.821436 
L 86.100135 146.713125 
L 86.710083 145.594214 
L 87.32003 149.979104 
L 88.539924 147.745949 
L 89.149871 149.230653 
L 89.759819 145.730675 
L 90.979713 148.586625 
L 91.58966 145.339928 
L 92.199607 148.950932 
L 92.809554 150.215773 
L 93.419502 147.141641 
L 94.639396 153.70055 
L 95.249343 152.755194 
L 95.85929 155.795969 
L 97.079185 157.733258 
L 98.299079 163.191503 
L 99.518973 164.733334 
L 100.738868 162.757045 
L 101.348815 158.461603 
L 101.958762 157.608666 
L 102.568709 158.407462 
L 103.178656 157.582452 
L 103.788603 158.356698 
L 104.398551 157.557872 
L 105.008498 158.30901 
L 106.228392 162.706836 
L 106.838339 161.891279 
L 108.058234 157.492403 
L 108.668181 156.783236 
L 109.278128 157.47297 
L 109.888075 159.5049 
L 110.498022 156.111898 
L 111.717917 154.821532 
L 112.327864 156.783236 
L 113.547758 158.042 
L 114.157705 159.891311 
L 115.3776 158.603136 
L 115.987547 159.180883 
L 116.597494 160.929762 
L 117.817388 161.991922 
L 118.427335 163.649235 
L 119.037283 163.006348 
L 120.257177 163.976179 
L 120.867124 163.350713 
L 121.477071 163.8215 
L 123.306913 162.0281 
L 123.91686 163.531261 
L 125.136754 162.377747 
L 125.746701 163.832319 
L 126.356649 164.261061 
L 126.966596 163.694102 
L 127.576543 162.160495 
L 128.18649 162.592928 
L 129.406384 161.533304 
L 130.016332 160.077201 
L 130.626279 160.51292 
L 131.236226 159.092905 
L 131.846173 160.445109 
L 132.45612 160.865718 
L 133.066067 158.581483 
L 134.285962 157.666588 
L 134.895909 158.972395 
L 135.505856 159.387586 
L 136.115803 158.934971 
L 136.72575 157.636637 
L 137.335698 157.20635 
L 137.945645 157.622412 
L 138.555592 158.863844 
L 139.165539 159.259498 
L 139.775486 158.830021 
L 140.385433 156.783236 
L 140.995381 156.380439 
L 141.605328 155.184804 
L 142.215275 155.593858 
L 142.825222 154.423057 
L 143.435169 154.051037 
L 146.484905 148.516729 
L 147.094852 147.459056 
L 148.314747 148.330224 
L 148.924694 148.026614 
L 149.534641 146.278441 
L 150.144588 147.432421 
L 150.754535 147.855835 
L 151.364482 147.56411 
L 151.97443 146.572282 
L 153.804271 149.885904 
L 154.414218 149.590293 
L 155.024165 149.979104 
L 155.634113 149.686854 
L 156.854007 151.781523 
L 157.463954 152.14568 
L 158.073901 151.188725 
L 158.683848 152.205913 
L 159.903743 152.910113 
L 160.51369 151.97268 
L 161.123637 150.409751 
L 161.733584 150.133167 
L 162.343531 149.230653 
L 162.953479 148.964828 
L 163.563426 149.323898 
L 164.173373 150.296354 
L 164.78332 150.642924 
L 165.393267 150.374983 
L 166.003214 151.323535 
L 166.613162 150.451722 
L 167.223109 151.38854 
L 169.05295 150.599828 
L 171.492739 151.892039 
L 172.102686 150.489416 
L 172.712633 150.240503 
L 173.32258 149.428652 
L 173.932528 149.188457 
L 175.152422 149.828733 
L 176.372316 149.354464 
L 176.982263 149.668487 
L 177.592211 150.523434 
L 178.202158 149.744986 
L 178.812105 150.051882 
L 180.031999 148.524682 
L 180.641946 149.363152 
L 183.081735 148.477984 
L 184.301629 149.076515 
L 184.911577 149.882393 
L 185.521524 149.66295 
L 186.131471 149.951749 
L 187.351365 149.518731 
L 188.57126 150.086365 
L 189.181207 150.859636 
L 189.791154 150.151699 
L 191.620995 150.973559 
L 192.230943 149.796801 
L 193.450837 150.340275 
L 194.060784 151.083175 
L 194.670731 150.873546 
L 195.280678 151.136445 
L 196.500573 148.857687 
L 199.550309 150.176144 
L 200.770203 149.783836 
L 201.38015 150.039862 
L 201.990097 149.846049 
L 202.600044 150.545117 
L 203.209992 149.907167 
L 203.819939 150.599828 
L 204.429886 150.40696 
L 205.64978 149.154364 
L 206.259727 148.970215 
L 206.869675 148.355463 
L 207.479622 148.176296 
L 208.089569 148.42719 
L 210.529358 147.724341 
L 212.359199 148.460833 
L 212.969146 147.873467 
L 213.579093 146.878202 
L 214.189041 147.124145 
L 214.798988 146.958737 
L 215.408935 147.202354 
L 216.018882 146.631914 
L 216.628829 146.874886 
L 217.848724 144.947845 
L 218.458671 145.194613 
L 219.068618 144.245341 
L 219.678565 143.700021 
L 220.288512 143.948769 
L 220.898459 143.802224 
L 221.508407 143.264992 
L 222.118354 143.902852 
L 222.728301 143.758182 
L 223.338248 144.389245 
L 223.948195 144.243825 
L 224.558142 144.483856 
L 225.16809 145.104969 
L 225.778037 144.577041 
L 226.997931 145.047393 
L 227.607878 144.902768 
L 228.217825 145.134966 
L 228.827773 144.991092 
L 229.43772 145.221248 
L 230.047667 145.078124 
L 230.657614 145.30627 
L 231.267561 145.163867 
L 231.877508 145.390047 
L 232.487456 145.980744 
L 233.70735 146.422285 
L 234.317297 147.002914 
L 234.927244 146.857494 
L 235.537191 147.072765 
L 236.147139 147.644871 
L 236.757086 147.498731 
L 237.367033 148.065299 
L 238.586927 147.773139 
L 239.196874 148.33279 
L 239.806822 148.1868 
L 240.416769 148.391477 
L 241.026716 147.897836 
L 243.466505 148.70652 
L 245.296346 147.257455 
L 245.906293 146.441868 
L 247.126188 146.174257 
L 247.736135 146.377449 
L 248.346082 145.910188 
L 252.005765 147.106738 
L 252.615712 146.974688 
L 253.225659 147.169372 
L 253.835606 146.713125 
L 255.055501 147.100436 
L 256.275395 146.841408 
L 256.885342 146.39343 
L 257.495289 146.904327 
L 258.105237 146.458989 
L 258.715184 146.333122 
L 259.325131 146.523709 
L 259.935078 146.398426 
L 260.545025 145.960216 
L 261.154972 145.837455 
L 261.76492 146.027232 
L 262.374867 145.905026 
L 262.984814 146.093422 
L 263.594761 145.353958 
L 264.204708 145.234933 
L 265.424603 146.223386 
L 266.03455 146.102815 
L 266.644497 146.28719 
L 267.254444 146.773778 
L 267.864391 146.955046 
L 268.474338 146.532217 
L 269.084286 145.811315 
L 270.30418 146.175247 
L 270.914127 146.653537 
L 272.134021 145.82458 
L 272.743969 146.299689 
L 273.353916 146.18311 
L 273.963863 145.480051 
L 275.183757 145.25369 
L 275.793704 145.723577 
L 278.233493 145.274533 
L 278.84344 144.876974 
L 279.453387 145.053845 
L 280.063335 145.514984 
L 280.673282 145.689034 
L 281.283229 145.578458 
L 281.893176 145.185625 
L 282.503123 144.512922 
L 283.11307 144.125266 
L 283.723018 144.300787 
L 284.942912 144.090978 
L 285.552859 144.265133 
L 286.162806 143.883495 
L 287.382701 144.23008 
L 287.992648 144.126811 
L 288.602595 143.749704 
L 289.212542 144.195597 
L 289.822489 143.547443 
L 290.432436 143.44713 
L 291.042384 143.618795 
L 291.652331 144.060246 
L 292.262278 143.959363 
L 292.872225 143.320513 
L 293.482172 142.95361 
L 294.092119 142.856478 
L 294.702067 142.225641 
L 295.312014 141.864545 
L 296.531908 142.738068 
L 299.581644 143.574378 
L 300.191591 143.478162 
L 300.801538 143.902852 
L 301.411485 144.065828 
L 302.021433 143.969072 
L 302.63138 143.614623 
L 303.241327 143.777075 
L 303.851274 143.168025 
L 304.461221 142.818319 
L 305.071168 143.237141 
L 305.681116 142.889025 
L 306.291063 142.796966 
L 307.510957 142.108191 
L 308.120904 142.018773 
L 308.730851 142.433319 
L 309.340799 142.34354 
L 309.950746 141.753218 
L 311.17064 142.076875 
L 313.000482 141.814141 
L 313.610429 141.974236 
L 314.220376 142.379764 
L 314.830323 142.292086 
L 316.050217 142.606859 
L 316.660165 142.275444 
L 317.270112 142.675345 
L 317.880059 142.588012 
L 318.490006 142.74317 
L 319.099953 142.656093 
L 319.7099 142.328519 
L 320.319848 142.483183 
L 320.929795 142.39735 
L 321.539742 142.790318 
L 322.759636 143.094543 
L 323.369583 143.00808 
L 323.979531 142.448129 
L 324.589478 142.599971 
L 326.419319 142.347051 
L 327.029266 142.731916 
L 327.639214 142.647689 
L 328.859108 142.945552 
L 329.469055 142.39735 
L 330.079002 142.546176 
L 330.688949 142.001411 
L 331.908844 142.758641 
L 332.518791 142.217117 
L 333.738685 142.511528 
L 334.348632 142.885559 
L 335.568527 141.814141 
L 336.178474 141.960926 
L 336.788421 141.429696 
L 337.398368 141.801971 
L 338.008315 141.498242 
L 338.618263 141.644412 
L 339.22821 141.118614 
L 340.448104 141.410714 
L 341.058051 141.778097 
L 341.667998 141.700248 
L 342.277946 142.06538 
L 342.887893 142.208069 
L 343.49784 141.909427 
L 344.107787 142.051845 
L 344.717734 141.974236 
L 346.547576 142.39735 
L 347.157523 142.319681 
L 348.377417 142.598441 
L 348.987365 142.304735 
L 350.207259 142.581785 
L 350.817206 142.075284 
L 351.427153 142.427962 
L 352.0371 142.137737 
L 352.647048 142.062094 
L 353.256995 142.412566 
L 353.866942 142.124202 
L 354.476889 142.261069 
L 355.086836 142.185801 
L 355.696783 141.899733 
L 356.306731 142.246874 
L 357.526625 141.258466 
L 358.136572 141.604782 
L 359.356466 141.459152 
L 359.966414 141.594833 
L 360.576361 141.937607 
L 361.186308 142.071743 
L 361.796255 141.998575 
L 363.016149 142.26497 
L 363.626097 141.98633 
L 364.236044 142.11901 
L 365.455938 141.974236 
L 366.065885 142.309987 
L 366.675832 142.440942 
L 367.895727 142.296047 
L 368.505674 142.628452 
L 369.115621 142.555915 
L 369.725568 142.886474 
L 369.725568 142.886474 
&quot; style=&quot;fill:none;stroke:#2ca02c;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_14&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 106.432636 
L 65.971879 207.133843 
L 66.581826 240.700909 
L 67.191773 207.133843 
L 67.80172 227.274087 
L 68.411668 173.566769 
L 69.021615 178.362064 
L 69.631562 119.02029 
L 70.241509 95.243614 
L 70.851456 96.362525 
L 71.461403 88.123329 
L 72.071351 106.432636 
L 72.681298 114.178882 
L 73.291245 106.432636 
L 73.901192 93.005807 
L 74.511139 106.432636 
L 75.121086 100.509036 
L 75.731034 100.838125 
L 76.950928 111.467707 
L 78.170822 120.164621 
L 78.780769 123.945894 
L 80.610611 121.925128 
L 81.830505 128.011465 
L 82.440452 127.267365 
L 83.0504 133.286295 
L 84.270294 137.901763 
L 86.100135 135.204407 
L 86.710083 131.607944 
L 87.929977 140.883055 
L 88.539924 132.253457 
L 89.149871 131.607944 
L 89.759819 133.450037 
L 90.369766 128.011465 
L 90.979713 127.509631 
L 92.199607 131.048488 
L 93.419502 130.001004 
L 94.639396 133.149279 
L 95.249343 132.614958 
L 95.85929 130.127036 
L 96.469237 129.671374 
L 97.079185 131.13294 
L 97.689132 128.81068 
L 98.299079 130.234747 
L 98.909026 133.406175 
L 101.348815 131.607944 
L 102.568709 130.795838 
L 103.178656 132.007544 
L 103.788603 130.034481 
L 104.398551 131.220633 
L 105.618445 136.492702 
L 106.228392 136.050636 
L 106.838339 138.540268 
L 107.448286 139.520182 
L 108.668181 138.601086 
L 109.278128 136.780946 
L 110.498022 135.971661 
L 111.717917 137.820027 
L 112.937811 142.124202 
L 113.547758 142.936833 
L 114.157705 144.972605 
L 115.3776 146.470469 
L 115.987547 144.794998 
L 116.597494 145.528399 
L 117.207441 145.073803 
L 118.427335 146.484259 
L 119.037283 146.034239 
L 120.867124 148.026614 
L 121.477071 149.744986 
L 122.087018 150.355506 
L 122.696966 149.893152 
L 123.306913 150.489416 
L 123.91686 150.035225 
L 124.526807 151.645422 
L 125.136754 151.188725 
L 125.746701 151.74818 
L 126.966596 148.885103 
L 127.576543 150.428313 
L 128.18649 150.005274 
L 130.016332 151.607007 
L 130.626279 151.188725 
L 131.236226 152.625846 
L 131.846173 152.205913 
L 134.285962 154.133208 
L 134.895909 153.718422 
L 136.115803 154.631501 
L 137.335698 153.821436 
L 137.945645 154.265708 
L 138.555592 151.373669 
L 139.775486 150.642924 
L 142.215275 155.593858 
L 142.825222 155.99652 
L 143.435169 154.831661 
L 144.045116 155.233993 
L 145.874958 154.133208 
L 147.094852 154.918409 
L 147.704799 151.60009 
L 148.314747 152.005452 
L 148.924694 151.675208 
L 149.534641 152.798666 
L 150.144588 151.74818 
L 150.754535 152.140983 
L 151.364482 150.400778 
L 152.584377 148.391477 
L 153.194324 146.018633 
L 155.024165 147.257455 
L 155.634113 146.983467 
L 156.854007 147.780147 
L 157.463954 147.508124 
L 158.073901 148.556014 
L 158.683848 148.936392 
L 160.51369 146.199992 
L 161.123637 147.223002 
L 162.343531 147.971889 
L 162.953479 147.713882 
L 163.563426 148.080665 
L 164.173373 147.207366 
L 164.78332 147.572768 
L 165.393267 147.323435 
L 166.003214 147.683735 
L 166.613162 148.642731 
L 167.833056 149.334927 
L 168.443003 150.267288 
L 170.272845 151.253414 
L 170.882792 150.995812 
L 171.492739 149.590293 
L 172.102686 149.917251 
L 173.32258 151.691609 
L 176.372316 150.455024 
L 176.982263 150.763059 
L 177.592211 150.523434 
L 178.202158 150.827794 
L 178.812105 148.436344 
L 179.422052 148.212924 
L 180.031999 147.459056 
L 181.251894 148.083921 
L 181.861841 147.866984 
L 184.301629 149.076515 
L 187.351365 148.01572 
L 187.961312 148.30839 
L 188.57126 148.102108 
L 189.791154 146.713125 
L 190.401101 147.006425 
L 191.011048 147.783373 
L 191.620995 146.616293 
L 192.230943 146.905857 
L 192.84089 147.672181 
L 193.450837 147.476732 
L 194.060784 146.808126 
L 194.670731 146.618559 
L 195.890626 148.118254 
L 196.500573 146.992845 
L 197.11052 146.34187 
L 197.720467 146.158801 
L 198.330414 146.897049 
L 199.550309 146.530851 
L 200.160256 146.803849 
L 200.770203 147.525951 
L 201.990097 147.160683 
L 202.600044 147.871636 
L 203.209992 147.689077 
L 204.429886 148.208243 
L 205.039833 148.902284 
L 205.64978 148.282491 
L 206.259727 148.536161 
L 207.479622 149.897684 
L 208.089569 149.712739 
L 208.699516 150.382741 
L 209.309463 150.622201 
L 209.91941 151.28275 
L 210.529358 151.095104 
L 211.749252 149.888755 
L 212.969146 150.359918 
L 214.189041 150.001328 
L 214.798988 149.414862 
L 215.408935 150.056233 
L 216.628829 150.514686 
L 217.238776 149.935558 
L 217.848724 150.56464 
L 218.458671 149.989908 
L 219.068618 150.613798 
L 219.678565 150.836317 
L 220.288512 150.662191 
L 220.898459 150.882775 
L 222.118354 149.757576 
L 222.728301 149.590293 
L 223.338248 149.03699 
L 223.948195 149.259583 
L 225.16809 148.168118 
L 225.778037 148.010033 
L 226.387984 147.473131 
L 226.997931 147.318843 
L 227.607878 147.542862 
L 228.217825 147.013718 
L 229.43772 147.459056 
L 230.047667 146.192894 
L 231.267561 145.901604 
L 231.877508 146.125084 
L 232.487456 145.614561 
L 233.097403 145.472593 
L 233.70735 144.604576 
L 235.537191 145.274533 
L 236.147139 145.136301 
L 236.757086 144.641955 
L 237.367033 144.506949 
L 237.97698 144.727457 
L 238.586927 144.593097 
L 239.806822 145.730675 
L 242.24661 146.574698 
L 242.856557 145.747496 
L 243.466505 145.269626 
L 244.686399 145.689034 
L 245.296346 145.556414 
L 245.906293 145.763747 
L 246.51624 144.955918 
L 248.956029 144.445681 
L 249.565976 144.984909 
L 250.175923 143.533083 
L 250.785871 143.411447 
L 251.395818 143.61968 
L 252.615712 142.724308 
L 253.225659 141.955074 
L 255.055501 142.581785 
L 255.665448 142.466301 
L 256.275395 142.030837 
L 256.885342 142.23751 
L 257.495289 142.124202 
L 258.105237 141.376276 
L 258.715184 141.583054 
L 259.325131 140.84152 
L 259.935078 140.733989 
L 260.545025 140.940842 
L 261.154972 140.833672 
L 262.374867 141.864545 
L 262.984814 141.445677 
L 264.204708 141.847438 
L 264.814655 141.432442 
L 265.424603 140.101741 
L 266.644497 140.506758 
L 267.254444 140.404135 
L 267.864391 140.906929 
L 268.474338 141.105214 
L 270.914127 140.694884 
L 271.524074 140.890873 
L 272.743969 140.688762 
L 273.353916 140.883055 
L 273.963863 141.369793 
L 274.57381 141.268235 
L 275.183757 141.459152 
L 275.793704 141.357909 
L 276.403652 140.676848 
L 277.013599 140.867824 
L 277.623546 140.192075 
L 278.233493 140.095619 
L 280.673282 140.853104 
L 281.283229 141.323486 
L 281.893176 140.942598 
L 283.11307 141.312382 
L 283.723018 140.93472 
L 284.332965 140.838879 
L 288.602595 142.10336 
L 289.822489 141.910027 
L 290.432436 142.358471 
L 291.042384 142.261639 
L 291.652331 141.894616 
L 292.872225 142.243497 
L 293.482172 142.148001 
L 294.092119 142.320836 
L 295.312014 143.196566 
L 298.36175 144.031255 
L 298.971697 143.671105 
L 299.581644 143.574378 
L 300.191591 143.217274 
L 301.411485 143.546738 
L 303.241327 143.261976 
L 303.851274 143.424922 
L 304.461221 143.843265 
L 305.071168 144.0039 
L 305.681116 143.908779 
L 308.120904 144.542618 
L 308.730851 144.195597 
L 309.950746 144.50872 
L 312.390534 144.133579 
L 313.000482 144.288377 
L 313.610429 144.195597 
L 314.220376 143.610842 
L 314.830323 143.765775 
L 316.050217 143.095698 
L 316.660165 143.006925 
L 317.270112 142.432103 
L 317.880059 141.617402 
L 318.490006 141.290744 
L 320.319848 141.04117 
L 320.929795 141.438294 
L 322.149689 141.272392 
L 322.759636 141.42809 
L 323.369583 141.345559 
L 325.199425 141.807763 
L 325.809372 141.725112 
L 326.419319 141.408118 
L 327.029266 141.326772 
L 327.639214 141.47947 
L 328.249161 140.932124 
L 328.859108 141.317589 
L 330.079002 141.620193 
L 330.688949 141.539477 
L 331.298897 141.689579 
L 331.908844 141.379172 
L 332.518791 141.528958 
L 333.128738 141.906921 
L 333.738685 141.369793 
L 334.348632 141.062913 
L 334.95858 140.984748 
L 335.568527 141.133725 
L 336.178474 141.055755 
L 336.788421 140.752326 
L 337.398368 140.900837 
L 338.008315 140.823903 
L 338.618263 140.971588 
L 339.22821 141.342393 
L 339.838157 141.488263 
L 340.448104 141.410714 
L 341.058051 141.778097 
L 341.667998 141.922046 
L 342.277946 142.286699 
L 343.49784 142.129784 
L 344.717734 142.851811 
L 345.327681 142.991559 
L 345.937629 142.693817 
L 346.547576 142.615322 
L 347.157523 142.972172 
L 350.207259 143.65766 
L 350.817206 143.57828 
L 351.427153 143.284994 
L 352.0371 143.420555 
L 352.647048 143.342196 
L 353.256995 143.477052 
L 353.866942 143.823802 
L 354.476889 143.957082 
L 355.086836 143.455143 
L 355.696783 143.166405 
L 356.916678 143.433505 
L 357.526625 143.356421 
L 358.136572 143.69837 
L 358.746519 143.621046 
L 359.966414 144.299616 
L 360.576361 144.429175 
L 361.796255 144.273131 
L 363.016149 143.706503 
L 363.626097 143.835942 
L 364.236044 144.169952 
L 365.455938 144.016865 
L 366.065885 144.144623 
L 366.675832 144.068439 
L 367.28578 144.195597 
L 367.895727 144.524851 
L 368.505674 144.650568 
L 369.115621 144.977587 
L 369.725568 144.900503 
L 369.725568 144.900503 
&quot; style=&quot;fill:none;stroke:#d62728;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_15&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 106.432636 
L 65.971879 56.082037 
L 66.581826 72.86557 
L 67.191773 56.082037 
L 67.80172 86.292399 
L 68.411668 106.432636 
L 69.021615 120.818522 
L 69.631562 144.195597 
L 70.241509 139.999703 
L 70.851456 156.783236 
L 71.461403 161.360574 
L 72.071351 148.391477 
L 73.291245 156.783236 
L 73.901192 153.426532 
L 74.511139 156.783236 
L 75.121086 147.897836 
L 75.731034 151.188725 
L 76.340981 148.833153 
L 77.560875 135.204407 
L 78.170822 143.051266 
L 79.390717 139.999703 
L 80.610611 145.163867 
L 81.220558 139.999703 
L 82.440452 137.684736 
L 83.660347 129.171626 
L 84.270294 125.314109 
L 84.880241 124.741944 
L 85.490188 127.165236 
L 86.710083 126.013432 
L 87.32003 122.762564 
L 88.539924 127.089292 
L 89.149871 124.055345 
L 90.369766 128.011465 
L 90.979713 118.142084 
L 93.419502 117.145529 
L 94.029449 114.82441 
L 94.639396 114.653151 
L 95.249343 118.51679 
L 95.85929 120.254369 
L 96.469237 118.052005 
L 97.079185 114.032727 
L 97.689132 117.621658 
L 98.299079 119.249156 
L 98.909026 117.222058 
L 100.12892 116.850008 
L 101.958762 121.290194 
L 102.568709 121.050554 
L 103.178656 119.22009 
L 103.788603 114.299918 
L 104.398551 115.728141 
L 105.008498 115.587298 
L 105.618445 113.94766 
L 106.228392 116.798944 
L 106.838339 118.108142 
L 107.448286 117.941354 
L 108.668181 120.418921 
L 109.278128 120.227329 
L 110.498022 122.544832 
L 111.107969 122.332832 
L 111.717917 123.434141 
L 112.327864 125.798251 
L 114.767652 129.76585 
L 115.3776 129.484719 
L 115.987547 130.409112 
L 117.817388 126.109889 
L 118.427335 123.597613 
L 119.037283 125.667702 
L 119.64723 125.453977 
L 120.257177 123.031735 
L 121.477071 124.840381 
L 122.087018 124.644557 
L 122.696966 125.512874 
L 123.306913 127.412064 
L 123.91686 126.157622 
L 124.526807 125.956336 
L 125.136754 127.793508 
L 126.356649 127.370513 
L 126.966596 129.139769 
L 128.796437 131.368168 
L 129.406384 131.13294 
L 130.626279 132.540365 
L 131.236226 132.300844 
L 131.846173 131.150211 
L 132.45612 130.927527 
L 133.676015 132.27631 
L 134.285962 133.816295 
L 134.895909 133.578185 
L 135.505856 132.47605 
L 136.115803 130.532069 
L 136.72575 129.47444 
L 137.335698 130.973265 
L 137.945645 131.607944 
L 138.555592 131.399875 
L 139.165539 128.718966 
L 139.775486 129.356496 
L 140.385433 130.795838 
L 140.995381 129.795321 
L 141.605328 131.208328 
L 142.215275 131.806168 
L 143.435169 131.41278 
L 144.045116 131.995254 
L 144.655064 131.800121 
L 145.265011 132.370831 
L 145.874958 132.175802 
L 146.484905 132.735198 
L 147.094852 134.032226 
L 148.314747 135.099413 
L 148.924694 134.891675 
L 150.754535 132.143585 
L 151.364482 131.962527 
L 151.97443 133.192405 
L 152.584377 131.607944 
L 153.804271 131.263069 
L 154.414218 131.779203 
L 155.024165 131.607944 
L 155.634113 132.790674 
L 156.24406 132.614958 
L 156.854007 130.440879 
L 157.463954 131.607944 
L 158.683848 132.588803 
L 159.293796 131.12068 
L 161.123637 132.563968 
L 161.733584 132.399612 
L 162.343531 131.607944 
L 162.953479 131.45157 
L 163.563426 131.918741 
L 164.173373 131.762397 
L 165.393267 130.234747 
L 166.613162 129.949684 
L 167.223109 131.008528 
L 167.833056 129.671374 
L 169.05295 130.577371 
L 169.662897 130.436993 
L 171.492739 131.751803 
L 172.102686 131.607944 
L 172.712633 132.034644 
L 173.32258 131.890815 
L 173.932528 132.311168 
L 174.542475 133.286295 
L 175.152422 133.694299 
L 175.762369 132.991194 
L 176.372316 133.396347 
L 178.202158 132.961453 
L 178.812105 133.358097 
L 179.422052 133.214868 
L 180.031999 134.138796 
L 180.641946 134.522971 
L 181.861841 134.230361 
L 182.471788 135.129874 
L 183.081735 133.943798 
L 184.911577 133.52484 
L 185.521524 132.879417 
L 186.131471 133.758598 
L 187.351365 134.488698 
L 187.961312 133.35277 
L 188.57126 133.22015 
L 189.181207 132.59521 
L 190.401101 132.341195 
L 191.011048 131.729564 
L 192.84089 132.80676 
L 193.450837 132.681763 
L 194.060784 133.507959 
L 195.280678 134.196058 
L 196.500573 133.938981 
L 197.720467 134.610499 
L 198.330414 134.48184 
L 198.940361 133.438873 
L 199.550309 133.316667 
L 200.160256 132.741965 
L 200.770203 133.075556 
L 201.38015 132.956621 
L 201.990097 131.943605 
L 202.600044 132.27631 
L 203.209992 133.049701 
L 204.429886 132.817234 
L 205.64978 133.460661 
L 206.259727 132.910119 
L 207.479622 133.544498 
L 208.089569 134.286167 
L 208.699516 133.741447 
L 209.309463 133.626218 
L 209.91941 133.088836 
L 210.529358 133.398658 
L 211.749252 133.174863 
L 212.359199 132.232118 
L 212.969146 132.540365 
L 213.579093 133.258775 
L 214.189041 133.149279 
L 215.408935 131.302173 
L 216.628829 130.293569 
L 217.238776 131.003726 
L 217.848724 131.307035 
L 219.068618 131.110401 
L 219.678565 131.409704 
L 221.508407 131.118144 
L 222.118354 130.632156 
L 222.728301 130.927527 
L 223.948195 130.739822 
L 224.558142 131.031411 
L 225.16809 131.703665 
L 226.387984 132.272949 
L 227.607878 132.079391 
L 228.217825 131.607944 
L 228.827773 131.888699 
L 229.43772 131.794419 
L 230.047667 132.444013 
L 230.657614 132.718617 
L 231.877508 133.996843 
L 233.70735 133.698305 
L 234.317297 134.324701 
L 234.927244 134.224734 
L 235.537191 134.485112 
L 236.147139 134.385294 
L 236.757086 135.000361 
L 238.586927 133.639633 
L 239.196874 132.840297 
L 239.806822 131.695667 
L 240.416769 131.607944 
L 241.026716 130.823928 
L 241.636663 130.392576 
L 242.24661 130.6563 
L 242.856557 131.263069 
L 245.296346 132.28836 
L 246.51624 133.466513 
L 247.126188 133.712906 
L 247.736135 133.621972 
L 248.346082 133.197072 
L 248.956029 133.108448 
L 250.175923 133.595472 
L 250.785871 133.506413 
L 252.005765 132.67399 
L 253.225659 132.504156 
L 253.835606 132.744892 
L 255.055501 132.576228 
L 255.665448 131.849234 
L 256.275395 131.768294 
L 256.885342 132.327239 
L 257.495289 131.926618 
L 258.715184 132.399612 
L 259.325131 131.686858 
L 259.935078 131.607944 
L 260.545025 132.15694 
L 261.76492 131.997655 
L 262.374867 130.986335 
L 265.424603 132.143585 
L 267.254444 131.00131 
L 267.864391 130.32271 
L 268.474338 130.552686 
L 269.084286 131.08189 
L 269.694233 131.008528 
L 270.30418 131.234423 
L 270.914127 131.756905 
L 272.134021 132.200307 
L 272.743969 131.534116 
L 274.57381 133.071625 
L 275.793704 132.917637 
L 276.403652 133.131512 
L 277.013599 133.054803 
L 277.623546 133.555602 
L 279.453387 133.32444 
L 280.063335 133.533528 
L 280.673282 133.45697 
L 281.283229 132.813512 
L 281.893176 132.456543 
L 282.503123 132.383646 
L 283.11307 132.592449 
L 283.723018 133.080598 
L 284.332965 132.167399 
L 284.942912 132.375062 
L 286.772753 132.161247 
L 287.382701 132.366644 
L 287.992648 131.470372 
L 289.212542 131.334301 
L 289.822489 131.812621 
L 290.432436 131.471857 
L 291.042384 131.404362 
L 291.652331 130.795838 
L 292.262278 130.730518 
L 292.872225 130.396297 
L 293.482172 130.869471 
L 294.092119 130.536645 
L 295.921961 130.345848 
L 296.531908 129.487915 
L 297.141855 129.691707 
L 297.751802 130.158053 
L 298.36175 130.096109 
L 299.581644 130.49631 
L 300.191591 130.955738 
L 300.801538 130.632156 
L 302.021433 131.025484 
L 302.63138 131.478835 
L 303.241327 131.414776 
L 303.851274 131.607944 
L 304.461221 131.287648 
L 305.071168 131.224564 
L 305.681116 131.416742 
L 306.291063 131.353643 
L 306.90101 131.798185 
L 309.340799 131.54516 
L 310.560693 131.920286 
L 311.17064 131.607944 
L 311.780587 131.545775 
L 313.000482 132.412066 
L 314.220376 132.285028 
L 314.830323 131.73075 
L 315.44027 131.914209 
L 316.050217 131.852356 
L 316.660165 132.278471 
L 318.490006 132.818284 
L 319.099953 132.75502 
L 320.319848 133.110054 
L 320.929795 133.526056 
L 321.539742 133.461696 
L 322.149689 132.920398 
L 322.759636 133.333908 
L 323.369583 132.795461 
L 323.979531 133.207306 
L 324.589478 133.380846 
L 325.199425 133.081903 
L 327.029266 133.598548 
L 327.639214 133.068218 
L 328.249161 133.239673 
L 328.859108 132.945202 
L 329.469055 133.116131 
L 330.079002 133.517787 
L 330.688949 133.686631 
L 331.298897 133.624268 
L 332.518791 133.959164 
L 333.128738 133.667739 
L 334.348632 133.544498 
L 334.95858 133.937931 
L 335.568527 133.875987 
L 336.178474 134.040614 
L 336.788421 134.430281 
L 337.398368 134.367647 
L 338.008315 134.530069 
L 338.618263 134.467495 
L 339.22821 134.85275 
L 340.448104 134.727003 
L 341.058051 134.219947 
L 341.667998 133.93694 
L 342.887893 133.816295 
L 343.49784 134.197078 
L 344.107787 134.356333 
L 344.717734 134.2955 
L 345.327681 134.01602 
L 345.937629 133.300851 
L 346.547576 133.024732 
L 348.377417 132.853172 
L 348.987365 133.228674 
L 349.597312 133.171292 
L 350.817206 133.486696 
L 351.427153 133.429134 
L 352.0371 133.799429 
L 352.647048 133.954797 
L 353.256995 133.470805 
L 353.866942 133.413768 
L 355.086836 133.723515 
L 355.696783 134.088527 
L 356.306731 134.030666 
L 357.526625 134.335265 
L 358.136572 134.277253 
L 358.746519 134.010558 
L 359.356466 133.953461 
L 359.966414 133.480483 
L 360.576361 133.632341 
L 361.186308 133.576385 
L 361.796255 133.107083 
L 362.406202 133.258775 
L 363.626097 133.971333 
L 364.236044 133.71016 
L 365.455938 133.599493 
L 366.065885 133.748349 
L 366.675832 133.693174 
L 367.28578 134.044261 
L 367.895727 134.191316 
L 368.505674 134.540002 
L 369.725568 134.42758 
L 369.725568 134.42758 
&quot; style=&quot;fill:none;stroke:#9467bd;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_16&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 65.361932 207.133843 
L 65.971879 106.432636 
L 66.581826 173.566769 
L 67.191773 207.133843 
L 67.80172 186.993606 
L 68.411668 190.35031 
L 69.021615 192.747957 
L 69.631562 207.133843 
L 70.241509 195.944821 
L 70.851456 176.923488 
L 72.071351 165.17501 
L 73.291245 142.39735 
L 73.901192 153.426532 
L 74.511139 125.314109 
L 75.121086 136.050636 
L 75.731034 134.405192 
L 76.340981 127.632887 
L 76.950928 136.642999 
L 77.560875 139.999703 
L 78.170822 133.896605 
L 78.780769 141.459152 
L 79.390717 144.195597 
L 80.000664 138.657027 
L 80.610611 145.163867 
L 81.220558 143.729387 
L 81.830505 135.204407 
L 82.440452 134.212279 
L 83.0504 136.642999 
L 83.660347 142.165318 
L 84.880241 146.102815 
L 86.100135 155.344659 
L 86.710083 156.783236 
L 87.32003 147.257455 
L 87.929977 140.883055 
L 88.539924 145.163867 
L 89.149871 144.195597 
L 89.759819 140.818411 
L 90.369766 142.39735 
L 90.979713 146.244739 
L 92.199607 139.999703 
L 94.029449 137.901763 
L 94.639396 141.369793 
L 96.469237 139.35419 
L 97.079185 140.633046 
L 97.689132 138.134876 
L 98.909026 137.002654 
L 99.518973 134.699647 
L 100.738868 137.155037 
L 101.348815 136.642999 
L 102.568709 138.916895 
L 103.178656 138.401271 
L 103.788603 141.048672 
L 104.398551 140.516122 
L 105.008498 138.473928 
L 105.618445 137.995698 
L 106.228392 131.607944 
L 106.838339 129.783647 
L 107.448286 130.888648 
L 108.058234 133.380846 
L 108.668181 131.607944 
L 109.278128 132.642538 
L 109.888075 130.927527 
L 110.498022 131.943605 
L 111.107969 131.607944 
L 111.717917 129.973183 
L 112.327864 125.798251 
L 112.937811 124.278419 
L 114.157705 126.324229 
L 114.767652 126.081648 
L 115.3776 124.631652 
L 115.987547 124.415001 
L 116.597494 120.649273 
L 117.817388 124.952398 
L 119.64723 124.335081 
L 120.867124 126.135053 
L 121.477071 120.50915 
L 122.087018 119.288111 
L 122.696966 120.212804 
L 123.306913 119.02029 
L 123.91686 118.890521 
L 125.746701 115.495748 
L 126.966596 115.318036 
L 127.576543 116.209462 
L 128.18649 114.178882 
L 128.796437 115.064171 
L 129.406384 114.032727 
L 130.016332 114.90283 
L 131.236226 114.747416 
L 132.45612 112.783162 
L 133.066067 113.625579 
L 133.676015 111.779599 
L 134.285962 109.082664 
L 134.895909 109.05963 
L 135.505856 109.905093 
L 136.115803 111.5968 
L 137.335698 113.202465 
L 137.945645 112.306883 
L 139.775486 114.619733 
L 140.385433 113.741603 
L 140.995381 113.683126 
L 141.605328 114.424795 
L 142.215275 114.361861 
L 142.825222 115.086649 
L 143.435169 116.580822 
L 144.045116 117.277384 
L 146.484905 122.96568 
L 147.704799 122.722544 
L 148.314747 124.073727 
L 150.754535 126.430034 
L 151.364482 127.70754 
L 151.97443 128.262974 
L 152.584377 127.412064 
L 153.194324 127.961856 
L 153.804271 127.814395 
L 154.414218 126.983908 
L 155.024165 125.484213 
L 155.634113 125.35635 
L 156.24406 123.216169 
L 156.854007 123.771919 
L 157.463954 123.657846 
L 158.073901 124.203436 
L 158.683848 122.78024 
L 159.903743 125.152738 
L 160.51369 125.674905 
L 161.123637 124.915769 
L 162.953479 126.447786 
L 164.173373 124.966608 
L 164.78332 124.853586 
L 166.613162 128.140678 
L 167.223109 127.412064 
L 167.833056 127.883782 
L 168.443003 127.757599 
L 169.05295 126.455094 
L 169.662897 126.338695 
L 170.272845 124.477364 
L 170.882792 124.952398 
L 171.492739 124.846578 
L 173.32258 126.233445 
L 174.542475 126.013432 
L 175.152422 125.348892 
L 175.762369 125.244948 
L 176.372316 124.0416 
L 176.982263 123.945894 
L 177.592211 124.395553 
L 178.202158 124.298977 
L 178.812105 125.280452 
L 180.031999 126.146638 
L 181.251894 125.940205 
L 181.861841 126.887572 
L 183.081735 127.714848 
L 183.691682 128.638551 
L 184.911577 129.435456 
L 185.521524 130.336455 
L 186.131471 130.72237 
L 186.741418 130.09743 
L 187.961312 130.860152 
L 188.57126 130.739822 
L 189.181207 131.114303 
L 189.791154 131.976362 
L 190.401101 131.852356 
L 191.011048 130.27013 
L 191.620995 129.671374 
L 192.230943 130.52383 
L 192.84089 129.929592 
L 193.450837 130.295489 
L 194.060784 130.182917 
L 194.670731 130.544193 
L 195.280678 129.960954 
L 195.890626 129.851517 
L 196.500573 130.675523 
L 197.11052 131.02787 
L 197.720467 130.915043 
L 200.160256 132.28836 
L 200.770203 132.172411 
L 201.38015 132.507052 
L 201.990097 132.391178 
L 202.600044 131.830732 
L 203.209992 132.606074 
L 203.819939 131.607944 
L 204.429886 131.937753 
L 205.039833 131.389026 
L 205.64978 132.152859 
L 206.259727 132.47605 
L 206.869675 131.932081 
L 207.479622 131.82311 
L 208.699516 130.754542 
L 209.309463 130.651919 
L 209.91941 130.127036 
L 210.529358 130.449237 
L 211.749252 131.921321 
L 212.969146 132.540365 
L 213.579093 132.433359 
L 214.189041 132.738259 
L 215.408935 134.156053 
L 216.018882 134.044261 
L 216.628829 133.528952 
L 217.238776 133.823363 
L 217.848724 133.714241 
L 218.458671 133.206375 
L 219.068618 133.10054 
L 219.678565 133.39201 
L 220.288512 132.496488 
L 222.118354 134.535306 
L 222.728301 134.815611 
L 223.338248 134.706445 
L 223.948195 134.983944 
L 224.558142 134.874958 
L 225.16809 134.383929 
L 225.778037 134.659492 
L 226.997931 135.961562 
L 227.607878 136.228123 
L 228.217825 136.868444 
L 229.43772 136.642999 
L 230.047667 136.903122 
L 230.657614 136.79109 
L 231.877508 138.03959 
L 233.70735 137.697266 
L 234.317297 136.498104 
L 234.927244 136.75128 
L 235.537191 136.642999 
L 236.147139 136.177119 
L 236.757086 136.428748 
L 237.367033 135.966919 
L 237.97698 136.217499 
L 238.586927 136.112999 
L 239.806822 136.607916 
L 240.416769 136.503131 
L 241.026716 137.095974 
L 242.24661 137.577341 
L 242.856557 137.470681 
L 244.076452 137.944574 
L 244.686399 137.837764 
L 245.296346 138.071867 
L 245.906293 137.626274 
L 247.126188 138.091209 
L 247.736135 137.985689 
L 248.346082 138.549962 
L 248.956029 138.777072 
L 249.565976 138.337977 
L 250.175923 138.564277 
L 250.785871 138.128753 
L 251.395818 137.366992 
L 252.005765 137.266229 
L 252.615712 137.820027 
L 253.225659 137.718454 
L 253.835606 136.967841 
L 255.055501 136.12658 
L 255.665448 136.675171 
L 259.325131 138.00041 
L 260.545025 137.803731 
L 261.154972 138.019047 
L 261.76492 137.921255 
L 262.374867 138.134876 
L 263.594761 137.940372 
L 264.204708 138.151982 
L 264.814655 137.748255 
L 265.424603 137.959159 
L 266.644497 137.768663 
L 267.254444 137.977601 
L 267.864391 138.487673 
L 268.474338 138.693206 
L 269.084286 139.198101 
L 270.30418 139.601288 
L 270.914127 139.503151 
L 272.743969 140.09814 
L 273.353916 140.588599 
L 273.963863 140.489022 
L 274.57381 140.68276 
L 275.793704 139.902691 
L 277.013599 140.289072 
L 277.623546 140.769147 
L 278.233493 140.958774 
L 278.84344 141.434198 
L 279.453387 141.048672 
L 280.063335 140.950611 
L 281.283229 141.323486 
L 281.893176 141.791212 
L 282.503123 141.974236 
L 283.11307 142.437535 
L 283.723018 142.337253 
L 284.332965 142.796966 
L 286.162806 142.496432 
L 286.772753 142.120706 
L 287.382701 141.471142 
L 287.992648 141.925693 
L 289.212542 142.280081 
L 289.822489 142.182934 
L 290.432436 142.358471 
L 292.262278 143.689382 
L 292.872225 143.589774 
L 293.482172 143.759218 
L 294.702067 143.561203 
L 295.312014 143.729387 
L 295.921961 143.365275 
L 297.141855 143.171402 
L 297.751802 142.284373 
L 298.36175 141.927838 
L 298.971697 142.097642 
L 299.581644 141.743449 
L 300.801538 142.081391 
L 301.411485 141.470436 
L 302.021433 141.12148 
L 302.63138 141.032541 
L 303.241327 140.686496 
L 303.851274 141.112897 
L 304.461221 141.2809 
L 305.071168 141.192442 
L 305.681116 141.359379 
L 306.90101 140.676127 
L 307.510957 141.09612 
L 309.950746 141.753218 
L 310.560693 141.415696 
L 311.780587 141.740223 
L 313.000482 141.566728 
L 313.610429 141.974236 
L 314.220376 141.887338 
L 314.830323 142.292086 
L 315.44027 142.204843 
L 316.050217 142.606859 
L 317.270112 142.432103 
L 317.880059 142.588012 
L 318.490006 142.259028 
L 319.099953 142.173121 
L 320.319848 142.483183 
L 320.929795 141.91783 
L 321.539742 141.594338 
L 322.149689 141.988281 
L 322.759636 142.142284 
L 323.369583 142.058072 
L 323.979531 141.737297 
L 324.589478 141.654421 
L 325.809372 142.430963 
L 326.419319 142.581785 
L 328.249161 143.729387 
L 328.859108 143.643239 
L 329.469055 143.789544 
L 330.079002 143.240668 
L 330.688949 143.387213 
L 331.298897 142.841772 
L 332.518791 143.134668 
L 333.738685 142.968225 
L 334.348632 143.11339 
L 334.95858 142.803283 
L 335.568527 143.174973 
L 336.178474 143.092397 
L 337.398368 143.378945 
L 339.22821 143.132627 
L 339.838157 142.604683 
L 340.448104 142.747447 
L 341.058051 142.444993 
L 341.667998 142.809285 
L 342.277946 142.508017 
L 342.887893 142.649745 
L 343.49784 143.011201 
L 344.107787 142.491586 
L 344.717734 142.413031 
L 345.327681 142.115889 
L 345.937629 142.475365 
L 346.547576 142.615322 
L 347.76747 142.0253 
L 348.377417 141.948756 
L 348.987365 141.656446 
L 350.207259 141.505925 
L 350.817206 141.860568 
L 351.427153 141.785195 
L 352.0371 141.496321 
L 353.256995 142.199666 
L 355.696783 142.744191 
L 356.306731 142.668217 
L 358.136572 143.070294 
L 358.746519 143.412122 
L 359.356466 143.544052 
L 359.966414 143.467373 
L 360.576361 142.975758 
L 361.186308 143.107763 
L 361.796255 143.44602 
L 362.406202 142.957466 
L 363.016149 142.882768 
L 363.626097 143.219405 
L 364.236044 143.349579 
L 366.065885 143.125379 
L 366.675832 143.254698 
L 367.28578 142.571371 
L 367.895727 142.70129 
L 368.505674 142.426236 
L 369.115621 141.950497 
L 369.725568 142.080866 
L 369.725568 142.080866 
&quot; style=&quot;fill:none;stroke:#8c564b;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;line2d_17&quot;&gt;
    &lt;path clip-path=&quot;url(#pb95b4d8719)&quot; d=&quot;M 50.14375 139.664037 
L 384.94375 139.664037 
&quot; style=&quot;fill:none;stroke:#000000;stroke-dasharray:5.55,2.4;stroke-dashoffset:0;stroke-width:1.5;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_3&quot;&gt;
    &lt;path d=&quot;M 50.14375 251.82 
L 50.14375 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_4&quot;&gt;
    &lt;path d=&quot;M 384.94375 251.82 
L 384.94375 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_5&quot;&gt;
    &lt;path d=&quot;M 50.14375 251.82 
L 384.94375 251.82 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;patch_6&quot;&gt;
    &lt;path d=&quot;M 50.14375 7.2 
L 384.94375 7.2 
&quot; style=&quot;fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;&quot; /&gt;
   &lt;/g&gt;
   &lt;g id=&quot;legend_1&quot;&gt;
    &lt;g id=&quot;patch_7&quot;&gt;
     &lt;path d=&quot;M 301.88125 103.26875 
L 377.94375 103.26875 
Q 379.94375 103.26875 379.94375 101.26875 
L 379.94375 14.2 
Q 379.94375 12.2 377.94375 12.2 
L 301.88125 12.2 
Q 299.88125 12.2 299.88125 14.2 
L 299.88125 101.26875 
Q 299.88125 103.26875 301.88125 103.26875 
z
&quot; style=&quot;fill:#ffffff;opacity:0.8;stroke:#cccccc;stroke-linejoin:miter;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_18&quot;&gt;
     &lt;path d=&quot;M 303.88125 20.298437 
L 323.88125 20.298437 
&quot; style=&quot;fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_19&quot; /&gt;
    &lt;g id=&quot;text_13&quot;&gt;
     &lt;!-- P(zar=1) --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 19.671875 64.796875 
L 19.671875 37.40625 
L 32.078125 37.40625 
Q 38.96875 37.40625 42.71875 40.96875 
Q 46.484375 44.53125 46.484375 51.125 
Q 46.484375 57.671875 42.71875 61.234375 
Q 38.96875 64.796875 32.078125 64.796875 
z
M 9.8125 72.90625 
L 32.078125 72.90625 
Q 44.34375 72.90625 50.609375 67.359375 
Q 56.890625 61.8125 56.890625 51.125 
Q 56.890625 40.328125 50.609375 34.8125 
Q 44.34375 29.296875 32.078125 29.296875 
L 19.671875 29.296875 
L 19.671875 0 
L 9.8125 0 
z
&quot; id=&quot;DejaVuSans-80&quot; /&gt;
      &lt;path d=&quot;M 31 75.875 
Q 24.46875 64.65625 21.28125 53.65625 
Q 18.109375 42.671875 18.109375 31.390625 
Q 18.109375 20.125 21.3125 9.0625 
Q 24.515625 -2 31 -13.1875 
L 23.1875 -13.1875 
Q 15.875 -1.703125 12.234375 9.375 
Q 8.59375 20.453125 8.59375 31.390625 
Q 8.59375 42.28125 12.203125 53.3125 
Q 15.828125 64.359375 23.1875 75.875 
z
&quot; id=&quot;DejaVuSans-40&quot; /&gt;
      &lt;path d=&quot;M 5.515625 54.6875 
L 48.1875 54.6875 
L 48.1875 46.484375 
L 14.40625 7.171875 
L 48.1875 7.171875 
L 48.1875 0 
L 4.296875 0 
L 4.296875 8.203125 
L 38.09375 47.515625 
L 5.515625 47.515625 
z
&quot; id=&quot;DejaVuSans-122&quot; /&gt;
      &lt;path d=&quot;M 41.109375 46.296875 
Q 39.59375 47.171875 37.8125 47.578125 
Q 36.03125 48 33.890625 48 
Q 26.265625 48 22.1875 43.046875 
Q 18.109375 38.09375 18.109375 28.8125 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 20.953125 51.171875 25.484375 53.578125 
Q 30.03125 56 36.53125 56 
Q 37.453125 56 38.578125 55.875 
Q 39.703125 55.765625 41.0625 55.515625 
z
&quot; id=&quot;DejaVuSans-114&quot; /&gt;
      &lt;path d=&quot;M 10.59375 45.40625 
L 73.1875 45.40625 
L 73.1875 37.203125 
L 10.59375 37.203125 
z
M 10.59375 25.484375 
L 73.1875 25.484375 
L 73.1875 17.1875 
L 10.59375 17.1875 
z
&quot; id=&quot;DejaVuSans-61&quot; /&gt;
      &lt;path d=&quot;M 8.015625 75.875 
L 15.828125 75.875 
Q 23.140625 64.359375 26.78125 53.3125 
Q 30.421875 42.28125 30.421875 31.390625 
Q 30.421875 20.453125 26.78125 9.375 
Q 23.140625 -1.703125 15.828125 -13.1875 
L 8.015625 -13.1875 
Q 14.5 -2 17.703125 9.0625 
Q 20.90625 20.125 20.90625 31.390625 
Q 20.90625 42.671875 17.703125 53.65625 
Q 14.5 64.65625 8.015625 75.875 
z
&quot; id=&quot;DejaVuSans-41&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(331.88125 23.798437)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-49&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_20&quot;&gt;
     &lt;path d=&quot;M 303.88125 34.976562 
L 323.88125 34.976562 
&quot; style=&quot;fill:none;stroke:#ff7f0e;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_21&quot; /&gt;
    &lt;g id=&quot;text_14&quot;&gt;
     &lt;!-- P(zar=2) --&gt;
     &lt;g transform=&quot;translate(331.88125 38.476562)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-50&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_22&quot;&gt;
     &lt;path d=&quot;M 303.88125 49.654687 
L 323.88125 49.654687 
&quot; style=&quot;fill:none;stroke:#2ca02c;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_23&quot; /&gt;
    &lt;g id=&quot;text_15&quot;&gt;
     &lt;!-- P(zar=3) --&gt;
     &lt;g transform=&quot;translate(331.88125 53.154687)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-51&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_24&quot;&gt;
     &lt;path d=&quot;M 303.88125 64.332812 
L 323.88125 64.332812 
&quot; style=&quot;fill:none;stroke:#d62728;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_25&quot; /&gt;
    &lt;g id=&quot;text_16&quot;&gt;
     &lt;!-- P(zar=4) --&gt;
     &lt;g transform=&quot;translate(331.88125 67.832812)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-52&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_26&quot;&gt;
     &lt;path d=&quot;M 303.88125 79.010937 
L 323.88125 79.010937 
&quot; style=&quot;fill:none;stroke:#9467bd;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_27&quot; /&gt;
    &lt;g id=&quot;text_17&quot;&gt;
     &lt;!-- P(zar=5) --&gt;
     &lt;g transform=&quot;translate(331.88125 82.510937)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-53&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_28&quot;&gt;
     &lt;path d=&quot;M 303.88125 93.689062 
L 323.88125 93.689062 
&quot; style=&quot;fill:none;stroke:#8c564b;stroke-linecap:square;stroke-width:1.5;&quot; /&gt;
    &lt;/g&gt;
    &lt;g id=&quot;line2d_29&quot; /&gt;
    &lt;g id=&quot;text_18&quot;&gt;
     &lt;!-- P(zar=6) --&gt;
     &lt;defs&gt;
      &lt;path d=&quot;M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
&quot; id=&quot;DejaVuSans-54&quot; /&gt;
     &lt;/defs&gt;
     &lt;g transform=&quot;translate(331.88125 97.189062)scale(0.1 -0.1)&quot;&gt;
      &lt;use xlink:href=&quot;#DejaVuSans-80&quot; /&gt;
      &lt;use x=&quot;60.302734&quot; xlink:href=&quot;#DejaVuSans-40&quot; /&gt;
      &lt;use x=&quot;99.316406&quot; xlink:href=&quot;#DejaVuSans-122&quot; /&gt;
      &lt;use x=&quot;151.806641&quot; xlink:href=&quot;#DejaVuSans-97&quot; /&gt;
      &lt;use x=&quot;213.085938&quot; xlink:href=&quot;#DejaVuSans-114&quot; /&gt;
      &lt;use x=&quot;254.199219&quot; xlink:href=&quot;#DejaVuSans-61&quot; /&gt;
      &lt;use x=&quot;337.988281&quot; xlink:href=&quot;#DejaVuSans-54&quot; /&gt;
      &lt;use x=&quot;401.611328&quot; xlink:href=&quot;#DejaVuSans-41&quot; /&gt;
     &lt;/g&gt;
    &lt;/g&gt;
   &lt;/g&gt;
  &lt;/g&gt;
 &lt;/g&gt;
 &lt;defs&gt;
  &lt;clipPath id=&quot;pb95b4d8719&quot;&gt;
   &lt;rect height=&quot;244.62&quot; width=&quot;334.8&quot; x=&quot;50.14375&quot; y=&quot;7.2&quot; /&gt;
  &lt;/clipPath&gt;
 &lt;/defs&gt;
&lt;/svg&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Yukarıdaki şekilde sürekli eğriler zarın herbir yüzüne karşılık gelen olasılık tahmininin deney sayısına göre değişimini veriyor. Kesikli çizgi de gerçek olasılığı gösteriyor ve görüldüğü gibi sürekli eğriler buna doğru yaklaşıyor.&lt;/p&gt;
&lt;h3 id=&quot;Olas&amp;#305;l&amp;#305;k-Kuram&amp;#305;n&amp;#305;n-Aksiyomlar&amp;#305;&quot;&gt;Olas&amp;#305;l&amp;#305;k Kuram&amp;#305;n&amp;#305;n Aksiyomlar&amp;#305;&lt;a class=&quot;anchor-link&quot; href=&quot;#Olas&amp;#305;l&amp;#305;k-Kuram&amp;#305;n&amp;#305;n-Aksiyomlar&amp;#305;&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Zar atma ile ilgili çalışırken $\mathcal{S} = \{1, 2, 3, 4, 5, 6\}$ kümesine &lt;em&gt;öneklem uzayı&lt;/em&gt;, herbir elemana &lt;em&gt;çıktı&lt;/em&gt; veya &lt;em&gt;sonuç&lt;/em&gt; diyoruz. Bazı sonuçlardan oluşan bir kümeye &lt;em&gt;olay&lt;/em&gt; denir. Örneğin $5$ gelmesi yani $\{5\}$ 
olayı veya tek sayı gelmesi yani $\{1, 3, 5\}$ olayı gibi. Eğer gözlem sonucu $\mathcal{A}$ kümesinde yer alıyorsa bu $\mathcal{A}$ olayı gerçeklşmiş olur. Mesala eğer zar $3$ gelmiş ise, &lt;em&gt;tek sayı gelmesi olayı&lt;/em&gt; gerçekleşmiş olur çünkü $3 \in \{1, 3, 5\}$ sağlanır.&lt;/p&gt;
&lt;p&gt;Matematiksel olarak &lt;em&gt;olasılık&lt;/em&gt;, kümelere reel sayı karşılık getiren bir fonksiyon olarak tanımlanır. $\mathcal{S}$ örneklem uzayındaki bir $\mathcal{A}$ olayının olasılığı $P(\mathcal{A})$ ile gösterilir ve aşağıdaki özellikleri sağlar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Herhangi bir $\mathcal{A}$ olayının olasılığı negatif olamaz, yani $P(\mathcal{A}) \geq 0$;&lt;/li&gt;
&lt;li&gt;Örneklem uzayının olasılığı $1$ olmalıdır, yani $P(\mathcal{S}) = 1$;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Karşılıklı ayrık&lt;/em&gt; olan yani $i \neq j$ için $\mathcal{A}_i \cap \mathcal{A}_j = \emptyset$ biçimindeki sayılabilir çoklukta $\mathcal{A}_1, \mathcal{A}_2, \ldots$ olayları için herhangi birisinin gerçekleşmesi olasılığı olasılıklarının toplamına eşittir, yani $P(\bigcup_{i=1}^{\infty} \mathcal{A}_i) = \sum_{i=1}^{\infty} P(\mathcal{A}_i)$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bunlara olasılık kuramının aksiyomları denir ve Kolmogorov tarafından 1930'da tanımlanmıştır. Bu sağlam temeller sayesinde rastgelelik ile ilgili felsefi tartışmalardan kurtulup matematiksel araçlarla çalışabilir ve yeni sonuçlar elde edebiliriz. Mesela $\mathcal{A}_1$ olayını örneklem uzayının tamamı ve diğer her $i &amp;gt; 1$ için $\mathcal{A}_i = \emptyset$ olarak alırsak, $P(\emptyset) = 0$ buluruz, yani boş kümenin olasılığı sıfırdır.&lt;/p&gt;
&lt;h3 id=&quot;Rassal-De&amp;#287;i&amp;#351;kenler&quot;&gt;Rassal De&amp;#287;i&amp;#351;kenler&lt;a class=&quot;anchor-link&quot; href=&quot;#Rassal-De&amp;#287;i&amp;#351;kenler&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Zar atma deneyinde &lt;em&gt;rassal değişken&lt;/em&gt; (random variable) kavramını kullandık. Rassal değişken herhangi bir tür çokluk olabilir ve belirgin (deterministic) değildir. Deneydeki mümkün olan tüm değerleri alabilir. Mesela $X$ rassal değişkeni zar atma deneyindeki $\mathcal{S} = \{1, 2, 3, 4, 5, 6\}$ örneklem uzayında değerler alsın. Zarın $5$ gelmesi olayını $\{X = 5\}$ veya $X = 5$ şeklinde olasılığını da $P(\{X = 5\})$ veya $P(X = 5)$ ile gösterebiliriz. $P(X = a)$ ile $X$ rassal değişkeni ve onun aldığı $a$ değerini ayrı ayrı belirtmiş oluyoruz. Ancak bu gösterim uzun olacağından, $P(X)$ ile $X$ rassal değişkeninin dağılımını (distribution), $P(a)$ ile de $a$ değerini alma olasılığını göstereceğiz. Benzer şekilde rassal değişkenin belli bir aralıkta değerler alma olasılığını da belirtebiliriz. Örneğin $P(1 \leq X \leq 3)$ ile $X$ rassal değişkeninin $\{1, 2, 3\}$ değerlerini alma ihtimalini gösteriyoruz.&lt;/p&gt;
&lt;p&gt;Zarın üzerindeki rakamlar gibi &lt;em&gt;ayrık&lt;/em&gt; rassal değişkenler ile bir insanın boyu gibi &lt;em&gt;sürekli&lt;/em&gt; rassal değişkenler arasında önemli bir fark vardır. İki kişinin tam olarak aynı boyda olması pek mümkün değildir. Eğer çok hassas bir uzunluk ölçme aracımız olsaydı, dünyada her kişinin boyunun diğerlerinden farklı olduğunu görürdük. Dolayısıyla bir kişinin boyunun örneğin 1.80139278291028719210196740527486202 metre olma ihtimalini hiçbir zaman sorgulamayız. Dünya nüfusu alındığında bile bu ihtimal sıfırdır. Burada bir kişinin boyunun belirlenen bir aralıkta olma ihtimali anlamlı olur, mesela 1.79 ile 1.81 metre arası gibi. Böyle sürekli rassal değikenlerde herbir değerin &lt;em&gt;yoğunluk&lt;/em&gt; (density) olarak olasığı değrlendirilir. Mesela 1.80 metrenin olasılığı sıfırdır ama yoğunluğu sıfırdan büyük bir sayıdır. Bir aralıkta olasılık ise sıfırdan farklı bir değer alabilir. Bu bölümde kesikli rassal değişkenler kullanılacaktır, sürekli rassal değikenlerin olasılığı için Rassal Değişkenler bölümüne bakınız.&lt;/p&gt;
&lt;h2 id=&quot;Rassal-De&amp;#287;i&amp;#351;kenlerin-Birbiriyle-&amp;#304;li&amp;#351;kileri&quot;&gt;Rassal De&amp;#287;i&amp;#351;kenlerin Birbiriyle &amp;#304;li&amp;#351;kileri&lt;a class=&quot;anchor-link&quot; href=&quot;#Rassal-De&amp;#287;i&amp;#351;kenlerin-Birbiriyle-&amp;#304;li&amp;#351;kileri&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Genellikle birden fazla rassal değişkeni bir arada  inceleriz. Örneğin Grip ile öksürük gibi belli bir hastalık ile bir belirtinin hastalarda ayrı ayrı ve bir arada görülmesi olasılıkları üzerinden ilişkileri incelenebilir. Bu sayede daha etkin tedavi için çıkarımlar yaılabilir.&lt;/p&gt;
&lt;p&gt;Daha karmaşık bir örnek olarak milyonlarca pikselden oluşan resimleri ele alalım. Piksellerin renk değerleri birer rassal değişken olarak görülebilir. Ayrıca resimleri belirten etiketler, yer, konum gibi diğer veriler de birer rassal değişken olarak düşünülebilir. Tüm bu rassal değişkenler bir arada yer alır. Rassal değişkenlerin birbirlerine göre durumlarını incelerken birçok nicelik kullanırız, şimdi bunları görelim.&lt;/p&gt;
&lt;h3 id=&quot;Ortak-Olas&amp;#305;l&amp;#305;k-(Joint-Probability)&quot;&gt;Ortak Olas&amp;#305;l&amp;#305;k (Joint Probability)&lt;a class=&quot;anchor-link&quot; href=&quot;#Ortak-Olas&amp;#305;l&amp;#305;k-(Joint-Probability)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;İlkine &lt;em&gt;ortak olasılık&lt;/em&gt; denir ve $P(A = a, B=b)$ ile gösterilir. Belli $a$ ve $b$ değerleri için ortak olasılık bize aynı anda $A=a$ ve $B=b$ olması olasılığını verir. Burada her $a$ ve $b$ için  $P(A=a, B=b) \leq P(A=a)$ olur. Çünkü aynı anda $A=a$ ve $B=b$ olması için ayrı ayrı $A=a$ olmalı ve $B=b$ olmalıdır. Dolayısıyla herbirinin ayrı ayrı olması birlikte olmalarından daha muhtemeldir.&lt;/p&gt;
&lt;h3 id=&quot;Ko&amp;#351;ullu-Olas&amp;#305;l&amp;#305;k-(Conditional-Probability)&quot;&gt;Ko&amp;#351;ullu Olas&amp;#305;l&amp;#305;k (Conditional Probability)&lt;a class=&quot;anchor-link&quot; href=&quot;#Ko&amp;#351;ullu-Olas&amp;#305;l&amp;#305;k-(Conditional-Probability)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Yukarıdaki eşitsizlikten dolayı $0 \leq \frac{P(A=a, B=b)}{P(A=a)} \leq 1$ elde edilir. Bu orana &lt;em&gt;koşullu olasılık&lt;/em&gt; denir ve $P(B=b \mid A=a)$ ile gösterilir. Anlamı da, $A=a$ durumunda $B=b$ olması olasılığıdır.&lt;/p&gt;
&lt;h3 id=&quot;Bayes-Teoremi&quot;&gt;Bayes Teoremi&lt;a class=&quot;anchor-link&quot; href=&quot;#Bayes-Teoremi&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Koşullu olasılık tanımını kullanarak İstatistiğin en önemli ve gerekli denklemlerinden birisi, yani Bayes Teoremi elde edilebilir. Şöyle ki, tanımdan &lt;em&gt;çarpım kuralı&lt;/em&gt; yani $P(A, B) = P(B \mid A) P(A)$ elde edilir. $P(A, B)=P(B, A)$ olduğundan aynı zamanda $P(A, B) = P(A \mid B) P(B)$ yazılabilir. $P(B) &amp;gt; 0$ kabul edilerek ve sadeleştirmeyle&lt;/p&gt;
&lt;p&gt;
$$P(A \mid B) = \frac{P(B \mid A) P(A)}{P(B)}$$
&lt;/p&gt;
&lt;p&gt;olur. Yukarıda $P(A, B)$ gösterimi ile belirtilen dağılıma &lt;em&gt;ortak dağılım&lt;/em&gt;, $P(A \mid B)$ ile gösterilen dağılıma da &lt;em&gt;koşullu dağılım&lt;/em&gt; denir. Bu dağılımların özel olarak $A = a, B=b$ için değerleri hesaplanabilir.&lt;/p&gt;
&lt;h3 id=&quot;Ay&amp;#305;rma-(Marginalization)&quot;&gt;Ay&amp;#305;rma (Marginalization)&lt;a class=&quot;anchor-link&quot; href=&quot;#Ay&amp;#305;rma-(Marginalization)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Bayes Teoremi bir şeyden diğeri için çıkarım yapmada çok yararlıdır. Neden-sonuç ilişkisi gibi durumlarda nasıl kullanılacağını sonraki bölümlerde göreceğiz. Bunun için &lt;em&gt;ayırma&lt;/em&gt; işlemine ihtiyacımız var. Bu işlem ile $P(A, B)$ yardımıyla $P(B)$ elde edilmektedir. $B$ rassal değişkeninin olasılığı, $A$ rassal değişkeninin alabileceği her değer için ortak olasılıkların toplamıdır. Buna &lt;em&gt;toplam kuralı denir&lt;/em&gt; ve&lt;/p&gt;
&lt;p&gt;
$$P(B) = \sum_{A} P(A, B)$$
&lt;/p&gt;
&lt;p&gt;biçiminde formülleştirilir. Ayırma sonucunda elde edilen olasılığa ya da bunun dağılımına &lt;em&gt;marjinal olasılık&lt;/em&gt; ya da &lt;em&gt;marjinal dağılım&lt;/em&gt; denir.&lt;/p&gt;
&lt;h3 id=&quot;Ba&amp;#287;&amp;#305;ms&amp;#305;zl&amp;#305;k-(Independence)&quot;&gt;Ba&amp;#287;&amp;#305;ms&amp;#305;zl&amp;#305;k (Independence)&lt;a class=&quot;anchor-link&quot; href=&quot;#Ba&amp;#287;&amp;#305;ms&amp;#305;zl&amp;#305;k-(Independence)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Rassal değişkenler arasında bakılan bir diğer özellik de &lt;em&gt;bağımlılık&lt;/em&gt; ya da tersi &lt;em&gt;bağımsızlık&lt;/em&gt; durumudur. $A$ ve $B$ gibi iki rassal değişkenin bağımsız olması, $B$ rassal değişkeninin aldığı değerlerin $A$ için herhangi bir bilgi ortaya koymaması olarak özetlenebilir. Bu durumda $P(B \mid A) = P(B)$ olur. İstatistikçiler bağımsızlığı $A \perp  B$ ile gösterir. Bayes Toeremi gereği $P(A \mid B) = P(A)$ elde edilir. Diğer hallerde $A$ ve $B$ bağımlıdır. Örneğin iki zarın arka arkaya atılması bağımsız rassal değişkenler verir. Bununla birlikte bir odadaki elektrik düğmesi ile odanın aydınlık olması bağımlıdır. (Elektrik düğmesinin açık olması aydınlık olacağını kesin gerektirmez çünkü düğme bozuk olabilir ya da elektrikler kesilebilir.)&lt;/p&gt;
&lt;p&gt;$P(A \mid B) = \frac{P(A, B)}{P(B)} = P(A)$ eşitliğiyle $P(A, B) = P(A)P(B)$ eşitliği birbirine denk olduğundan, iki rassal değişkenin bağımsız olması ortak dağılımın bunların dağılımlarının çarpımına eşit olması ile aynı şeydir. Benzer şekilde $A$ ve $B$ rassal değişkenleri $C$ rassal değikenine göre &lt;em&gt;koşullu bağımsızlık&lt;/em&gt; tanımı $P(A, B \mid C) = P(A \mid C)P(B \mid C)$ olarak verilebilir ve $A \perp B \mid C$ biçiminde gösterilir.&lt;/p&gt;
&lt;h3 id=&quot;Uygulamalar&quot;&gt;Uygulamalar&lt;a class=&quot;anchor-link&quot; href=&quot;#Uygulamalar&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Şimdi öğrendiklerimizi sınayalım. Bir doktor kendisine başvuran bir kişiye AIDS testi uyguluyor. Bu test oldukça güvenilir ve sağlam bir kişiyi AIDS hastası göstermesi olasılığı %1. Hatta HIV virüsü taşıyan bir kişiyi tesit etmede kesinlikle hata yapmıyor. $D_1$ ile teşhisi gösterirelim, yani pozitif teşhis için $1$, negatif teşhis için $0$ değerini alsın. $H$ ile de HIV virüsü taşımayı gösterelim, dolayısıyla HIV pozitif için $1$, HIV negatif için $0$ değeri alsın. Aşağıdaki tablo eldeki verileri özetler.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Koşullu Olasılık&lt;/th&gt;
&lt;th&gt;$H=1$&lt;/th&gt;
&lt;th&gt;$H=0$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$P(D_1 = 1 \mid H)$&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$P(D_1 = 0 \mid H)$&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.99&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tablodaki sütunların toplamı 1 olmalıdır çünkü koşullu olasılık da bir olasılık dağılımıdır. Doktora başvuran kişinin testi pozitif çıkıyor, bu durumda kişinin AIDS olma olasılığını inceleyelim. Yani $P(H = 1 \mid D_1 = 1)$ değerini hesaplamak istiyoruz. Bu oran hastalığın toplumda ne kadar yaygın olduğuna bağlıdır, çünkü yanlış alarm oranını buradan elde ederiz. Toplumun oldukça sağlıklı olduğunu örneğin $P(H=1) = 0.0015$ olduğunu kabul edelim. Bayes Teoremi'ni uygulamadan önce ayırma ve çarım kuralı ile aşağıdaki hesabı yapalım:&lt;/p&gt;
$$\begin{aligned}
&amp;amp;P(D_1 = 1) \\
=&amp;amp; P(D_1=1, H=0) + P(D_1=1, H=1)  \\
=&amp;amp; P(D_1=1 \mid H=0) P(H=0) + P(D_1=1 \mid H=1) P(H=1) \\
=&amp;amp; 0.011485.
\end{aligned}
$$&lt;p&gt;Dolayısıyla&lt;/p&gt;
$$\begin{aligned}
&amp;amp;P(H = 1 \mid D_1 = 1)\\ =&amp;amp; \frac{P(D_1=1 \mid H=1) P(H=1)}{P(D_1=1)} \\ =&amp;amp; 0.1306 \end{aligned}$$&lt;p&gt;elde edilir. Diğer bir ifadeyle kişinin gerçekten AIDS olma olasılığı sadece %13.06 olarak bulunur. Test oldukça güvenilirdi ama oran düşük çıktı. Olasılık bazen sezgilere aykırı olabiliyor.&lt;/p&gt;
&lt;p&gt;Kişi testi pozitif çıkınca ne yapmalıdır? Büyük ihtimalle farklı bir test daha uygulanacaktır. İkinci test biraz farklı özellikte ve birincisi kadar iyi değil. Tabloda özelliklerini görelim.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Koşullu Olasılık&lt;/th&gt;
&lt;th&gt;$H=1$&lt;/th&gt;
&lt;th&gt;$H=0$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$P(D_2 = 1 \mid H)$&lt;/td&gt;
&lt;td&gt;0.98&lt;/td&gt;
&lt;td&gt;0.03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$P(D_2 = 0 \mid H)$&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Maalesef ikinci test sonucu da pozitif çıkıyor. İki testin koşullu olarak bağımsız olduğunu düşünerek Bayes Teoremi'ni uygulayalım:&lt;/p&gt;
$$\begin{aligned}
&amp;amp;P(D_1 = 1, D_2 = 1 \mid H = 0) \\
=&amp;amp; P(D_1 = 1 \mid H = 0) P(D_2 = 1 \mid H = 0)  \\
=&amp;amp; 0.0003,
\end{aligned}
$$$$\begin{aligned}
&amp;amp;P(D_1 = 1, D_2 = 1 \mid H = 1) \\
=&amp;amp; P(D_1 = 1 \mid H = 1) P(D_2 = 1 \mid H = 1)  \\
=&amp;amp; 0.98.
\end{aligned}
$$&lt;p&gt;Şimdi ayırma ve çarpım kuralını uygulayabiliriz:&lt;/p&gt;
$$\begin{aligned}
&amp;amp;P(D_1 = 1, D_2 = 1) \\
=&amp;amp; P(D_1 = 1, D_2 = 1, H = 0) + P(D_1 = 1, D_2 = 1, H = 1)  \\
=&amp;amp; P(D_1 = 1, D_2 = 1 \mid H = 0)P(H=0) + P(D_1 = 1, D_2 = 1 \mid H = 1)P(H=1)\\
=&amp;amp; 0.00176955.
\end{aligned}
$$&lt;p&gt;Sonuç olarak kişinin AIDS olma olasılğı hesaplanırsa&lt;/p&gt;
$$\begin{aligned}
&amp;amp;P(H = 1 \mid D_1 = 1, D_2 = 1)\\
=&amp;amp; \frac{P(D_1 = 1, D_2 = 1 \mid H=1) P(H=1)}{P(D_1 = 1, D_2 = 1)} \\
=&amp;amp; 0.8307
\end{aligned}
$$&lt;p&gt;elde edilir. Yani ikinci test çok daha emin olmamızı sağladı. İkinci test birincisine göre oldukça az güvenilirdi ama tahminimizi önemli ölçüde geliştirdi.&lt;/p&gt;
&lt;h2 id=&quot;Beklenen-De&amp;#287;er-ve-Varyans-(Expectation-and-Variance)&quot;&gt;Beklenen De&amp;#287;er ve Varyans (Expectation and Variance)&lt;a class=&quot;anchor-link&quot; href=&quot;#Beklenen-De&amp;#287;er-ve-Varyans-(Expectation-and-Variance)&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Olasılık dağılımlarının belirgin özelliklerini özetlemek için bazı ölçümlere ihtiyaç vardır. Bir $X$ rassal değişkeni için &lt;em&gt;beklenen değer&lt;/em&gt; (ya da ortalama),&lt;/p&gt;
&lt;p&gt;
$$E[X] = \sum_{x} x P(X = x)$$
&lt;/p&gt;
&lt;p&gt;şeklinde gösterilir ve tanımlanır. Eğer bir $f(x)$ fonksiyonunun girdileri $P$ dağılımına sahip bir rassal değişkenden geliyorsa bu fonksiyonun beklenen değeri&lt;/p&gt;
&lt;p&gt;
$$E_{x \sim P}[f(x)] = \sum_x f(x) P(x)$$
&lt;/p&gt;
&lt;p&gt;olarak tanımlanır.&lt;/p&gt;
&lt;p&gt;Genellikle $X$ rassal değişkeninin ortalamadan ne kadar saptığını bilmek isteriz. Bunu aşağıda tanımlanan &lt;em&gt;varyans&lt;/em&gt; ile yaparız:&lt;/p&gt;
$$\mathrm{Var}[X] = E\left[(X - E[X])^2\right] =
E[X^2] - E[X]^2.$$&lt;p&gt;Varyansın karekökü &lt;em&gt;standart sapma&lt;/em&gt; olarak adlandırılır. Rassal değişkenin bir fonksiyonu için varyans benzer şekilde tanımlanır ve dağılımdan farklı $x$ örneklemleri alındığında fonksiyonun ortalamasından ne kadar saptığını gösterir:&lt;/p&gt;
&lt;p&gt;
$$\mathrm{Var}[f(x)] = E\left[\left(f(x) - E[f(x)]\right)^2\right].$$
&lt;/p&gt;
&lt;h2 id=&quot;&amp;#214;zet&quot;&gt;&amp;#214;zet&lt;a class=&quot;anchor-link&quot; href=&quot;#&amp;#214;zet&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Olasılık dağılımında örneklem alabiliriz. &lt;/li&gt;
&lt;li&gt;Birçok rassal değişkeni ortak dağılım, koşullu dağılım, Bayes Kuralı, ayırma ve bağımsızlık kavramları yardımıyla bir arada analiz edebiliriz.&lt;/li&gt;
&lt;li&gt;Ortalama ve varyans olasılık dağılımının belirgin özelliklerini özetlemek için yararlı araçlardır. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Al&amp;#305;&amp;#351;t&amp;#305;rmalar&quot;&gt;Al&amp;#305;&amp;#351;t&amp;#305;rmalar&lt;a class=&quot;anchor-link&quot; href=&quot;#Al&amp;#305;&amp;#351;t&amp;#305;rmalar&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Deneyimizde $n=10$ boyutunda örneklem için $m=500$ grup aldık. Siz de $m$ ve $n$ için farklı değerler alarak inceleme yapın. &lt;/li&gt;
&lt;li&gt;$P(\mathcal{A})$ ve $P(\mathcal{B})$ olasılıklarına sahip olayları göz önüne alarak $P(\mathcal{A} \cup \mathcal{B})$ ve $P(\mathcal{A} \cap \mathcal{B})$ olasılıkları için alt ve üst sınırlar belirleyin. (Venn Şeması ile görebilirsiniz.) &lt;/li&gt;
&lt;li&gt;$A$, $B$, ve $C$ gibi üç rassal değişkenimiz var. $B$ sadece $A$ ile bağımlı ve $C$ sadece $B$ ile bağımlı. $P(A, B, C)$ olasılığını nasıl sadeleştirirsiniz? (Bu bir &lt;a href=&quot;https://en.wikipedia.org/wiki/Markov_chain&quot;&gt;Markov Zinciri'dir&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Uygulamamızda ilk test daha güvenilirdi. Neden ilk testi ikinci kez tekrarlamak iyi bir fikir değildir? &lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.d2l.ai/t/36&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Softmaks Regresyonu (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/21/Linear-Siniflandirma.html" rel="alternate" type="text/html" title="Softmaks Regresyonu (✗)" /><published>2020-02-21T00:00:00-06:00</published><updated>2020-02-21T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/21/Linear-Siniflandirma</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/21/Linear-Siniflandirma.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-21-Linear-Siniflandirma.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Softmaks-Regresyonu&quot;&gt;Softmaks Regresyonu&lt;a class=&quot;anchor-link&quot; href=&quot;#Softmaks-Regresyonu&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Önceki bölümlerde lineer regresyon tanıtıldı, daha sonra nasıl hesaplanacağını hatta büyük veri olması durumunda özel kütüphaneler ile nasıl iş yapılacağını gördük.&lt;/p&gt;
&lt;p&gt;Regresyon, bir şeyin ne kadar, kaç tane olduğu gibi sorulara cevap aradığımızda kullandığımız bir araçtır. Bir evin kaç araya satılabileceğini, bir takımın kaç maç kazanabileceğini veya bir hastanın hastanede kaç gün yatacağını tahimin etmek istiyorsanız, muhtemelen regresyon sizin için en iyisidir.&lt;/p&gt;
&lt;p&gt;Pratik uygulamalarda sınıflandırma daha çok gereklidir. Sınıflandırmada nesnelerin &lt;em&gt;ne kadar&lt;/em&gt; olduğu yerine &lt;em&gt;hangisi&lt;/em&gt; olduğu ile ilgileniriz:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bu e-posta istenmeyen bildirim midir?&lt;/li&gt;
&lt;li&gt;Bu müşterinin hizmet alması muhtemel midir?&lt;/li&gt;
&lt;li&gt;Bu resim maymun, köpek, kedi veya horoz arasından hangisinin resmidir?&lt;/li&gt;
&lt;li&gt;Hangi film sayfayı ziyaret eden kişinin en çok izlemek isteyeceği türdendir?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Makine öğrenmesi uygulayıcıları günlük kullanımda &lt;em&gt;sınıflandırma&lt;/em&gt; ifadesini birbirinden ince bir çizgiyle ayrılan iki durum için kullanılır: (i) Örneğin hangi sınıfa ait olduğunu &lt;em&gt;kesin&lt;/em&gt; olarak belirlemek (hard assignment) istediğimiz durum. (ii) &lt;em&gt;Esnek&lt;/em&gt; olarak belirlemek (soft assignment), yani her bir sınıfa ait olma &lt;em&gt;olasığının&lt;/em&gt; belirlenmesi. Aradaki fark detaya indiğinizde kapanır çünkü kesin olarak sınıfları belirlerken de aslında olasılık kullanırız.&lt;/p&gt;
&lt;h2 id=&quot;S&amp;#305;n&amp;#305;fland&amp;#305;rma-(Classification)&quot;&gt;S&amp;#305;n&amp;#305;fland&amp;#305;rma (Classification)&lt;a class=&quot;anchor-link&quot; href=&quot;#S&amp;#305;n&amp;#305;fland&amp;#305;rma-(Classification)&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Konuya çabuk ısınmak adına, $2\times2$ boyutunda siyah-beyaz resimlerin sınıflandırılması örneği ile başlayalım. Her bir pikseli bir sayı ile gösterirsek, bir resim için $x_1, x_2, x_3, x_4$ ile gösterdiğimiz dört özellik belirlenmiş olur. Dahası, resimlerin &quot;kedi&quot;, &quot;tavuk&quot; ve &quot;köpek&quot; sınıflarından birine ait olduğunu kabul edelim.&lt;/p&gt;
&lt;p&gt;Şimdi etiketlere yani resmin ait olduğu sınıfı nasıl ifade edeceğimize karar vermeliyiz. En doğal yol {kedi, tavuk, köpek} sınıflarını, birden üçe kadar olan tamsayılarla gösterip $y \in \{1, 2, 3\}$ biçiminde ifade etmektedir. BU şekilde bilgisayarın hafızasına yük olmayız. Sınıflar arasıda doğal bir sıralama söz konusu olsaydı problemimiz regresyon problemi olurdu ve bu tür etiketleri kullannabilirdik. Mesela {bebek, çokuk, genç, yetişkin, yaşlı} örneğinde olduğu gibi.&lt;/p&gt;
&lt;p&gt;Ancak genellikle sınıflandırma problemlerinde sınıflar arasında doğal bir hiyerarşi yoktur. Neyse ki İstatistikçiler uzun yıllar önce buna bir çözüm buldular: &lt;em&gt;tek aktif kod&lt;/em&gt; (one-hot encoding). Tek aktif kod, sınıf sayısı kadar bileşene sahip bir vektördür. Veri kümseindeki bir örnek için tek aktif kod vektörü oluşturulurken, örneğin ait olduğu bileşen $1$, diğer bilşenler $0$ alı alınır. Bu durumda yukarıdaki üçlü sınıflandırmada etiketler&lt;/p&gt;
&lt;p&gt;
$$y \in \{(1, 0, 0), (0, 1, 0), (0, 0, 1)\}$$
&lt;/p&gt;
&lt;p&gt;şeklinde vektörler olur. Eğer $y$ vektörü $(1, 0, 0)$ ise &quot;kedi&quot;, $(0, 1, 0)$ ise &quot;tavuk&quot; ve $(0, 0, 1)$ ise &quot;köpek&quot; belirtir.&lt;/p&gt;
&lt;h3 id=&quot;A&amp;#287;-Yap&amp;#305;s&amp;#305;-(Network-Architecture)&quot;&gt;A&amp;#287; Yap&amp;#305;s&amp;#305; (Network Architecture)&lt;a class=&quot;anchor-link&quot; href=&quot;#A&amp;#287;-Yap&amp;#305;s&amp;#305;-(Network-Architecture)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Her sınıfın koşullu olasılığını tahmin etmek için çoklu çıktı veren bir modele ihtiyacımız var. Lineer modellerle sınıflandırma yapabilmek amacıyla çıktı sayısı kadar lineer fonksiyon gerekir. Her çıktı kendi lineer fonksiyonuna karşılık gelir. Bizim durumumuzda $3$ çıktı sınıfı ve $4$ özellik olduğundan, $w$ ile göstereceğimiz $12$ tane ağırlık (weight), $b$ ile göstereceğimiz $3$ tane yanlılık (bias) terimleri olacaktır. Şimdi $o$ ile gösterilen her çıktı (output) için&lt;/p&gt;
$$
\begin{aligned}
o_1 &amp;amp;= x_1 w_{11} + x_2 w_{12} + x_3 w_{13} + x_4 w_{14} + b_1,\\
o_2 &amp;amp;= x_1 w_{21} + x_2 w_{22} + x_3 w_{23} + x_4 w_{24} + b_2,\\
o_3 &amp;amp;= x_1 w_{31} + x_2 w_{32} + x_3 w_{33} + x_4 w_{34} + b_3
\end{aligned}
$$&lt;p&gt;elde edilir. Bu hesabı aşağıdaki sinir ağı (neural network) diyagramı ile gösterebiliriz. Lineer regresyonda olduğu gibi, lojistik regresyon modeli de bir tek katman içerir. Her bir $o_1, o_2$, and $o_3$ çıktısı tüm $x_1$, $x_2$, $x_3$, and $x_4$ girdileri ile bağımlı olduğundan, çıktı katmanı tam bağlantılı katmanıdır (fully-connected layer).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://d2l.ai/_images/softmaxreg.svg&quot; alt=&quot;Softmax regression is a single-layer neural network.  &quot; /&gt;&lt;/p&gt;
&lt;p&gt;Modelimizi daha derlitoplu ifade etmek için, Lineer Cebir gösterimi kullanacağız. Vektör formatında $\mathbf{o} = \mathbf{W} \mathbf{x} + \mathbf{b}$ yazarak hem matematiksel açıdan hem de kod yazmada daha uygun bir form elde edilir. Burada tüm ağırlıklar $3\times4$ ebatında $\mathbf{W}$ matrisini oluşturur. Verilen bir $\mathbf{x}$veri örneği için çıktı vektörümüz, ağırlık matris ile örnek vektörünün çarpımına $\mathbf{b}$ yanlılık vektörünün eklenmesiyle elde edilir.&lt;/p&gt;
&lt;h3 id=&quot;Softmaks-&amp;#304;&amp;#351;lemcisi-(Softmax-Operation)&quot;&gt;Softmaks &amp;#304;&amp;#351;lemcisi (Softmax Operation)&lt;a class=&quot;anchor-link&quot; href=&quot;#Softmaks-&amp;#304;&amp;#351;lemcisi-(Softmax-Operation)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Modelimizin çıktılarını olasılıklar olarak yorumlamak istiyoruz.&lt;/p&gt;
&lt;p&gt;The main approach that we are going to take here
is to interpret the outputs of our model as probabilities.
We will optimize our parameters to produce probabilities
that maximize the likelihood of the observed data.
Then, to generate predictions, we will set a threshold,
for example, choosing the &lt;em&gt;argmax&lt;/em&gt; of the predicted probabilities.&lt;/p&gt;
&lt;p&gt;Put formally, we would like outputs $\hat{y}_k$
that we can interpret as the probability
that a given item belongs to class $k$.
Then we can choose the class with the largest output value
as our prediction $\operatorname*{argmax}_k y_k$.
For example, if $\hat{y}_1$, $\hat{y}_2$, and $\hat{y}_3$
are $0.1$, $0.8$, and $0.1$, respectively,
then we predict category $2$, which (in our example) represents &quot;chicken&quot;.&lt;/p&gt;
&lt;p&gt;You might be tempted to suggest that we interpret
the logits $o$ directly as our outputs of interest.
However, there are some problems with directly
interpreting the output of the linear layer as a probability.
Nothing constrains these numbers to sum to 1.
Moreover, depending on the inputs, they can take negative values.
These violate basic axioms of probability presented in :numref:&lt;code&gt;sec_prob&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To interpret our outputs as probabilities,
we must guarantee that (even on new data),
they will be nonnegative and sum up to 1.
Moreover, we need a training objective that encourages
the model to estimate faithfully &lt;em&gt;probabilities&lt;/em&gt;.
Of all instances when a classifier outputs $0.5$,
we hope that half of those examples
will &lt;em&gt;actually&lt;/em&gt; belong to the predicted class.
This is a property called &lt;em&gt;calibration&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;softmax function&lt;/em&gt;, invented in 1959 by the social scientist
R Duncan Luce in the context of &lt;em&gt;choice models&lt;/em&gt; does precisely this.
To transform our logits such that they become nonnegative and sum to $1$,
while requiring that the model remains differentiable,
we first exponentiate each logit (ensuring non-negativity)
and then divide by their sum (ensuring that they sum to $1$).&lt;/p&gt;
$$
\hat{\mathbf{y}} = \mathrm{softmax}(\mathbf{o})\quad \text{where}\quad
\hat{y}_i = \frac{\exp(o_i)}{\sum_j \exp(o_j)}.
$$&lt;p&gt;It is easy to see $\hat{y}_1 + \hat{y}_2 + \hat{y}_3 = 1$
with $0 \leq \hat{y}_i \leq 1$ for all $i$.
Thus, $\hat{y}$ is a proper probability distribution
and the values of $\hat{\mathbf{y}}$ can be interpreted accordingly.
Note that the softmax operation does not change the ordering among the logits,
and thus we can still pick out the most likely class by:&lt;/p&gt;
$$
\hat{\imath}(\mathbf{o}) = \operatorname*{argmax}_i o_i = \operatorname*{argmax}_i \hat y_i.
$$&lt;p&gt;The logits $\mathbf{o}$ then are simply the pre-softmax values
that determining the probabilities assigned to each category.
Summarizing it all in vector notation we get
${\mathbf{o}}^{(i)} = \mathbf{W} {\mathbf{x}}^{(i)} + {\mathbf{b}}$,
where ${\hat{\mathbf{y}}}^{(i)} = \mathrm{softmax}({\mathbf{o}}^{(i)})$.&lt;/p&gt;
&lt;h3 id=&quot;Vectorization-for-Minibatches&quot;&gt;Vectorization for Minibatches&lt;a class=&quot;anchor-link&quot; href=&quot;#Vectorization-for-Minibatches&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To improve computational efficiency and take advantage of GPUs,
we typically carry out vector calculations for minibatches of data.
Assume that we are given a minibatch $\mathbf{X}$ of examples
with dimensionality $d$ and batch size $n$.
Moreover, assume that we have $q$ categories (outputs).
Then the minibatch features $\mathbf{X}$ are in $\mathbb{R}^{n \times d}$,
weights $\mathbf{W} \in \mathbb{R}^{d \times q}$,
and the bias satisfies $\mathbf{b} \in \mathbb{R}^q$.&lt;/p&gt;
$$
\begin{aligned}
\mathbf{O} &amp;amp;= \mathbf{X} \mathbf{W} + \mathbf{b}, \\
\hat{\mathbf{Y}} &amp;amp; = \mathrm{softmax}(\mathbf{O}).
\end{aligned}
$$&lt;p&gt;This accelerates the dominant operation into
a matrix-matrix product $\mathbf{W} \mathbf{X}$
vs the matrix-vector products we would be executing
if we processed one example at a time.
The softmax itself can be computed
by exponentiating all entries in $\mathbf{O}$
and then normalizing them by the sum.&lt;/p&gt;
&lt;h2 id=&quot;Loss-Function&quot;&gt;Loss Function&lt;a class=&quot;anchor-link&quot; href=&quot;#Loss-Function&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;:label:&lt;code&gt;section_cross_entropy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, we need a &lt;em&gt;loss function&lt;/em&gt; to measure
the quality of our predicted probabilities.
We will rely on &lt;em&gt;likelihood maximization&lt;/em&gt;,
the very same concept that we encountered
when providing a probabilistic justification
for the least squares objective in linear regression
(:numref:&lt;code&gt;sec_linear_regression&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&quot;Log-Likelihood&quot;&gt;Log-Likelihood&lt;a class=&quot;anchor-link&quot; href=&quot;#Log-Likelihood&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The softmax function gives us a vector $\hat{\mathbf{y}}$,
which we can interpret as estimated conditional probabilities
of each class given the input $x$, e.g.,
$\hat{y}_1$ = $\hat{P}(y=\mathrm{cat} \mid \mathbf{x})$.
We can compare the estimates with reality
by checking how probable the &lt;em&gt;actual&lt;/em&gt; classes are
according to our model, given the features.&lt;/p&gt;
$$
P(Y \mid X) = \prod_{i=1}^n P(y^{(i)} \mid x^{(i)})
\text{ and thus }
-\log P(Y \mid X) = \sum_{i=1}^n -\log P(y^{(i)} \mid x^{(i)}).
$$&lt;p&gt;Maximizing $P(Y \mid X)$ (and thus equivalently minimizing $-\log P(Y \mid X)$)
corresponds to predicting the label well.
This yields the loss function
(we dropped the superscript $(i)$ to avoid notation clutter):&lt;/p&gt;
$$
l = -\log P(y \mid x) = - \sum_j y_j \log \hat{y}_j.
$$&lt;p&gt;For reasons explained later on, this loss function
is commonly called the &lt;em&gt;cross-entropy&lt;/em&gt; loss.
Here, we used that by construction $\hat{y}$
is a discrete probability distribution
and that the vector $\mathbf{y}$ is a one-hot vector.
Hence the sum over all coordinates $j$ vanishes for all but one term.
Since all $\hat{y}_j$ are probabilities,
their logarithm is never larger than $0$.
Consequently, the loss function cannot be minimized any further
if we correctly predict $y$ with &lt;em&gt;certainty&lt;/em&gt;,
i.e., if $P(y \mid x) = 1$ for the correct label.
Note that this is often not possible.
For example, there might be label noise in the dataset
(some examples may be mislabeled).
It may also not be possible when the input features
are not sufficiently informative
to classify every example perfectly.&lt;/p&gt;
&lt;h3 id=&quot;Softmax-and-Derivatives&quot;&gt;Softmax and Derivatives&lt;a class=&quot;anchor-link&quot; href=&quot;#Softmax-and-Derivatives&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Since the softmax and the corresponding loss are so common,
it is worth while understanding a bit better how it is computed.
Plugging $o$ into the definition of the loss $l$
and using the definition of the softmax we obtain:&lt;/p&gt;
$$
l = -\sum_j y_j \log \hat{y}_j = \sum_j y_j \log \sum_k \exp(o_k) - \sum_j y_j o_j
= \log \sum_k \exp(o_k) - \sum_j y_j o_j.
$$&lt;p&gt;To understand a bit better what is going on,
consider the derivative with respect to $o$. We get&lt;/p&gt;
$$
\partial_{o_j} l = \frac{\exp(o_j)}{\sum_k \exp(o_k)} - y_j = \mathrm{softmax}(\mathbf{o})_j - y_j = P(y = j \mid x) - y_j.
$$&lt;p&gt;In other words, the gradient is the difference
between the probability assigned to the true class by our model,
as expressed by the probability $P(y \mid x)$,
and what actually happened, as expressed by $y$.
In this sense, it is very similar to what we saw in regression,
where the gradient was the difference
between the observation $y$ and estimate $\hat{y}$. This is not coincidence.
In any &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_family&quot;&gt;exponential family&lt;/a&gt; model,
the gradients of the log-likelihood are given by precisely this term.
This fact makes computing gradients easy in practice.&lt;/p&gt;
&lt;h3 id=&quot;Cross-Entropy-Loss&quot;&gt;Cross-Entropy Loss&lt;a class=&quot;anchor-link&quot; href=&quot;#Cross-Entropy-Loss&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Now consider the case where we observe not just a single outcome
but an entire distribution over outcomes.
We can use the same representation as before for $y$.
The only difference is that rather than a vector containing only binary entries,
say $(0, 0, 1)$, we now have a generic probability vector, say $(0.1, 0.2, 0.7)$.
The math that we used previously to define the loss $l$ still works out fine,
just that the interpretation is slightly more general.
It is the expected value of the loss for a distribution over labels.&lt;/p&gt;
$$
l(\mathbf{y}, \hat{\mathbf{y}}) = - \sum_j y_j \log \hat{y}_j.
$$&lt;p&gt;This loss is called the cross-entropy loss and it is
one of the most commonly used losses for multiclass classification.
We can demystify the name by introducing the basics of information theory.&lt;/p&gt;
&lt;h2 id=&quot;Information-Theory-Basics&quot;&gt;Information Theory Basics&lt;a class=&quot;anchor-link&quot; href=&quot;#Information-Theory-Basics&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Information theory deals with the problem of encoding, decoding, transmitting
and manipulating information (also known as data) in as concise form as possible.&lt;/p&gt;
&lt;h3 id=&quot;Entropy&quot;&gt;Entropy&lt;a class=&quot;anchor-link&quot; href=&quot;#Entropy&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The central idea in information theory is to quantify the information content in data.
This quantity places a hard limit on our ability to compress the data.
In information theory, this quantity is called the &lt;a href=&quot;https://en.wikipedia.org/wiki/Entropy&quot;&gt;entropy&lt;/a&gt; of a distribution $p$,
and it is captured by the following equation:&lt;/p&gt;
$$
H[p] = \sum_j - p(j) \log p(j).
$$&lt;p&gt;One of the fundamental theorems of information theory states
that in order to encode data drawn randomly from the distribution $p$,
we need at least $H[p]$ &quot;nats&quot; to encode it.
If you wonder what a &quot;nat&quot; is, it is the equivalent of bit
but when using a code with base $e$ rather than one with base 2.
One nat is $\frac{1}{\log(2)} \approx 1.44$ bit.
$H[p] / 2$ is often also called the binary entropy.&lt;/p&gt;
&lt;h3 id=&quot;Surprisal&quot;&gt;Surprisal&lt;a class=&quot;anchor-link&quot; href=&quot;#Surprisal&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You might be wondering what compression has to do with prediction.
Imagine that we have a stream of data that we want to compress.
If it is always easy for us to predict the next token,
then this data is easy to compress!
Take the extreme example where every token in the stream always takes the same value.
That is a very boring data stream!
And not only it is boring, but it is easy to predict.
Because they are always the same, we do not have to transmit any information
to communicate the contents of the stream.
Easy to predict, easy to compress.&lt;/p&gt;
&lt;p&gt;However if we cannot perfectly predict every event,
then we might some times be surprised.
Our surprise is greater when we assigned an event lower probability.
For reasons that we will elaborate in the appendix,
Claude Shannon settled on $\log(1/p(j)) = -\log p(j)$
to quantify one's &lt;em&gt;surprisal&lt;/em&gt; at observing an event $j$
having assigned it a (subjective) probability $p(j)$.
The entropy is then the &lt;em&gt;expected surprisal&lt;/em&gt;
when one assigned the correct probabilities
(that truly match the data-generating process).
The entropy of the data is then the least surprised
that one can ever be (in expectation).&lt;/p&gt;
&lt;h3 id=&quot;Cross-Entropy-Revisited&quot;&gt;Cross-Entropy Revisited&lt;a class=&quot;anchor-link&quot; href=&quot;#Cross-Entropy-Revisited&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;So if entropy is level of surprise experienced
by someone who knows the true probability,
then you might be wondering, &lt;em&gt;what is cross-entropy?&lt;/em&gt;
The cross-entropy &lt;em&gt;from&lt;/em&gt; $p$ &lt;em&gt;to&lt;/em&gt; $q$, denoted $H(p, q)$,
is the expected surprisal of an observer with subjective probabilities $q$
upon seeing data that was actually generated according to probabilities $p$.
The lowest possible cross-entropy is achieved when $p=q$.
In this case, the cross-entropy from $p$ to $q$ is $H(p, p)= H(p)$.
Relating this back to our classification objective,
even if we get the best possible predictions, we will never be perfect.
Our loss is lower-bounded by the entropy given by the
actual conditional distributions $P(\mathbf{y} \mid \mathbf{x})$.&lt;/p&gt;
&lt;h3 id=&quot;Kullback-Leibler-Divergence&quot;&gt;Kullback-Leibler Divergence&lt;a class=&quot;anchor-link&quot; href=&quot;#Kullback-Leibler-Divergence&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Perhaps the most common way to measure the distance between two distributions
is to calculate the &lt;em&gt;Kullback-Leibler divergence&lt;/em&gt; $D(p\|q)$.
This is simply the difference between the cross-entropy and the entropy,
i.e., the additional cross-entropy incurred over the irreducible minimum value it could take:&lt;/p&gt;
$$
D(p\|q) = H(p, q) - H[p] = \sum_j p(j) \log \frac{p(j)}{q(j)}.
$$&lt;p&gt;Note that in classification, we do not know the true $p$,
so we cannot compute the entropy directly.
However, because the entropy is out of our control,
minimizing $D(p\|q)$ with respect to $q$
is equivalent to minimizing the cross-entropy loss.&lt;/p&gt;
&lt;p&gt;In short, we can think of the cross-entropy classification objective
in two ways: (i) as maximizing the likelihood of the observed data;
and (ii) as minimizing our surprise (and thus the number of bits)
required to communicate the labels.&lt;/p&gt;
&lt;h2 id=&quot;Model-Prediction-and-Evaluation&quot;&gt;Model Prediction and Evaluation&lt;a class=&quot;anchor-link&quot; href=&quot;#Model-Prediction-and-Evaluation&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;After training the softmax regression model, given any example features,
we can predict the probability of each output category.
Normally, we use the category with the highest predicted probability as the output category. The prediction is correct if it is consistent with the actual category (label).
In the next part of the experiment,
we will use accuracy to evaluate the model’s performance.
This is equal to the ratio between the number of correct predictions and the total number of predictions.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;Summary&lt;a class=&quot;anchor-link&quot; href=&quot;#Summary&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;We introduced the softmax operation which takes a vector and maps it into probabilities.&lt;/li&gt;
&lt;li&gt;Softmax regression applies to classification problems. It uses the probability distribution of the output category in the softmax operation.&lt;/li&gt;
&lt;li&gt;Cross-entropy is a good measure of the difference between two probability distributions. It measures the number of bits needed to encode the data given our model.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Exercises&quot;&gt;Exercises&lt;a class=&quot;anchor-link&quot; href=&quot;#Exercises&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Show that the Kullback-Leibler divergence $D(p\|q)$ is nonnegative for all distributions $p$ and $q$. Hint: use Jensen's inequality, i.e., use the fact that $-\log x$ is a convex function.&lt;/li&gt;
&lt;li&gt;Show that $\log \sum_j \exp(o_j)$ is a convex function in $o$.&lt;/li&gt;
&lt;li&gt;We can explore the connection between exponential families and the softmax in some more depth&lt;ul&gt;
&lt;li&gt;Compute the second derivative of the cross-entropy loss $l(y,\hat{y})$ for the softmax.&lt;/li&gt;
&lt;li&gt;Compute the variance of the distribution given by $\mathrm{softmax}(o)$ and show that it matches the second derivative computed above.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Assume that we have three classes which occur with equal probability, i.e., the probability vector is $(\frac{1}{3}, \frac{1}{3}, \frac{1}{3})$.&lt;ul&gt;
&lt;li&gt;What is the problem if we try to design a binary code for it? Can we match the entropy lower bound on the number of bits?&lt;/li&gt;
&lt;li&gt;Can you design a better code. Hint: what happens if we try to encode two independent observations? What if we encode $n$ observations jointly?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Softmax is a misnomer for the mapping introduced above (but everyone in deep learning uses it). The real softmax is defined as $\mathrm{RealSoftMax}(a, b) = \log (\exp(a) + \exp(b))$.&lt;ul&gt;
&lt;li&gt;Prove that $\mathrm{RealSoftMax}(a, b) &amp;gt; \mathrm{max}(a, b)$.&lt;/li&gt;
&lt;li&gt;Prove that this holds for $\lambda^{-1} \mathrm{RealSoftMax}(\lambda a, \lambda b)$, provided that $\lambda &amp;gt; 0$.&lt;/li&gt;
&lt;li&gt;Show that for $\lambda \to \infty$ we have $\lambda^{-1} \mathrm{RealSoftMax}(\lambda a, \lambda b) \to \mathrm{max}(a, b)$.&lt;/li&gt;
&lt;li&gt;What does the soft-min look like?&lt;/li&gt;
&lt;li&gt;Extend this to more than two numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.d2l.ai/t/46&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">PyTorch (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/05/PyTorch.html" rel="alternate" type="text/html" title="PyTorch (✗)" /><published>2020-02-05T00:00:00-06:00</published><updated>2020-02-05T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/05/PyTorch</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/05/PyTorch.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-05-PyTorch.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;De&amp;#287;i&amp;#351;kenler&quot;&gt;De&amp;#287;i&amp;#351;kenler&lt;a class=&quot;anchor-link&quot; href=&quot;#De&amp;#287;i&amp;#351;kenler&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Variables are containers for holding data and they're defined by a name and value.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/variables.png&quot; alt=&quot;&quot; style=&quot;max-width: 220px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Integer variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5
&amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can change the value of a variable by simply assigning a new value to it.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# String variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;hello
&amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;There are many different types of variables: integers, floats, strings, boolean etc.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# int variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5 &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# float variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5.0 &amp;lt;class &amp;#39;float&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# text variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5 &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# boolean variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;True &amp;lt;class &amp;#39;bool&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can also do operations with variables.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Variables can be used with each other&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We should always know what types of variables we're dealing with so we can do the right operations with them. Here's a common mistake that can happen if we're using the wrong variable type.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# int variables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;8
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# string variables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;53
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Lists&quot;&gt;Lists&lt;a class=&quot;anchor-link&quot; href=&quot;#Lists&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Lists are an ordered, mutable (changeable) collection of values that are &lt;em&gt;comma separated&lt;/em&gt; and enclosed by &lt;em&gt;square brackets&lt;/em&gt;. A list can be comprised of many different types of variables (below is a list with an integer, string and a float).&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/lists.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;hello&amp;#39;, 1.2]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Length of a list&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;You can add to a list by using the &lt;strong&gt;append&lt;/strong&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding to a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;hello&amp;#39;, 1.2, 7]
4
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Replacing items in a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bye&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;bye&amp;#39;, 1.2, 7]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Operations&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;bye&amp;#39;, 1.2, 7, 2.4, &amp;#39;world&amp;#39;]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Indexing-and-Slicing&quot;&gt;Indexing and Slicing&lt;a class=&quot;anchor-link&quot; href=&quot;#Indexing-and-Slicing&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Indexing and slicing from lists allow us to retrieve specific values within lists. Note that indices can be positive (starting from 0) or negative (-1 and lower, where -1 is the last item in the list).&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/indexing.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Indexing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[0]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[-1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the last item&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[-2]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the second to last item&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x[0]:  3
x[1]:  hello
x[-1]:  1.2
x[-2]:  hello
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Slicing&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[:]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# all indices&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1:]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 1 to the end of the list&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1:2]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 1 to index 2 (not including index 2)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[:-1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 0 to last index (not including last index)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x[:]:  [3, &amp;#39;hello&amp;#39;, 1.2]
x[1:]:  [&amp;#39;hello&amp;#39;, 1.2]
x[1:2]:  [&amp;#39;hello&amp;#39;]
x[:-1]:  [3, &amp;#39;hello&amp;#39;]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Tuples&quot;&gt;Tuples&lt;a class=&quot;anchor-link&quot; href=&quot;#Tuples&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Tuples are collections that are ordered and immutable (unchangeable). You will use these to store values that will never be changed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a tuple&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# tuples start and end with ()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;(3.0, &amp;#39;hello&amp;#39;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding values to a tuple&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;(3.0, &amp;#39;hello&amp;#39;, 5.6, 4)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Try to change (it won&amp;#39;t work and you&amp;#39;ll get an error)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_text output_error&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;TypeError&lt;/span&gt;                                 Traceback (most recent call last)
&lt;span class=&quot;ansi-green-fg&quot;&gt;&amp;lt;ipython-input-19-d0da6f639f74&amp;gt;&lt;/span&gt; in &lt;span class=&quot;ansi-cyan-fg&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class=&quot;ansi-blue-fg&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;ansi-green-fg&quot;&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class=&quot;ansi-red-fg&quot;&gt; &lt;/span&gt;x&lt;span class=&quot;ansi-blue-fg&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ansi-cyan-fg&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;ansi-blue-fg&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ansi-blue-fg&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ansi-cyan-fg&quot;&gt;1.2&lt;/span&gt;

&lt;span class=&quot;ansi-red-fg&quot;&gt;TypeError&lt;/span&gt;: &amp;#39;tuple&amp;#39; object does not support item assignment&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Dictionaries&quot;&gt;Dictionaries&lt;a class=&quot;anchor-link&quot; href=&quot;#Dictionaries&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Dictionaries are an unordered, mutable and indexed collection of key-value pairs. You can retrieve values based on the key and a dictionary cannot have two of the same keys.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/dictionaries.png&quot; alt=&quot;&quot; style=&quot;max-width: 320px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a dictionary&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Goku&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;brown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;brown&amp;#39;}
Goku
brown
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Changing the value for a key&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;green&amp;#39;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding new key-value pairs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;green&amp;#39;, &amp;#39;age&amp;#39;: 24}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Length of a dictionary&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;If-statements&quot;&gt;If statements&lt;a class=&quot;anchor-link&quot; href=&quot;#If-statements&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can use &lt;code&gt;if&lt;/code&gt; statements to conditionally do something. The conditions are defined by the words &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt; (which stands for else if) and &lt;code&gt;else&lt;/code&gt;. We can have as many &lt;code&gt;elif&lt;/code&gt; statements as we want. The indented code below each condition is the code that will execute if the condition is &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/if.png&quot; alt=&quot;&quot; style=&quot;max-width: 600px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# If statement&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;low&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# elif = else if&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;medium
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# If statement with a boolean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;it worked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;it worked
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Loops&quot;&gt;Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#Loops&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;For-Loops&quot;&gt;For Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#For-Loops&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A &lt;code&gt;for&lt;/code&gt; loop can iterate over a collection of values (lists, tuples, dictionaries, etc.) The indented code is executed for each item in the collection of values.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# For loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
broccoli
beans
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When the loop encounters the &lt;code&gt;break&lt;/code&gt; command, the loop will terminate immediately. If there were more items in the list, they will not be processed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# `break` from a for loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When the loop encounters the &lt;code&gt;continue&lt;/code&gt; command, the loop will skip all other operations for that item in the list only. If there were more items in the list, the loop will continue normally.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# `continue` to the next iteration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
beans
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;While-Loops&quot;&gt;While Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#While-Loops&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A &lt;code&gt;while&lt;/code&gt; loop can perform repeatedly as long as a condition is &lt;code&gt;True&lt;/code&gt;. We can use &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; commands in &lt;code&gt;while&lt;/code&gt; loops as well.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# While loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# same as x = x - 1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;2
1
0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Functions&quot;&gt;Functions&lt;a class=&quot;anchor-link&quot; href=&quot;#Functions&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Functions are a way to modularize reusable pieces of code. They're defined by the keyword &lt;code&gt;def&lt;/code&gt; which stands for definition and they can have the following components.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/define_function.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Define the function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Increase x by 2.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# explains what this function will do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Here are the components that may be required when we want to use the function. we need to ensure that the function name and the input parameters match with how we defined the function above.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/use_function.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use the function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A function can have as many input parameters and outputs as we want.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Function with multiple inputs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;join_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Combine first name and last name.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use the function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Goku&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mohandas&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Goku Mohandas
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: It's good practice to always use keyword argument when using a function so that it's very clear what input variable belongs to what function input parameter. On a related note, you will often see the terms &lt;strong&gt;*args&lt;/strong&gt; and &lt;strong&gt;**kwargs&lt;/strong&gt; which stand for arguments and keyword arguments. You can extract them when they are passed into a function. The significance of the * is that any number of arguments and keyword arguments can be passed into the function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, y: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x: 5, y: 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Classes&quot;&gt;Classes&lt;a class=&quot;anchor-link&quot; href=&quot;#Classes&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Classes are object constructors and are a fundamental component of object oriented programming in Python. They are composed of a set of functions that define the class and it's operations.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/classes.png&quot; alt=&quot;&quot; style=&quot;max-width: 500px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;__init__()-function&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt; function&lt;a class=&quot;anchor-link&quot; href=&quot;#__init__()-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The &lt;code&gt;init&lt;/code&gt; function is used when an instance of the class is initialized.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;&amp;lt;__main__.Pet object at 0x7fe487e9c358&amp;gt;
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;__str()__-function&quot;&gt;&lt;code&gt;__str()__&lt;/code&gt; function&lt;a class=&quot;anchor-link&quot; href=&quot;#__str()__-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The &lt;code&gt;print (my_dog)&lt;/code&gt; command printed something not so relevant to us. Let's fix that with the &lt;code&gt;__str()__&lt;/code&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Output when printing an instance of a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scooby
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Classes can be customized with &lt;code&gt;magic&lt;/code&gt; functions like, &lt;code&gt;__str__&lt;/code&gt;, to enable powerful operations. We'll be exploring additional built-in functions in subsequent notebooks (like &lt;code&gt;__iter__&lt;/code&gt; and &lt;code&gt;__getitem__&lt;/code&gt;) but if you're curious, here is a &lt;a href=&quot;https://rszalski.github.io/magicmethods/&quot;&gt;tutorial&lt;/a&gt; on more magic methods.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Object-methods&quot;&gt;Object methods&lt;a class=&quot;anchor-link&quot; href=&quot;#Object-methods&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Output when printing an instance of a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Change the name of your Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scooby
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Using a class&amp;#39;s function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scrappy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scrappy
Scrappy
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Inheritance&quot;&gt;Inheritance&lt;a class=&quot;anchor-link&quot; href=&quot;#Inheritance&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Inheritance allows you to inherit all the properties and methods from another class (the parent). Notice how we inherited the initialized variables from the parent &lt;code&gt;Pet&lt;/code&gt; class like species and name. We also inherited the &lt;code&gt;change_name&lt;/code&gt; function. But for the &lt;code&gt;__str__&lt;/code&gt; function, we define our own version to overwrite the &lt;code&gt;Pet&lt;/code&gt; class' &lt;code&gt;__str__&lt;/code&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Great Dane&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Great Dane named Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Scooby Doo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Great Dane named Scooby Doo
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Decorators&quot;&gt;Decorators&lt;a class=&quot;anchor-link&quot; href=&quot;#Decorators&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Recall that functions allow us to modularize code and reuse them. However, we'll often want to add some functionality before or after the main function executes and we may want to do this for many different functions. Instead of adding more code to the original function, we can use decorators!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;decorators&lt;/strong&gt;: augment a function with pre/post-processing. Decorators wrap around the main function and allow us to operate on the inputs and or outputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Suppose we have a function called &lt;code&gt;operations&lt;/code&gt; which increments the input value x by 1.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;2&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now let's say we want to increment our input x by 1 before and after the &lt;code&gt;operations&lt;/code&gt; function executes and, to illustrate this example, let's say the increments have to be separate steps. Here's how we would do it by changing the original code:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;4&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We were able to achieve what we want but we now increased the size of our &lt;code&gt;operations&lt;/code&gt; function and if we want to do the same incrementation for any other function, we have to add the same code to all of those as well ... not very efficient. To solve this, let's create a decorator called &lt;code&gt;add&lt;/code&gt; which increments &lt;code&gt;x&lt;/code&gt; by 1 before and after the main function &lt;code&gt;f&lt;/code&gt; executes.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Creating-a-decorator-function&quot;&gt;Creating a decorator function&lt;a class=&quot;anchor-link&quot; href=&quot;#Creating-a-decorator-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The decorator function accepts a function &lt;code&gt;f&lt;/code&gt; which is the function we wish to wrap around (in our case, it's &lt;code&gt;operations&lt;/code&gt;). The output of the decorator is its &lt;code&gt;wrapper&lt;/code&gt; function which receives the arguments and keyword arguments passed to function &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Inside the &lt;code&gt;wrapper&lt;/code&gt; function, we can extract the input parameters &lt;code&gt;[line 5]&lt;/code&gt; passed to function &lt;code&gt;f&lt;/code&gt; and make any changes we want &lt;code&gt;[line 6]&lt;/code&gt;. Then the function &lt;code&gt;f&lt;/code&gt; is executed &lt;code&gt;[line 7]&lt;/code&gt; and then we can make changes to the outputs as well &lt;code&gt;[line 8]&lt;/code&gt;. Finally, the &lt;code&gt;wrapper&lt;/code&gt; function will return some value(s) &lt;code&gt;[line 9]&lt;/code&gt; which is what the decorator returns as well since it returns &lt;code&gt;wrapper&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# .get() if not altering x&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes before function f&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes after function f&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can use this decorator by simply adding it to the top of our main function preceded by the &lt;code&gt;@&lt;/code&gt; symbol.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;4&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Suppose we wanted to debug and see what function actually executed with &lt;code&gt;operations&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__doc__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;(&amp;#39;wrapper&amp;#39;, &amp;#39;Wrapper function for @add.&amp;#39;)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The function name and docstring are not what we're looking for but it appears this way because the &lt;code&gt;wrapper&lt;/code&gt; function is what was executed. In order to fix this, Python offers &lt;code&gt;functools.wraps&lt;/code&gt; which carries the main function's metadata.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;functools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wraps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@wraps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__doc__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;(&amp;#39;operations&amp;#39;, &amp;#39;Basic operations.&amp;#39;)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Awesome! We were able to decorate our main function &lt;code&gt;operation&lt;/code&gt; to achieve the customization we wanted without actually altering the function. We can reuse our decorator for other functions that may need the same customization!&lt;/p&gt;
&lt;p&gt;This was a dummy example to show how decorators work but we'll be using them heavily during our production ML lessons. A simple scenario would be using decorators to create uniform JSON responses from each API endpoint without including the bulky code in each endpoint.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Callbacks&quot;&gt;Callbacks&lt;a class=&quot;anchor-link&quot; href=&quot;#Callbacks&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Decorators allow for customized operations before and after the main function's execution but what about in between? Suppose we want to conditionally/situationally do some operations. Instead of writing a whole bunch of if-statements and make our functions bulky, we can use callbacks!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;callbacks&lt;/strong&gt;: conditional/situational processing within the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Our callbacks will be classes that have functions with key names that will execute at various periods during the main function's execution. The function names are up to us but we need to invoke the same callback functions within our main function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Callback&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can pass in as many callbacks as we want and because they have appropriately named functions, they will be invoked at the appropriate times.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;2&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[1, 2]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Putting-it-all-together&quot;&gt;Putting it all together&lt;a class=&quot;anchor-link&quot; href=&quot;#Putting-it-all-together&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;decorators + callbacks = powerful customization &lt;em&gt;before&lt;/em&gt;, &lt;em&gt;during&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt; the main function’s execution without increasing its complexity. We will be using this duo to create powerful ML training scripts that are highly customizable in future lessons.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/decorators.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;functools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wraps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@wraps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# .get() if not altering x&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes before function f&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# can do things post function f as well&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Callback&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Main function&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[1, 2, 3]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Additional-resources&quot;&gt;Additional resources&lt;a class=&quot;anchor-link&quot; href=&quot;#Additional-resources&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Python 3&lt;/strong&gt;: This was a very quick look at Python but it's good enough for practical machine learning and we'll be learning more in future lessons. If you want to learn more, check out this &lt;a href=&quot;https://www.w3schools.com/python/default.asp&quot;&gt;free Python3 course&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;hr /&gt;
&lt;p&gt;Share and discover ML projects at &lt;a href=&quot;https://madewithml.com/&quot;&gt;Made With ML&lt;/a&gt;.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://github.com/madewithml/basics&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/madewithml/basics.svg?style=social&amp;amp;label=Star&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/company/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/madewithml.svg?label=Follow&amp;amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Python (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/01/Python.html" rel="alternate" type="text/html" title="Python (✗)" /><published>2020-02-01T00:00:00-06:00</published><updated>2020-02-01T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/01/Python</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/02/01/Python.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-02-01-Python.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;De&amp;#287;i&amp;#351;kenler&quot;&gt;De&amp;#287;i&amp;#351;kenler&lt;a class=&quot;anchor-link&quot; href=&quot;#De&amp;#287;i&amp;#351;kenler&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Variables are containers for holding data and they're defined by a name and value.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/variables.png&quot; alt=&quot;&quot; style=&quot;max-width: 220px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Integer variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5
&amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can change the value of a variable by simply assigning a new value to it.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# String variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;hello
&amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;There are many different types of variables: integers, floats, strings, boolean etc.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# int variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5 &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# float variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5.0 &amp;lt;class &amp;#39;float&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# text variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;5 &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# boolean variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;True &amp;lt;class &amp;#39;bool&amp;#39;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can also do operations with variables.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Variables can be used with each other&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We should always know what types of variables we're dealing with so we can do the right operations with them. Here's a common mistake that can happen if we're using the wrong variable type.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# int variables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;8
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# string variables&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;53
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Lists&quot;&gt;Lists&lt;a class=&quot;anchor-link&quot; href=&quot;#Lists&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Lists are an ordered, mutable (changeable) collection of values that are &lt;em&gt;comma separated&lt;/em&gt; and enclosed by &lt;em&gt;square brackets&lt;/em&gt;. A list can be comprised of many different types of variables (below is a list with an integer, string and a float).&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/lists.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;hello&amp;#39;, 1.2]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Length of a list&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;You can add to a list by using the &lt;strong&gt;append&lt;/strong&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding to a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;hello&amp;#39;, 1.2, 7]
4
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Replacing items in a list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bye&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;bye&amp;#39;, 1.2, 7]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Operations&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[3, &amp;#39;bye&amp;#39;, 1.2, 7, 2.4, &amp;#39;world&amp;#39;]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Indexing-and-Slicing&quot;&gt;Indexing and Slicing&lt;a class=&quot;anchor-link&quot; href=&quot;#Indexing-and-Slicing&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Indexing and slicing from lists allow us to retrieve specific values within lists. Note that indices can be positive (starting from 0) or negative (-1 and lower, where -1 is the last item in the list).&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/indexing.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Indexing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[0]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[-1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the last item&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[-2]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the second to last item&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x[0]:  3
x[1]:  hello
x[-1]:  1.2
x[-2]:  hello
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Slicing&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[:]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# all indices&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1:]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 1 to the end of the list&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[1:2]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 1 to index 2 (not including index 2)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[:-1]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 0 to last index (not including last index)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x[:]:  [3, &amp;#39;hello&amp;#39;, 1.2]
x[1:]:  [&amp;#39;hello&amp;#39;, 1.2]
x[1:2]:  [&amp;#39;hello&amp;#39;]
x[:-1]:  [3, &amp;#39;hello&amp;#39;]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Tuples&quot;&gt;Tuples&lt;a class=&quot;anchor-link&quot; href=&quot;#Tuples&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Tuples are collections that are ordered and immutable (unchangeable). You will use these to store values that will never be changed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a tuple&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# tuples start and end with ()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;(3.0, &amp;#39;hello&amp;#39;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding values to a tuple&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;(3.0, &amp;#39;hello&amp;#39;, 5.6, 4)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Try to change (it won&amp;#39;t work and you&amp;#39;ll get an error)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_text output_error&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;TypeError&lt;/span&gt;                                 Traceback (most recent call last)
&lt;span class=&quot;ansi-green-fg&quot;&gt;&amp;lt;ipython-input-19-d0da6f639f74&amp;gt;&lt;/span&gt; in &lt;span class=&quot;ansi-cyan-fg&quot;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;&lt;span class=&quot;ansi-blue-fg&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;ansi-green-fg&quot;&gt;----&amp;gt; 1&lt;/span&gt;&lt;span class=&quot;ansi-red-fg&quot;&gt; &lt;/span&gt;x&lt;span class=&quot;ansi-blue-fg&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ansi-cyan-fg&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;ansi-blue-fg&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ansi-blue-fg&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ansi-cyan-fg&quot;&gt;1.2&lt;/span&gt;

&lt;span class=&quot;ansi-red-fg&quot;&gt;TypeError&lt;/span&gt;: &amp;#39;tuple&amp;#39; object does not support item assignment&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Dictionaries&quot;&gt;Dictionaries&lt;a class=&quot;anchor-link&quot; href=&quot;#Dictionaries&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Dictionaries are an unordered, mutable and indexed collection of key-value pairs. You can retrieve values based on the key and a dictionary cannot have two of the same keys.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/dictionaries.png&quot; alt=&quot;&quot; style=&quot;max-width: 320px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a dictionary&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Goku&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;brown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;brown&amp;#39;}
Goku
brown
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Changing the value for a key&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;eye_color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;green&amp;#39;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding new key-value pairs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{&amp;#39;name&amp;#39;: &amp;#39;Goku&amp;#39;, &amp;#39;eye_color&amp;#39;: &amp;#39;green&amp;#39;, &amp;#39;age&amp;#39;: 24}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Length of a dictionary&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;If-statements&quot;&gt;If statements&lt;a class=&quot;anchor-link&quot; href=&quot;#If-statements&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can use &lt;code&gt;if&lt;/code&gt; statements to conditionally do something. The conditions are defined by the words &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt; (which stands for else if) and &lt;code&gt;else&lt;/code&gt;. We can have as many &lt;code&gt;elif&lt;/code&gt; statements as we want. The indented code below each condition is the code that will execute if the condition is &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/if.png&quot; alt=&quot;&quot; style=&quot;max-width: 600px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# If statement&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;low&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# elif = else if&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;medium
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# If statement with a boolean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;it worked&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;it worked
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Loops&quot;&gt;Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#Loops&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;For-Loops&quot;&gt;For Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#For-Loops&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A &lt;code&gt;for&lt;/code&gt; loop can iterate over a collection of values (lists, tuples, dictionaries, etc.) The indented code is executed for each item in the collection of values.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# For loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
broccoli
beans
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When the loop encounters the &lt;code&gt;break&lt;/code&gt; command, the loop will terminate immediately. If there were more items in the list, they will not be processed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# `break` from a for loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When the loop encounters the &lt;code&gt;continue&lt;/code&gt; command, the loop will skip all other operations for that item in the list only. If there were more items in the list, the loop will continue normally.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# `continue` to the next iteration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;carrots&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;broccoli&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;veggie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;carrots
beans
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;While-Loops&quot;&gt;While Loops&lt;a class=&quot;anchor-link&quot; href=&quot;#While-Loops&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A &lt;code&gt;while&lt;/code&gt; loop can perform repeatedly as long as a condition is &lt;code&gt;True&lt;/code&gt;. We can use &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; commands in &lt;code&gt;while&lt;/code&gt; loops as well.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# While loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# same as x = x - 1&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;2
1
0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Functions&quot;&gt;Functions&lt;a class=&quot;anchor-link&quot; href=&quot;#Functions&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Functions are a way to modularize reusable pieces of code. They're defined by the keyword &lt;code&gt;def&lt;/code&gt; which stands for definition and they can have the following components.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/define_function.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Define the function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Increase x by 2.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# explains what this function will do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Here are the components that may be required when we want to use the function. we need to ensure that the function name and the input parameters match with how we defined the function above.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/use_function.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use the function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;A function can have as many input parameters and outputs as we want.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Function with multiple inputs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;join_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Combine first name and last name.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use the function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Goku&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mohandas&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Goku Mohandas
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: It's good practice to always use keyword argument when using a function so that it's very clear what input variable belongs to what function input parameter. On a related note, you will often see the terms &lt;strong&gt;*args&lt;/strong&gt; and &lt;strong&gt;**kwargs&lt;/strong&gt; which stand for arguments and keyword arguments. You can extract them when they are passed into a function. The significance of the * is that any number of arguments and keyword arguments can be passed into the function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, y: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x: 5, y: 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Classes&quot;&gt;Classes&lt;a class=&quot;anchor-link&quot; href=&quot;#Classes&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Classes are object constructors and are a fundamental component of object oriented programming in Python. They are composed of a set of functions that define the class and it's operations.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/classes.png&quot; alt=&quot;&quot; style=&quot;max-width: 500px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;__init__()-function&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt; function&lt;a class=&quot;anchor-link&quot; href=&quot;#__init__()-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The &lt;code&gt;init&lt;/code&gt; function is used when an instance of the class is initialized.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;&amp;lt;__main__.Pet object at 0x7fe487e9c358&amp;gt;
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;__str()__-function&quot;&gt;&lt;code&gt;__str()__&lt;/code&gt; function&lt;a class=&quot;anchor-link&quot; href=&quot;#__str()__-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The &lt;code&gt;print (my_dog)&lt;/code&gt; command printed something not so relevant to us. Let's fix that with the &lt;code&gt;__str()__&lt;/code&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Output when printing an instance of a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scooby
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Classes can be customized with &lt;code&gt;magic&lt;/code&gt; functions like, &lt;code&gt;__str__&lt;/code&gt;, to enable powerful operations. We'll be exploring additional built-in functions in subsequent notebooks (like &lt;code&gt;__iter__&lt;/code&gt; and &lt;code&gt;__getitem__&lt;/code&gt;) but if you're curious, here is a &lt;a href=&quot;https://rszalski.github.io/magicmethods/&quot;&gt;tutorial&lt;/a&gt; on more magic methods.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Object-methods&quot;&gt;Object methods&lt;a class=&quot;anchor-link&quot; href=&quot;#Object-methods&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating the class&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Class object for a pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Output when printing an instance of a Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Change the name of your Pet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Creating an instance of a class&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scooby
Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Using a class&amp;#39;s function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scrappy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;dog named Scrappy
Scrappy
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Inheritance&quot;&gt;Inheritance&lt;a class=&quot;anchor-link&quot; href=&quot;#Inheritance&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Inheritance allows you to inherit all the properties and methods from another class (the parent). Notice how we inherited the initialized variables from the parent &lt;code&gt;Pet&lt;/code&gt; class like species and name. We also inherited the &lt;code&gt;change_name&lt;/code&gt; function. But for the &lt;code&gt;__str__&lt;/code&gt; function, we define our own version to overwrite the &lt;code&gt;Pet&lt;/code&gt; class' &lt;code&gt;__str__&lt;/code&gt; function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; named &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;breed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Great Dane&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Scooby&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Great Dane named Scooby
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Scooby Doo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scooby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Great Dane named Scooby Doo
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Decorators&quot;&gt;Decorators&lt;a class=&quot;anchor-link&quot; href=&quot;#Decorators&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Recall that functions allow us to modularize code and reuse them. However, we'll often want to add some functionality before or after the main function executes and we may want to do this for many different functions. Instead of adding more code to the original function, we can use decorators!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;decorators&lt;/strong&gt;: augment a function with pre/post-processing. Decorators wrap around the main function and allow us to operate on the inputs and or outputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Suppose we have a function called &lt;code&gt;operations&lt;/code&gt; which increments the input value x by 1.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;2&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now let's say we want to increment our input x by 1 before and after the &lt;code&gt;operations&lt;/code&gt; function executes and, to illustrate this example, let's say the increments have to be separate steps. Here's how we would do it by changing the original code:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;4&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We were able to achieve what we want but we now increased the size of our &lt;code&gt;operations&lt;/code&gt; function and if we want to do the same incrementation for any other function, we have to add the same code to all of those as well ... not very efficient. To solve this, let's create a decorator called &lt;code&gt;add&lt;/code&gt; which increments &lt;code&gt;x&lt;/code&gt; by 1 before and after the main function &lt;code&gt;f&lt;/code&gt; executes.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Creating-a-decorator-function&quot;&gt;Creating a decorator function&lt;a class=&quot;anchor-link&quot; href=&quot;#Creating-a-decorator-function&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The decorator function accepts a function &lt;code&gt;f&lt;/code&gt; which is the function we wish to wrap around (in our case, it's &lt;code&gt;operations&lt;/code&gt;). The output of the decorator is its &lt;code&gt;wrapper&lt;/code&gt; function which receives the arguments and keyword arguments passed to function &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Inside the &lt;code&gt;wrapper&lt;/code&gt; function, we can extract the input parameters &lt;code&gt;[line 5]&lt;/code&gt; passed to function &lt;code&gt;f&lt;/code&gt; and make any changes we want &lt;code&gt;[line 6]&lt;/code&gt;. Then the function &lt;code&gt;f&lt;/code&gt; is executed &lt;code&gt;[line 7]&lt;/code&gt; and then we can make changes to the outputs as well &lt;code&gt;[line 8]&lt;/code&gt;. Finally, the &lt;code&gt;wrapper&lt;/code&gt; function will return some value(s) &lt;code&gt;[line 9]&lt;/code&gt; which is what the decorator returns as well since it returns &lt;code&gt;wrapper&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# .get() if not altering x&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes before function f&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes after function f&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can use this decorator by simply adding it to the top of our main function preceded by the &lt;code&gt;@&lt;/code&gt; symbol.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;4&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Suppose we wanted to debug and see what function actually executed with &lt;code&gt;operations&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__doc__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;(&amp;#39;wrapper&amp;#39;, &amp;#39;Wrapper function for @add.&amp;#39;)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The function name and docstring are not what we're looking for but it appears this way because the &lt;code&gt;wrapper&lt;/code&gt; function is what was executed. In order to fix this, Python offers &lt;code&gt;functools.wraps&lt;/code&gt; which carries the main function's metadata.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;functools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wraps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@wraps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__doc__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;(&amp;#39;operations&amp;#39;, &amp;#39;Basic operations.&amp;#39;)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Awesome! We were able to decorate our main function &lt;code&gt;operation&lt;/code&gt; to achieve the customization we wanted without actually altering the function. We can reuse our decorator for other functions that may need the same customization!&lt;/p&gt;
&lt;p&gt;This was a dummy example to show how decorators work but we'll be using them heavily during our production ML lessons. A simple scenario would be using decorators to create uniform JSON responses from each API endpoint without including the bulky code in each endpoint.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Callbacks&quot;&gt;Callbacks&lt;a class=&quot;anchor-link&quot; href=&quot;#Callbacks&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Decorators allow for customized operations before and after the main function's execution but what about in between? Suppose we want to conditionally/situationally do some operations. Instead of writing a whole bunch of if-statements and make our functions bulky, we can use callbacks!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;callbacks&lt;/strong&gt;: conditional/situational processing within the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Our callbacks will be classes that have functions with key names that will execute at various periods during the main function's execution. The function names are up to us but we need to invoke the same callback functions within our main function.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Callback&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can pass in as many callbacks as we want and because they have appropriately named functions, they will be invoked at the appropriate times.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;2&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[1, 2]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Putting-it-all-together&quot;&gt;Putting it all together&lt;a class=&quot;anchor-link&quot; href=&quot;#Putting-it-all-together&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;decorators + callbacks = powerful customization &lt;em&gt;before&lt;/em&gt;, &lt;em&gt;during&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt; the main function’s execution without increasing its complexity. We will be using this duo to create powerful ML training scripts that are highly customizable in future lessons.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/02_Python/decorators.png&quot; alt=&quot;&quot; style=&quot;max-width: 350px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;functools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wraps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Decorator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@wraps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper function for @add.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# .get() if not altering x&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# executes before function f&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# can do things post function f as well&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Callback&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Main function&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@add&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Basic operations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;3&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[1, 2, 3]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Additional-resources&quot;&gt;Additional resources&lt;a class=&quot;anchor-link&quot; href=&quot;#Additional-resources&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Python 3&lt;/strong&gt;: This was a very quick look at Python but it's good enough for practical machine learning and we'll be learning more in future lessons. If you want to learn more, check out this &lt;a href=&quot;https://www.w3schools.com/python/default.asp&quot;&gt;free Python3 course&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;hr /&gt;
&lt;p&gt;Share and discover ML projects at &lt;a href=&quot;https://madewithml.com/&quot;&gt;Made With ML&lt;/a&gt;.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://github.com/madewithml/basics&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/madewithml/basics.svg?style=social&amp;amp;label=Star&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/company/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/madewithml.svg?label=Follow&amp;amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Numpy (✗)</title><link href="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/01/01/NumPy.html" rel="alternate" type="text/html" title="Numpy (✗)" /><published>2020-01-01T00:00:00-06:00</published><updated>2020-01-01T00:00:00-06:00</updated><id>https://unverciftci.github.io/derin_ogrenme/jupyter/2020/01/01/NumPy</id><content type="html" xml:base="https://unverciftci.github.io/derin_ogrenme/jupyter/2020/01/01/NumPy.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-01-01-NumPy.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Set-up&quot;&gt;Set up&lt;a class=&quot;anchor-link&quot; href=&quot;#Set-up&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Set seed for reproducibility&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Basics&quot;&gt;Basics&lt;a class=&quot;anchor-link&quot; href=&quot;#Basics&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Let's take a took at how to create tensors with NumPy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tensor&lt;/strong&gt;: collection of values &lt;/li&gt;
&lt;/ul&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/tensors.png&quot; alt=&quot;&quot; style=&quot;max-width: 650px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Scalar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# scalar&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Number of dimensions&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x ndim: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Dimensions&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x shape:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Size of elements&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x size: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Data type&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x dtype: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:  6
x ndim:  0
x shape: ()
x size:  1
x dtype:  int64
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Vector&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x ndim: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x shape:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x size: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x dtype: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# notice the float datatype&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:  [1.3 2.2 1.7]
x ndim:  1
x shape: (3,)
x size:  3
x dtype:  float64
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Matrix&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x ndim: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x shape:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x size: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x dtype: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[1 2]
 [3 4]]
x ndim:  2
x shape: (2, 2)
x size:  4
x dtype:  int64
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 3-D Tensor&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x ndim: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x shape:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x size: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x dtype: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[[1 2]
  [3 4]]

 [[5 6]
  [7 8]]]
x ndim:  3
x shape: (2, 2, 2)
x size:  8
x dtype:  int64
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;NumPy also comes with several functions that allow us to create tensors quickly.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Functions&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;np.zeros((2,2)):&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;np.ones((2,2)):&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;np.eye((2)):&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# identity matrix &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;np.random.random((2,2)):&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;np.zeros((2,2)):
 [[0. 0.]
 [0. 0.]]
np.ones((2,2)):
 [[1. 1.]
 [1. 1.]]
np.eye((2)):
 [[1. 0.]
 [0. 1.]]
np.random.random((2,2)):
 [[0.19151945 0.62210877]
 [0.43772774 0.78535858]]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Indexing&quot;&gt;Indexing&lt;a class=&quot;anchor-link&quot; href=&quot;#Indexing&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Keep in mind that when indexing the row and column, indices start at 0. And like indexing with lists, we can use negative indices as well (where -1 is the last item).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/indexing.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Indexing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[0]: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:  [1 2 3]
x[0]:  1
x:  [0 2 3]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Slicing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x column 1: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x row 0: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x rows 0,1 &amp;amp; cols 1,2: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]
x column 1:  [ 2  6 10]
x row 0:  [1 2 3 4]
x rows 0,1 &amp;amp; cols 1,2: 
 [[2 3]
 [6 7]]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Integer array indexing&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rows_to_get&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rows_to_get: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows_to_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cols_to_get&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cols_to_get: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols_to_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Combine sequences above to get values to get&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;indexed values: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows_to_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols_to_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (0, 0), (1, 2), (2, 1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]
rows_to_get:  [0 1 2]
cols_to_get:  [0 2 1]
indexed values:  [ 1  7 10]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Boolean array indexing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x &amp;gt; 2:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x[x &amp;gt; 2]:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[1 2]
 [3 4]
 [5 6]]
x &amp;gt; 2:
 [[False False]
 [ True  True]
 [ True  True]]
x[x &amp;gt; 2]:
 [3 4 5 6]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Arithmetic&quot;&gt;Arithmetic&lt;a class=&quot;anchor-link&quot; href=&quot;#Arithmetic&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Basic math&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x + y:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or x + y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x - y:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or x - y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x * y:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or x * y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x + y:
 [[2. 4.]
 [6. 8.]]
x - y:
 [[0. 0.]
 [0. 0.]]
x * y:
 [[ 1.  4.]
 [ 9. 16.]]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Dot-product&quot;&gt;Dot product&lt;a class=&quot;anchor-link&quot; href=&quot;#Dot-product&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;One of the most common NumPy operations we’ll use in machine learning is matrix multiplication using the dot product. We take the rows of our first matrix (2) and the columns of our second matrix (2) to determine the dot product, giving us an output of &lt;code&gt;[2 X 2]&lt;/code&gt;. The only requirement is that the inside dimensions match, in this case the first matrix has 3 columns and the second matrix has 3 rows.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/dot.gif&quot; alt=&quot;&quot; style=&quot;max-width: 450px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Dot product&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# we can specify dtype&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; · &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;(2, 3) · (3, 2) = (2, 2)
[[ 58.  64.]
 [139. 154.]]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Axis-operations&quot;&gt;Axis operations&lt;a class=&quot;anchor-link&quot; href=&quot;#Axis-operations&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can also do operations across a specific axis.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/axis.gif&quot; alt=&quot;&quot; style=&quot;max-width: 450px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Sum across a dimension&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sum all: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# adds all elements&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sum axis=0: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# sum across rows&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sum axis=1: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# sum across columns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[[1 2]
 [3 4]]
sum all:  10
sum axis=0:  [4 6]
sum axis=1:  [3 7]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Min/max&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;min: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;max: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;min axis=0: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;min axis=1: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;min:  1
max:  6
min axis=0:  [1 2 3]
min axis=1:  [1 4]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Broadcasting&quot;&gt;Broadcasting&lt;a class=&quot;anchor-link&quot; href=&quot;#Broadcasting&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Here, we’re adding a vector with a scalar. Their dimensions aren’t compatible as is but how does NumPy still gives us the right result? This is where broadcasting comes in. The scalar is &lt;em&gt;broadcast&lt;/em&gt; across the vector so that they have compatible shapes.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/broadcasting.png&quot; alt=&quot;&quot; style=&quot;max-width: 300px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Broadcasting&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# vector&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# scalar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;z:
 [4 5]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Advanced&quot;&gt;Advanced&lt;a class=&quot;anchor-link&quot; href=&quot;#Advanced&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Transposing&quot;&gt;Transposing&lt;a class=&quot;anchor-link&quot; href=&quot;#Transposing&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We often need to change the dimensions of our tensors for operations like the dot product. If we need to switch two dimensions, we can transpose 
the tensor.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/transpose.png&quot; alt=&quot;&quot; style=&quot;max-width: 400px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Transposing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# flip dimensions at index 0 and 1&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[1 2 3]
 [4 5 6]]
x.shape:  (2, 3)
y:
 [[1 4]
 [2 5]
 [3 6]]
y.shape:  (3, 2)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Reshaping&quot;&gt;Reshaping&lt;a class=&quot;anchor-link&quot; href=&quot;#Reshaping&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Sometimes, we'll need to alter the dimensions of the matrix. Reshaping allows us to transform a tensor into different permissible shapes -- our reshaped tensor has the same amount of values in the tensor. (1X6 = 2X3). We can also use &lt;code&gt;-1&lt;/code&gt; on a dimension and NumPy will infer the dimension based on our input tensor.&lt;/p&gt;
&lt;p&gt;The way reshape works is by looking at each dimension of the new tensor and separating our original tensor into that many units. So here the dimension at index 0 of the new tensor is 2 so we divide our original tensor into 2 units, and each of those has 3 values.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/reshape.png&quot; alt=&quot;&quot; style=&quot;max-width: 450px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Reshaping&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;[[1 2 3 4 5 6]]
x.shape:  (1, 6)
y: 
 [[1 2 3]
 [4 5 6]]
y.shape:  (2, 3)
z: 
 [[1 2 3]
 [4 5 6]]
z.shape:  (2, 3)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Unintended-reshaping&quot;&gt;Unintended reshaping&lt;a class=&quot;anchor-link&quot; href=&quot;#Unintended-reshaping&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Though reshaping is very convenient to manipulate tensors, we must be careful of their pitfalls as well. Let's look at the example below. Suppose we have &lt;code&gt;x&lt;/code&gt;, which has the shape &lt;code&gt;[2 X 3 X 4]&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[[ 1  1  1  1]
  [ 2  2  2  2]
  [ 3  3  3  3]]
 [[10 10 10 10]
  [20 20 20 20]
  [30 30 30 30]]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We want to reshape x so that it has shape &lt;code&gt;[3 X 8]&lt;/code&gt; which we'll get by moving the dimension at index 0 to become the dimension at index 1 and then combining the last two dimensions. But when we do this, we want our output&lt;/p&gt;
&lt;p&gt;to look like:
✅&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[ 1  1  1  1 10 10 10 10]
 [ 2  2  2  2 20 20 20 20]
 [ 3  3  3  3 30 30 30 30]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and not like:
❌&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[ 1  1  1  1  2  2  2  2]
 [ 3  3  3  3 10 10 10 10]
 [20 20 20 20 30 30 30 30]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;even though they both have the same shape &lt;code&gt;[3X8]&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[[ 1  1  1  1]
  [ 2  2  2  2]
  [ 3  3  3  3]]

 [[10 10 10 10]
  [20 20 20 20]
  [30 30 30 30]]]
x.shape:  (2, 3, 4)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;When we naively do a reshape, we get the right shape but the values are not what we're looking for.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/reshape_wrong.png&quot; alt=&quot;&quot; style=&quot;max-width: 600px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Unintended reshaping&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z_incorrect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z_incorrect:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_incorrect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z_incorrect.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_incorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;z_incorrect:
 [[ 1  1  1  1  2  2  2  2]
 [ 3  3  3  3 10 10 10 10]
 [20 20 20 20 30 30 30 30]]
z_incorrect.shape:  (3, 8)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Instead, if we transpose the tensor and then do a reshape, we get our desired tensor. Transpose allows us to put our two vectors that we want to combine together and then we use reshape to join them together.
Always create a dummy example like this when you’re unsure about reshaping. Blindly going by the tensor shape can lead to lots of issues downstream.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;https://raw.githubusercontent.com/madewithml/images/master/basics/03_NumPy/reshape_right.png&quot; alt=&quot;&quot; style=&quot;max-width: 600px&quot; /&gt;
    
    
&lt;/figure&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Intended reshaping&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z_correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z_correct:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_correct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;z_correct.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z_correct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;y:
 [[[ 1  1  1  1]
  [10 10 10 10]]

 [[ 2  2  2  2]
  [20 20 20 20]]

 [[ 3  3  3  3]
  [30 30 30 30]]]
y.shape:  (3, 2, 4)
z_correct:
 [[ 1  1  1  1 10 10 10 10]
 [ 2  2  2  2 20 20 20 20]
 [ 3  3  3  3 30 30 30 30]]
z_correct.shape:  (3, 8)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Adding/removing-dimensions&quot;&gt;Adding/removing dimensions&lt;a class=&quot;anchor-link&quot; href=&quot;#Adding/removing-dimensions&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We can also easily add and remove dimensions to our tensors and we'll want to do this to make tensors compatible for certain operations.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Adding dimensions&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# expand dim 1&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# notice extra set of brackets are added&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[1 2 3]
 [4 5 6]]
x.shape:  (2, 3)
y: 
 [[[1 2 3]]

 [[4 5 6]]]
y.shape:  (2, 1, 3)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Removing dimensions&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# squeeze dim 1&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y.shape: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# notice extra set of brackets are gone&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;x:
 [[[1 2 3]]

 [[4 5 6]]]
x.shape:  (2, 1, 3)
y: 
 [[1 2 3]
 [4 5 6]]
y.shape:  (2, 3)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Additional-resources&quot;&gt;Additional resources&lt;a class=&quot;anchor-link&quot; href=&quot;#Additional-resources&quot;&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NumPy reference manual&lt;/strong&gt;: We don't have to memorize anything here and we will be taking a closer look at NumPy in the later lessons. If you want to learn more checkout the &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.15.1/reference/&quot;&gt;NumPy reference manual&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;hr /&gt;
&lt;p&gt;Share and discover ML projects at &lt;a href=&quot;https://madewithml.com/&quot;&gt;Made With ML&lt;/a&gt;.&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://github.com/madewithml/basics&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/madewithml/basics.svg?style=social&amp;amp;label=Star&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/company/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot; /&gt;&lt;/a&gt;&amp;nbsp;
&lt;a class=&quot;ai-header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/madewithml&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/madewithml.svg?label=Follow&amp;amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" /><media:content medium="image" url="https://unverciftci.github.io/derin_ogrenme/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>